//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by AbstractChoiceGenerator for ATMCommandParameters2Choice.  ISO2002 ID# _pz3tsYtHEeSxlKlAGYErFg.
//

using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices;

/// <summary>
/// Specific parameters attached to an ATM command.
/// </summary>
[KnownType(typeof(ATMCommandParameters2Choice.ATMRequiredGlobalStatus))]
[KnownType(typeof(ATMCommandParameters2Choice.ExpectedMessageFunction))]
[KnownType(typeof(ATMCommandParameters2Choice.RequiredConfigurationParameter))]
[KnownType(typeof(ATMCommandParameters2Choice.RequiredSecurityScheme))]
[KnownType(typeof(ATMCommandParameters2Choice.SecurityDevice))]
[KnownType(typeof(ATMCommandParameters2Choice.Key))]
public abstract partial record ATMCommandParameters2Choice_ : IIsoXmlSerilizable<ATMCommandParameters2Choice_>
{
    /// <summary>
    /// Serialize the state of this record per ISO 20022 specifications.
    /// Abstract here, overridden in each of the concrete choices.
    /// </summary>
    public abstract void Serialize(XmlWriter writer, string xmlNamespace);
    
    /// <summary>
    /// After detecting the choice being deserialized, defers the serialization of the element to the appropriate concrete choice record.
    /// </summary>
    public static ATMCommandParameters2Choice_ Deserialize(XElement element)
    {
        var elementWithPayload = element;
        return elementWithPayload.Name.LocalName switch
        {
             "ATMReqrdGblSts" => ATMCommandParameters2Choice.ATMRequiredGlobalStatus.Deserialize(elementWithPayload),
             "XpctdMsgFctn" => ATMCommandParameters2Choice.ExpectedMessageFunction.Deserialize(elementWithPayload),
             "ReqrdCfgtnParam" => ATMCommandParameters2Choice.RequiredConfigurationParameter.Deserialize(elementWithPayload),
             "ReqrdSctySchme" => ATMCommandParameters2Choice.RequiredSecurityScheme.Deserialize(elementWithPayload),
             "SctyDvc" => ATMCommandParameters2Choice.SecurityDevice.Deserialize(elementWithPayload),
             "Key" => ATMCommandParameters2Choice.Key.Deserialize(elementWithPayload),
            _ => throw new InvalidOperationException($@"Xml tag '{elementWithPayload.Name.LocalName}' does not correspond to a valid ATMCommandParameters2Choice choice.")
        };
    }
}
