//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by AbstractChoiceGenerator for AccountIdentification30Choice.  ISO2002 ID# _cLSqYHs8EeSTS7uHCe8FPQ.
//

using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices;

/// <summary>
/// Identifier of an account, as assigned by the account servicer.
/// </summary>
[KnownType(typeof(AccountIdentification30Choice.Card))]
[KnownType(typeof(AccountIdentification30Choice.MSISDN))]
[KnownType(typeof(AccountIdentification30Choice.EMail))]
[KnownType(typeof(AccountIdentification30Choice.IBAN))]
[KnownType(typeof(AccountIdentification30Choice.BBAN))]
[KnownType(typeof(AccountIdentification30Choice.UPIC))]
[KnownType(typeof(AccountIdentification30Choice.Domestic))]
[KnownType(typeof(AccountIdentification30Choice.Other))]
public abstract partial record AccountIdentification30Choice_ : IIsoXmlSerilizable<AccountIdentification30Choice_>
{
    /// <summary>
    /// Serialize the state of this record per ISO 20022 specifications.
    /// Abstract here, overridden in each of the concrete choices.
    /// </summary>
    public abstract void Serialize(XmlWriter writer, string xmlNamespace);
    
    /// <summary>
    /// After detecting the choice being deserialized, defers the serialization of the element to the appropriate concrete choice record.
    /// </summary>
    public static AccountIdentification30Choice_ Deserialize(XElement element)
    {
        var elementWithPayload = element;
        return elementWithPayload.Name.LocalName switch
        {
             "Card" => AccountIdentification30Choice.Card.Deserialize(elementWithPayload),
             "MSISDN" => AccountIdentification30Choice.MSISDN.Deserialize(elementWithPayload),
             "EMail" => AccountIdentification30Choice.EMail.Deserialize(elementWithPayload),
             "IBAN" => AccountIdentification30Choice.IBAN.Deserialize(elementWithPayload),
             "BBAN" => AccountIdentification30Choice.BBAN.Deserialize(elementWithPayload),
             "UPIC" => AccountIdentification30Choice.UPIC.Deserialize(elementWithPayload),
             "Dmst" => AccountIdentification30Choice.Domestic.Deserialize(elementWithPayload),
             "Othr" => AccountIdentification30Choice.Other.Deserialize(elementWithPayload),
            _ => throw new InvalidOperationException($@"Xml tag '{elementWithPayload.Name.LocalName}' does not correspond to a valid AccountIdentification30Choice choice.")
        };
    }
}
