//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ConcreteChoiceGenerator for PercentageAmount.  ISO2002 ID# _986x6HltEeG7BsjMvd1mEw_-131852339.
//

using BeneficialStrategies.Iso20022.Components;
using BeneficialStrategies.Iso20022.ExternalSchema;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices.AmountOrPercentage1Choice;

/// <summary>
/// Details related to an amount percentage.
/// </summary>
public partial record PercentageAmount : AmountOrPercentage1Choice_
     , IIsoXmlSerilizable<PercentageAmount>
{
    #nullable enable
    
    /// <summary>
    /// Percentage of an amount.
    /// </summary>
    public required IsoPercentageRate Rate { get; init; } 
    /// <summary>
    /// Indication of what the percentage is relative to.
    /// </summary>
    public required ExternalRelativeTo1Code RelativeTo { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public override void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Rate", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoPercentageRate(Rate)); // data type PercentageRate System.Decimal
        writer.WriteEndElement();
        writer.WriteStartElement(null, "RltvTo", xmlNamespace );
        writer.WriteValue(RelativeTo.ToString()); // Enum value
        writer.WriteEndElement();
    }
    public static new PercentageAmount Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
