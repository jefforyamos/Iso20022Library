//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by AbstractChoiceGenerator for AmountType3Choice.  ISO2002 ID# _P57LMNp-Ed-ak6NoX_4Aeg_326234878.
//

using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices;

/// <summary>
/// Specifies the amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.
/// </summary>
[KnownType(typeof(AmountType3Choice.InstructedAmount))]
[KnownType(typeof(AmountType3Choice.EquivalentAmount))]
public abstract partial record AmountType3Choice_ : IIsoXmlSerilizable<AmountType3Choice_>
{
    /// <summary>
    /// Serialize the state of this record per ISO 20022 specifications.
    /// Abstract here, overridden in each of the concrete choices.
    /// </summary>
    public abstract void Serialize(XmlWriter writer, string xmlNamespace);
    
    /// <summary>
    /// After detecting the choice being deserialized, defers the serialization of the element to the appropriate concrete choice record.
    /// </summary>
    public static AmountType3Choice_ Deserialize(XElement element)
    {
        var elementWithPayload = element;
        return elementWithPayload.Name.LocalName switch
        {
             "InstdAmt" => AmountType3Choice.InstructedAmount.Deserialize(elementWithPayload),
             "EqvtAmt" => AmountType3Choice.EquivalentAmount.Deserialize(elementWithPayload),
            _ => throw new InvalidOperationException($@"Xml tag '{elementWithPayload.Name.LocalName}' does not correspond to a valid AmountType3Choice choice.")
        };
    }
}
