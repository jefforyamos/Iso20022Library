//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ConcreteChoiceGenerator for Cleared.  ISO2002 ID# _Bemz8exYEemioJdkOVFBdw.
//

using BeneficialStrategies.Iso20022.Components;
using BeneficialStrategies.Iso20022.ExternalSchema;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices.Cleared12Choice;

/// <summary>
/// Indicates that the contract has been cleared.
/// </summary>
public partial record Cleared : Cleared12Choice_
     , IIsoXmlSerilizable<Cleared>
{
    #nullable enable
    
    /// <summary>
    /// Indicates that the contract is intended to be cleared.
    /// </summary>
    public NoReasonCode? Reason { get; init; } 
    /// <summary>
    /// Identifies the central counterparty (CCP) that cleared the transaction.
    /// </summary>
    public OrganisationIdentification10Choice_? CCP { get; init; } 
    /// <summary>
    /// Time and date when clearing took place.
    /// </summary>
    public IsoISODateTime? ClearingDateTime { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public override void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (Reason is NoReasonCode ReasonValue)
        {
            writer.WriteStartElement(null, "Rsn", xmlNamespace );
            writer.WriteValue(ReasonValue.ToString()); // Enum value
            writer.WriteEndElement();
        }
        if (CCP is OrganisationIdentification10Choice_ CCPValue)
        {
            writer.WriteStartElement(null, "CCP", xmlNamespace );
            CCPValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (ClearingDateTime is IsoISODateTime ClearingDateTimeValue)
        {
            writer.WriteStartElement(null, "ClrDtTm", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoISODateTime(ClearingDateTimeValue)); // data type ISODateTime System.DateTime
            writer.WriteEndElement();
        }
    }
    public static new Cleared Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
