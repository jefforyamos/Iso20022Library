//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ConcreteChoiceGenerator for FailedStatus.  ISO2002 ID# _RiPM19p-Ed-ak6NoX_4Aeg_-1878187408.
//

using BeneficialStrategies.Iso20022.Components;
using BeneficialStrategies.Iso20022.ExternalSchema;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices.CorporateActionMovementStatus1Choice;

/// <summary>
/// Provides information about the settlement failure.
/// </summary>
public partial record FailedStatus : CorporateActionMovementStatus1Choice_
     , IIsoXmlSerilizable<FailedStatus>
{
    #nullable enable
    
    /// <summary>
    /// Identification of the agent account.
    /// </summary>
    public required IsoMax35Text AgentAccountIdentification { get; init; } 
    /// <summary>
    /// Identification of the client account.
    /// </summary>
    public IsoMax35Text? ClientAccountIdentification { get; init; } 
    /// <summary>
    /// Identification of the party that owns the client account.
    /// </summary>
    public PartyIdentification2Choice_? AccountOwnerIdentification { get; init; } 
    /// <summary>
    /// Provides information about the resource movement that failed and the reason of the failure.
    /// </summary>
    public FailedMovement1? ResourceDetails { get; init;  } // Warning: Don't know multiplicity.
    // ID for the above is _Rjbfqtp-Ed-ak6NoX_4Aeg_-1713973917
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public override void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "AgtAcctId", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax35Text(AgentAccountIdentification)); // data type Max35Text System.String
        writer.WriteEndElement();
        if (ClientAccountIdentification is IsoMax35Text ClientAccountIdentificationValue)
        {
            writer.WriteStartElement(null, "ClntAcctId", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(ClientAccountIdentificationValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
        if (AccountOwnerIdentification is PartyIdentification2Choice_ AccountOwnerIdentificationValue)
        {
            writer.WriteStartElement(null, "AcctOwnrId", xmlNamespace );
            AccountOwnerIdentificationValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        // Not sure how to serialize ResourceDetails, multiplicity Unknown
    }
    public static new FailedStatus Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
