//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ConcreteChoiceGenerator for NameAndLocation.  ISO2002 ID# _mcwKscEcEea7jLfvGi1PDw.
//

using BeneficialStrategies.Iso20022.Components;
using BeneficialStrategies.Iso20022.ExternalSchema;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices.CounterpartyIdentification3Choice;

/// <summary>
/// Identification of the counterparty through the name and the location.
/// </summary>
public partial record NameAndLocation : CounterpartyIdentification3Choice_
     , IIsoXmlSerilizable<NameAndLocation>
{
    #nullable enable
    
    /// <summary>
    /// Internal name of the counterparty of the reporting agent used by the reporting agent.
    /// </summary>
    public required IsoMax70Text Name { get; init; } 
    /// <summary>
    /// Location of the country in which the counterparty is incorporated.
    /// </summary>
    public required CountryCode Location { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public override void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Nm", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax70Text(Name)); // data type Max70Text System.String
        writer.WriteEndElement();
        writer.WriteStartElement(null, "Lctn", xmlNamespace );
        writer.WriteValue(Location.ToString()); // Enum value
        writer.WriteEndElement();
    }
    public static new NameAndLocation Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
