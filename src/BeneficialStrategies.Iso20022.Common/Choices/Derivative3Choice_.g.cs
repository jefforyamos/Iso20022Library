//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by AbstractChoiceGenerator for Derivative3Choice.  ISO2002 ID# _w9mvYSe0Eei12pGEsJIAeQ.
//

using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices;

/// <summary>
/// Choice element to define a derivative instrument.
/// </summary>
[KnownType(typeof(Derivative3Choice.Commodity))]
[KnownType(typeof(Derivative3Choice.InterestRate))]
[KnownType(typeof(Derivative3Choice.ForeignExchange))]
[KnownType(typeof(Derivative3Choice.Equity))]
[KnownType(typeof(Derivative3Choice.ContractForDifference))]
[KnownType(typeof(Derivative3Choice.Credit))]
[KnownType(typeof(Derivative3Choice.EmissionAllowance))]
public abstract partial record Derivative3Choice_ : IIsoXmlSerilizable<Derivative3Choice_>
{
    /// <summary>
    /// Serialize the state of this record per ISO 20022 specifications.
    /// Abstract here, overridden in each of the concrete choices.
    /// </summary>
    public abstract void Serialize(XmlWriter writer, string xmlNamespace);
    
    /// <summary>
    /// After detecting the choice being deserialized, defers the serialization of the element to the appropriate concrete choice record.
    /// </summary>
    public static Derivative3Choice_ Deserialize(XElement element)
    {
        var elementWithPayload = element;
        return elementWithPayload.Name.LocalName switch
        {
             "Cmmdty" => Derivative3Choice.Commodity.Deserialize(elementWithPayload),
             "IntrstRate" => Derivative3Choice.InterestRate.Deserialize(elementWithPayload),
             "FX" => Derivative3Choice.ForeignExchange.Deserialize(elementWithPayload),
             "Eqty" => Derivative3Choice.Equity.Deserialize(elementWithPayload),
             "CtrctForDiff" => Derivative3Choice.ContractForDifference.Deserialize(elementWithPayload),
             "Cdt" => Derivative3Choice.Credit.Deserialize(elementWithPayload),
             "EmssnAllwnc" => Derivative3Choice.EmissionAllowance.Deserialize(elementWithPayload),
            _ => throw new InvalidOperationException($@"Xml tag '{elementWithPayload.Name.LocalName}' does not correspond to a valid Derivative3Choice choice.")
        };
    }
}
