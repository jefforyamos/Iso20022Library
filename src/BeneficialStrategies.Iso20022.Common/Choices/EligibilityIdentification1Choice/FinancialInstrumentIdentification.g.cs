//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ConcreteChoiceGenerator for FinancialInstrumentIdentification.  ISO2002 ID# _jBJ_9O5NEeCisYr99QEiWA_1649661981.
//

using BeneficialStrategies.Iso20022.Components;
using BeneficialStrategies.Iso20022.ExternalSchema;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices.EligibilityIdentification1Choice;

/// <summary>
/// ISIN used to identify the security to be defined as eligible.
/// </summary>
public partial record FinancialInstrumentIdentification : EligibilityIdentification1Choice_
     , IIsoXmlSerilizable<FinancialInstrumentIdentification>
{
    #nullable enable
    
    /// <summary>
    /// Contains the main value for the container.
    /// International Securities Identification Number (ISIN). A numbering system designed by the United Nation's International Organisation for Standardisation (ISO). The ISIN is composed of a 2-character prefix representing the country of issue, followed by the national security number (if one exists), and a check digit. Each country has a national numbering agency that assigns ISIN numbers for securities in that country.
    /// </summary>
    public required IsoISINIdentifier Value { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public override void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "FinInstrmId", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoISINIdentifier(Value)); // data type ISINIdentifier System.String
        writer.WriteEndElement();
    }
    public static new FinancialInstrumentIdentification Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
