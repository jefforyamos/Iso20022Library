//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ConcreteChoiceGenerator for CashAsset.  ISO2002 ID# _qD51c5y1Eem54rMzia0iag.
//

using BeneficialStrategies.Iso20022.Components;
using BeneficialStrategies.Iso20022.ExternalSchema;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices.FinancialInstrument62Choice;

/// <summary>
/// Identification of the cash asset.
/// </summary>
public partial record CashAsset : FinancialInstrument62Choice_
     , IIsoXmlSerilizable<CashAsset>
{
    #nullable enable
    
    /// <summary>
    /// Type of cash asset.
    /// </summary>
    public required CashAssetType1Choice_ CashAssetType { get; init; } 
    /// <summary>
    /// Currency of the asset in the holding.
    /// </summary>
    public required ActiveCurrencyCode HoldingCurrency { get; init; } 
    /// <summary>
    /// Additional information about the cash asset.
    /// </summary>
    public AdditionalInformation15? AdditionalInformation { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public override void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "CshAsstTp", xmlNamespace );
        CashAssetType.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "HldgCcy", xmlNamespace );
        writer.WriteValue(HoldingCurrency.ToString()); // Enum value
        writer.WriteEndElement();
        if (AdditionalInformation is AdditionalInformation15 AdditionalInformationValue)
        {
            writer.WriteStartElement(null, "AddtlInf", xmlNamespace );
            AdditionalInformationValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static new CashAsset Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
