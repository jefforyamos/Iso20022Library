//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ConcreteChoiceGenerator for MonetaryValue.  ISO2002 ID# _Y7YBd5jgEeqkLZLH6DK3UQ.
//

using BeneficialStrategies.Iso20022.Components;
using BeneficialStrategies.Iso20022.ExternalSchema;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices.FinancialInstrumentQuantity32Choice;

/// <summary>
/// Indicates that quantity is expressed as a monetary value.
/// </summary>
public partial record MonetaryValue : FinancialInstrumentQuantity32Choice_
     , IIsoXmlSerilizable<MonetaryValue>
{
    #nullable enable
    
    /// <summary>
    /// Contains the main value for the container.
    /// A number of monetary units specified in an active or a historic currency where the unit of currency is explicit and compliant with ISO 4217.
    /// </summary>
    public required IsoActiveOrHistoricCurrencyAnd19DecimalAmount Value { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public override void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "MntryVal", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoActiveOrHistoricCurrencyAnd19DecimalAmount(Value)); // data type ActiveOrHistoricCurrencyAnd19DecimalAmount System.Decimal
        writer.WriteEndElement();
    }
    public static new MonetaryValue Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
