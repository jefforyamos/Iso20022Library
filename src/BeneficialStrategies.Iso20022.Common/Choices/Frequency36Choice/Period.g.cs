//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ConcreteChoiceGenerator for Period.  ISO2002 ID# _seR6M2k2Eeanu6HLe77Rkg.
//

using BeneficialStrategies.Iso20022.Components;
using BeneficialStrategies.Iso20022.ExternalSchema;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices.Frequency36Choice;

/// <summary>
/// Specifies a frequency in terms of a count per period within a specified period type.
/// </summary>
public partial record Period : Frequency36Choice_
     , IIsoXmlSerilizable<Period>
{
    #nullable enable
    
    /// <summary>
    /// Period for which the number of instructions are to be created and processed.
    /// </summary>
    public required Frequency6Code Type { get; init; } 
    /// <summary>
    /// Number of instructions to be created and processed during the specified period.
    /// </summary>
    public required IsoDecimalNumber CountPerPeriod { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public override void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Tp", xmlNamespace );
        writer.WriteValue(Type.ToString()); // Enum value
        writer.WriteEndElement();
        writer.WriteStartElement(null, "CntPerPrd", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoDecimalNumber(CountPerPeriod)); // data type DecimalNumber System.UInt64
        writer.WriteEndElement();
    }
    public static new Period Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
