//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ConcreteChoiceGenerator for ToAmount.  ISO2002 ID# _O_mxM5lcEeeE1Ya-LgRsuQ.
//

using BeneficialStrategies.Iso20022.Components;
using BeneficialStrategies.Iso20022.ExternalSchema;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices.ImpliedCurrencyAmountRange1Choice;

/// <summary>
/// Upper boundary of a range of amount values.
/// </summary>
public partial record ToAmount : ImpliedCurrencyAmountRange1Choice_
     , IIsoXmlSerilizable<ToAmount>
{
    #nullable enable
    
    /// <summary>
    /// Amount value of the range limit.
    /// </summary>
    public required IsoImpliedCurrencyAndAmount BoundaryAmount { get; init; } 
    /// <summary>
    /// Indicates whether the boundary amount is included in the range of amount values.
    /// </summary>
    public required IsoYesNoIndicator Included { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public override void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "BdryAmt", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoImpliedCurrencyAndAmount(BoundaryAmount)); // data type ImpliedCurrencyAndAmount System.Decimal
        writer.WriteEndElement();
        writer.WriteStartElement(null, "Incl", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoYesNoIndicator(Included)); // data type YesNoIndicator System.String
        writer.WriteEndElement();
    }
    public static new ToAmount Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
