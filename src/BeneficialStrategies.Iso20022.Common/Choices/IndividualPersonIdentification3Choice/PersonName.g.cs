//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ConcreteChoiceGenerator for PersonName.  ISO2002 ID# _G6_504oWEeahcZ3Nzs1Qag.
//

using BeneficialStrategies.Iso20022.Components;
using BeneficialStrategies.Iso20022.ExternalSchema;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices.IndividualPersonIdentification3Choice;

/// <summary>
/// Name of the person that owns the account.
/// </summary>
public partial record PersonName : IndividualPersonIdentification3Choice_
     , IIsoXmlSerilizable<PersonName>
{
    #nullable enable
    
    /// <summary>
    /// First name of the person.
    /// </summary>
    public IsoMax35Text? GivenName { get; init; } 
    /// <summary>
    /// Second name of the person.
    /// </summary>
    public IsoMax35Text? MiddleName { get; init; } 
    /// <summary>
    /// Name by which the party is known and which is usually used to identify that party.
    /// </summary>
    public required IsoMax350Text Name { get; init; } 
    /// <summary>
    /// Gender of the person.
    /// </summary>
    public Gender1Code? Gender { get; init; } 
    /// <summary>
    /// Date on which the person is born.
    /// </summary>
    public IsoISODate? BirthDate { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public override void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (GivenName is IsoMax35Text GivenNameValue)
        {
            writer.WriteStartElement(null, "GvnNm", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(GivenNameValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
        if (MiddleName is IsoMax35Text MiddleNameValue)
        {
            writer.WriteStartElement(null, "MddlNm", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(MiddleNameValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
        writer.WriteStartElement(null, "Nm", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax350Text(Name)); // data type Max350Text System.String
        writer.WriteEndElement();
        if (Gender is Gender1Code GenderValue)
        {
            writer.WriteStartElement(null, "Gndr", xmlNamespace );
            writer.WriteValue(GenderValue.ToString()); // Enum value
            writer.WriteEndElement();
        }
        if (BirthDate is IsoISODate BirthDateValue)
        {
            writer.WriteStartElement(null, "BirthDt", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoISODate(BirthDateValue)); // data type ISODate System.DateOnly
            writer.WriteEndElement();
        }
    }
    public static new PersonName Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
