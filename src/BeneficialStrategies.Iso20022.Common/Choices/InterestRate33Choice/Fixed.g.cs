//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ConcreteChoiceGenerator for Fixed.  ISO2002 ID# _CRCiESJLEe2zWP9pqvmqdw.
//

using BeneficialStrategies.Iso20022.Components;
using BeneficialStrategies.Iso20022.ExternalSchema;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices.InterestRate33Choice;

/// <summary>
/// Attributes related specifically to fixed rate of an interest rate contract.
/// </summary>
public partial record Fixed : InterestRate33Choice_
     , IIsoXmlSerilizable<Fixed>
{
    #nullable enable
    
    /// <summary>
    /// Indicates the per annum rate of the fixed leg(s) of an interest rate contract.
    /// </summary>
    public SecuritiesTransactionPrice14Choice_? Rate { get; init; } 
    /// <summary>
    /// Identifies the computation method that determines how interest payments are calculated. It is used to compute the year fraction of the calculation period, and indicates the number of days in the calculation period divided by the number of days in the year.
    /// </summary>
    public InterestComputationMethodFormat7? DayCount { get; init; } 
    /// <summary>
    /// Specifies the time unit associated with the frequency of payments.
    /// </summary>
    public InterestRateFrequency3Choice_? PaymentFrequency { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public override void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (Rate is SecuritiesTransactionPrice14Choice_ RateValue)
        {
            writer.WriteStartElement(null, "Rate", xmlNamespace );
            RateValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (DayCount is InterestComputationMethodFormat7 DayCountValue)
        {
            writer.WriteStartElement(null, "DayCnt", xmlNamespace );
            DayCountValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (PaymentFrequency is InterestRateFrequency3Choice_ PaymentFrequencyValue)
        {
            writer.WriteStartElement(null, "PmtFrqcy", xmlNamespace );
            PaymentFrequencyValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static new Fixed Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
