//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by AbstractChoiceGenerator for Investment1Choice.  ISO2002 ID# _nrsigLJUEeaYqc4G3TTwhA.
//

using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices;

/// <summary>
/// Specifies the financial instrument purchased by a central counterparty using clearing member assets.
/// </summary>
[KnownType(typeof(Investment1Choice.UnsecuredCashDeposit))]
[KnownType(typeof(Investment1Choice.CentralBankDeposit))]
[KnownType(typeof(Investment1Choice.RepurchaseAgreement))]
[KnownType(typeof(Investment1Choice.OtherInvestments))]
[KnownType(typeof(Investment1Choice.OutrightInvestment))]
public abstract partial record Investment1Choice_ : IIsoXmlSerilizable<Investment1Choice_>
{
    /// <summary>
    /// Serialize the state of this record per ISO 20022 specifications.
    /// Abstract here, overridden in each of the concrete choices.
    /// </summary>
    public abstract void Serialize(XmlWriter writer, string xmlNamespace);
    
    /// <summary>
    /// After detecting the choice being deserialized, defers the serialization of the element to the appropriate concrete choice record.
    /// </summary>
    public static Investment1Choice_ Deserialize(XElement element)
    {
        var elementWithPayload = element;
        return elementWithPayload.Name.LocalName switch
        {
             "UscrdCshDpst" => Investment1Choice.UnsecuredCashDeposit.Deserialize(elementWithPayload),
             "CntrlBkDpst" => Investment1Choice.CentralBankDeposit.Deserialize(elementWithPayload),
             "RpAgrmt" => Investment1Choice.RepurchaseAgreement.Deserialize(elementWithPayload),
             "OthrInvstmts" => Investment1Choice.OtherInvestments.Deserialize(elementWithPayload),
             "OutrghtInvstmt" => Investment1Choice.OutrightInvestment.Deserialize(elementWithPayload),
            _ => throw new InvalidOperationException($@"Xml tag '{elementWithPayload.Name.LocalName}' does not correspond to a valid Investment1Choice choice.")
        };
    }
}
