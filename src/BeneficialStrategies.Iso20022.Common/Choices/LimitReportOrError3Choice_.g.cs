//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by AbstractChoiceGenerator for LimitReportOrError3Choice.  ISO2002 ID# _Qm5s4ZlhEeeE1Ya-LgRsuQ.
//

using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices;

/// <summary>
/// Choice between details of one or more limits set by the member (or on behalf of the member) and managed by the transaction administrator or an operational error when the requested data cannot be retrieved.
/// </summary>
[KnownType(typeof(LimitReportOrError3Choice.BusinessReport))]
[KnownType(typeof(LimitReportOrError3Choice.OperationalError))]
public abstract partial record LimitReportOrError3Choice_ : IIsoXmlSerilizable<LimitReportOrError3Choice_>
{
    /// <summary>
    /// Serialize the state of this record per ISO 20022 specifications.
    /// Abstract here, overridden in each of the concrete choices.
    /// </summary>
    public abstract void Serialize(XmlWriter writer, string xmlNamespace);
    
    /// <summary>
    /// After detecting the choice being deserialized, defers the serialization of the element to the appropriate concrete choice record.
    /// </summary>
    public static LimitReportOrError3Choice_ Deserialize(XElement element)
    {
        var elementWithPayload = element;
        return elementWithPayload.Name.LocalName switch
        {
             "BizRpt" => LimitReportOrError3Choice.BusinessReport.Deserialize(elementWithPayload),
             "OprlErr" => LimitReportOrError3Choice.OperationalError.Deserialize(elementWithPayload),
            _ => throw new InvalidOperationException($@"Xml tag '{elementWithPayload.Name.LocalName}' does not correspond to a valid LimitReportOrError3Choice choice.")
        };
    }
}
