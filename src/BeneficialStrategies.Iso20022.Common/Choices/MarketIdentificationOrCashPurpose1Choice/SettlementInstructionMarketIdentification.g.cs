//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ConcreteChoiceGenerator for SettlementInstructionMarketIdentification.  ISO2002 ID# _kz-v4EiNEeOdL6nMHefDgg.
//

using BeneficialStrategies.Iso20022.Components;
using BeneficialStrategies.Iso20022.ExternalSchema;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices.MarketIdentificationOrCashPurpose1Choice;

/// <summary>
/// Identifies the market for the settlement. This consists of the country code and the asset class. For example, if the SSI is for equities in the DTCC, the country code is ‘US’ and the classification type is ‘equity’.
/// </summary>
public partial record SettlementInstructionMarketIdentification : MarketIdentificationOrCashPurpose1Choice_
     , IIsoXmlSerilizable<SettlementInstructionMarketIdentification>
{
    #nullable enable
    
    /// <summary>
    /// Country in which the financial instrument is to be settled.
    /// </summary>
    public required CountryCode Country { get; init; } 
    /// <summary>
    /// Type of instrument covered by the SSI instruction.
    /// </summary>
    public required ClassificationType1Choice_ ClassificationType { get; init; } 
    /// <summary>
    /// Purpose of the instruction, for example, whether for regular payments, margin payments related to a collateral movement, securities settlements, securities lending.
    /// </summary>
    public Purpose3Choice_? SettlementPurpose { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public override void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Ctry", xmlNamespace );
        writer.WriteValue(Country.ToString()); // Enum value
        writer.WriteEndElement();
        writer.WriteStartElement(null, "ClssfctnTp", xmlNamespace );
        ClassificationType.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (SettlementPurpose is Purpose3Choice_ SettlementPurposeValue)
        {
            writer.WriteStartElement(null, "SttlmPurp", xmlNamespace );
            SettlementPurposeValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static new SettlementInstructionMarketIdentification Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
