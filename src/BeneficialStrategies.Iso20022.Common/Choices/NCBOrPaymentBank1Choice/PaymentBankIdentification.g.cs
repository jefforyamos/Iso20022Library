//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ConcreteChoiceGenerator for PaymentBankIdentification.  ISO2002 ID# _jA3FAe5NEeCisYr99QEiWA_1180588846.
//

using BeneficialStrategies.Iso20022.Components;
using BeneficialStrategies.Iso20022.ExternalSchema;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices.NCBOrPaymentBank1Choice;

/// <summary>
/// Unique business identifier code used to identify the payment bank providing the information.
/// </summary>
public partial record PaymentBankIdentification : NCBOrPaymentBank1Choice_
     , IIsoXmlSerilizable<PaymentBankIdentification>
{
    #nullable enable
    
    /// <summary>
    /// Unique identification to unambiguously identify the party within the system.
    /// </summary>
    public required IsoBICFIIdentifier RelatedPartyIdentification { get; init; } 
    /// <summary>
    /// Unique identification of the party responsible for the maintenance of the party reference data.
    /// </summary>
    public required IsoBICFIIdentifier ResponsiblePartyIdentification { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public override void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "RltdPtyId", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoBICFIIdentifier(RelatedPartyIdentification)); // data type BICFIIdentifier System.String
        writer.WriteEndElement();
        writer.WriteStartElement(null, "RspnsblPtyId", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoBICFIIdentifier(ResponsiblePartyIdentification)); // data type BICFIIdentifier System.String
        writer.WriteEndElement();
    }
    public static new PaymentBankIdentification Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
