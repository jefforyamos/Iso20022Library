//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by AbstractChoiceGenerator for OrderStatus4Choice.  ISO2002 ID# _9XxY8UH8EeaV3ab_pHzFIQ.
//

using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices;

/// <summary>
/// Choice of status for an order.
/// </summary>
[KnownType(typeof(OrderStatus4Choice.Status))]
[KnownType(typeof(OrderStatus4Choice.Cancelled))]
[KnownType(typeof(OrderStatus4Choice.ConditionallyAccepted))]
[KnownType(typeof(OrderStatus4Choice.Rejected))]
[KnownType(typeof(OrderStatus4Choice.Suspended))]
[KnownType(typeof(OrderStatus4Choice.InRepair))]
[KnownType(typeof(OrderStatus4Choice.PartiallySettled))]
public abstract partial record OrderStatus4Choice_ : IIsoXmlSerilizable<OrderStatus4Choice_>
{
    /// <summary>
    /// Serialize the state of this record per ISO 20022 specifications.
    /// Abstract here, overridden in each of the concrete choices.
    /// </summary>
    public abstract void Serialize(XmlWriter writer, string xmlNamespace);
    
    /// <summary>
    /// After detecting the choice being deserialized, defers the serialization of the element to the appropriate concrete choice record.
    /// </summary>
    public static OrderStatus4Choice_ Deserialize(XElement element)
    {
        var elementWithPayload = element;
        return elementWithPayload.Name.LocalName switch
        {
             "Sts" => OrderStatus4Choice.Status.Deserialize(elementWithPayload),
             "Canc" => OrderStatus4Choice.Cancelled.Deserialize(elementWithPayload),
             "CondlyAccptd" => OrderStatus4Choice.ConditionallyAccepted.Deserialize(elementWithPayload),
             "Rjctd" => OrderStatus4Choice.Rejected.Deserialize(elementWithPayload),
             "Sspd" => OrderStatus4Choice.Suspended.Deserialize(elementWithPayload),
             "InRpr" => OrderStatus4Choice.InRepair.Deserialize(elementWithPayload),
             "PrtlySttld" => OrderStatus4Choice.PartiallySettled.Deserialize(elementWithPayload),
            _ => throw new InvalidOperationException($@"Xml tag '{elementWithPayload.Name.LocalName}' does not correspond to a valid OrderStatus4Choice choice.")
        };
    }
}
