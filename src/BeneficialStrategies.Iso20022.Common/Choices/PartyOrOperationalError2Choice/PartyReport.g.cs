//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ConcreteChoiceGenerator for PartyReport.  ISO2002 ID# _enGS0fAzEeWPfa2xBhBfLQ.
//

using BeneficialStrategies.Iso20022.Components;
using BeneficialStrategies.Iso20022.ExternalSchema;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices.PartyOrOperationalError2Choice;

/// <summary>
/// Report information about party reference data.
/// </summary>
public partial record PartyReport : PartyOrOperationalError2Choice_
     , IIsoXmlSerilizable<PartyReport>
{
    #nullable enable
    
    /// <summary>
    /// Unique identification to unambiguously identify the party within the system.
    /// </summary>
    public required SystemPartyIdentification3 PartyIdentification { get; init; } 
    /// <summary>
    /// Identifies the returned party reference data or error information.
    /// </summary>
    public required PartyOrBusinessError2Choice_ PartyOrError { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public override void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "PtyId", xmlNamespace );
        PartyIdentification.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "PtyOrErr", xmlNamespace );
        PartyOrError.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
    }
    public static new PartyReport Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
