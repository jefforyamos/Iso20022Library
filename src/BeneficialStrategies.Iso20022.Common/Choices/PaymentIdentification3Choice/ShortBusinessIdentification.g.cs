//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ConcreteChoiceGenerator for ShortBusinessIdentification.  ISO2002 ID# _Rbhg09p-Ed-ak6NoX_4Aeg_-1132471681.
//

using BeneficialStrategies.Iso20022.Components;
using BeneficialStrategies.Iso20022.ExternalSchema;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices.PaymentIdentification3Choice;

/// <summary>
/// Business identification of the payment instruction given by the clearing agent.
/// </summary>
public partial record ShortBusinessIdentification : PaymentIdentification3Choice_
     , IIsoXmlSerilizable<ShortBusinessIdentification>
{
    #nullable enable
    
    /// <summary>
    /// Unique and unambiguous identifier for a payment instruction, as assigned by the clearing agent or the initiating party.
    /// </summary>
    public required IsoMax35Text PaymentInstructionReference { get; init; } 
    /// <summary>
    /// Date on which the amount of money ceases to be available to the agent that owes it and when the amount of money becomes available to the agent to which it is due.
    /// </summary>
    public required IsoISODate InterbankValueDate { get; init; } 
    /// <summary>
    /// The identification of the instructing agent that transmitted the payment instruction.
    /// </summary>
    public required IsoBICIdentifier InstructingAgentIdentification { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public override void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "PmtInstrRef", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax35Text(PaymentInstructionReference)); // data type Max35Text System.String
        writer.WriteEndElement();
        writer.WriteStartElement(null, "IntrBkValDt", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoISODate(InterbankValueDate)); // data type ISODate System.DateOnly
        writer.WriteEndElement();
        writer.WriteStartElement(null, "InstgAgtId", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoBICIdentifier(InstructingAgentIdentification)); // data type BICIdentifier System.String
        writer.WriteEndElement();
    }
    public static new ShortBusinessIdentification Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
