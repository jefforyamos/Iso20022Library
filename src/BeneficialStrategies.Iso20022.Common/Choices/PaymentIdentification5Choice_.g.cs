//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by AbstractChoiceGenerator for PaymentIdentification5Choice.  ISO2002 ID# _UhbRcZlQEee-Zps0fZQaFQ.
//

using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices;

/// <summary>
/// Choice between ways of identifying a payment instruction by its references and business identification.
/// </summary>
[KnownType(typeof(PaymentIdentification5Choice.TransactionIdentification))]
[KnownType(typeof(PaymentIdentification5Choice.QueueIdentification))]
[KnownType(typeof(PaymentIdentification5Choice.LongBusinessIdentification))]
[KnownType(typeof(PaymentIdentification5Choice.ShortBusinessIdentification))]
[KnownType(typeof(PaymentIdentification5Choice.ProprietaryIdentification))]
public abstract partial record PaymentIdentification5Choice_ : IIsoXmlSerilizable<PaymentIdentification5Choice_>
{
    /// <summary>
    /// Serialize the state of this record per ISO 20022 specifications.
    /// Abstract here, overridden in each of the concrete choices.
    /// </summary>
    public abstract void Serialize(XmlWriter writer, string xmlNamespace);
    
    /// <summary>
    /// After detecting the choice being deserialized, defers the serialization of the element to the appropriate concrete choice record.
    /// </summary>
    public static PaymentIdentification5Choice_ Deserialize(XElement element)
    {
        var elementWithPayload = element;
        return elementWithPayload.Name.LocalName switch
        {
             "TxId" => PaymentIdentification5Choice.TransactionIdentification.Deserialize(elementWithPayload),
             "QId" => PaymentIdentification5Choice.QueueIdentification.Deserialize(elementWithPayload),
             "LngBizId" => PaymentIdentification5Choice.LongBusinessIdentification.Deserialize(elementWithPayload),
             "ShrtBizId" => PaymentIdentification5Choice.ShortBusinessIdentification.Deserialize(elementWithPayload),
             "PrtryId" => PaymentIdentification5Choice.ProprietaryIdentification.Deserialize(elementWithPayload),
            _ => throw new InvalidOperationException($@"Xml tag '{elementWithPayload.Name.LocalName}' does not correspond to a valid PaymentIdentification5Choice choice.")
        };
    }
}
