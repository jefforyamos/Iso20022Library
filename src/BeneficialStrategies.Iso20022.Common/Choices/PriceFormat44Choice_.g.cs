//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by AbstractChoiceGenerator for PriceFormat44Choice.  ISO2002 ID# _J1Q0u0EFEeWVgfuHGaKtRQ.
//

using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices;

/// <summary>
/// Choice between a percentage price or an amount price or an unspecified price or index points.
/// </summary>
[KnownType(typeof(PriceFormat44Choice.PercentagePrice))]
[KnownType(typeof(PriceFormat44Choice.AmountPrice))]
[KnownType(typeof(PriceFormat44Choice.NotSpecifiedPrice))]
[KnownType(typeof(PriceFormat44Choice.IndexPoints))]
public abstract partial record PriceFormat44Choice_ : IIsoXmlSerilizable<PriceFormat44Choice_>
{
    /// <summary>
    /// Serialize the state of this record per ISO 20022 specifications.
    /// Abstract here, overridden in each of the concrete choices.
    /// </summary>
    public abstract void Serialize(XmlWriter writer, string xmlNamespace);
    
    /// <summary>
    /// After detecting the choice being deserialized, defers the serialization of the element to the appropriate concrete choice record.
    /// </summary>
    public static PriceFormat44Choice_ Deserialize(XElement element)
    {
        var elementWithPayload = element;
        return elementWithPayload.Name.LocalName switch
        {
             "PctgPric" => PriceFormat44Choice.PercentagePrice.Deserialize(elementWithPayload),
             "AmtPric" => PriceFormat44Choice.AmountPrice.Deserialize(elementWithPayload),
             "NotSpcfdPric" => PriceFormat44Choice.NotSpecifiedPrice.Deserialize(elementWithPayload),
             "IndxPts" => PriceFormat44Choice.IndexPoints.Deserialize(elementWithPayload),
            _ => throw new InvalidOperationException($@"Xml tag '{elementWithPayload.Name.LocalName}' does not correspond to a valid PriceFormat44Choice choice.")
        };
    }
}
