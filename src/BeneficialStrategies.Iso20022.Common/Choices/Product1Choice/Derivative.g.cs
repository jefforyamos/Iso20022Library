//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ConcreteChoiceGenerator for Derivative.  ISO2002 ID# _IojKYLVQEeadLcJesEbkTQ.
//

using BeneficialStrategies.Iso20022.Components;
using BeneficialStrategies.Iso20022.ExternalSchema;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices.Product1Choice;

/// <summary>
/// Derivative specific attributes.
/// </summary>
public partial record Derivative : Product1Choice_
     , IIsoXmlSerilizable<Derivative>
{
    #nullable enable
    
    /// <summary>
    /// Hierarchy of classification of a derivative.
    /// </summary>
    public required DerivativeClassification1 DerivativeClassification { get; init; } 
    /// <summary>
    /// Rate(s) that determine(s)) the value of the swap during the lifetime of the trade. Where both rates are fixed this does not need to be reported.
    /// </summary>
    public ValueList<DerivativeUnderlyingLeg1> DerivativeUnderlyingLeg { get; init; } = [];
    /// <summary>
    /// Option specific attributes.
    /// </summary>
    public Option14? OptionAttributes { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public override void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "DerivClssfctn", xmlNamespace );
        DerivativeClassification.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "DerivUndrlygLeg", xmlNamespace );
        DerivativeUnderlyingLeg.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (OptionAttributes is Option14 OptionAttributesValue)
        {
            writer.WriteStartElement(null, "OptnAttrbts", xmlNamespace );
            OptionAttributesValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static new Derivative Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
