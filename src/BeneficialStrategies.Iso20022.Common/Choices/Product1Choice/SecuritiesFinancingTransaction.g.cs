//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ConcreteChoiceGenerator for SecuritiesFinancingTransaction.  ISO2002 ID# _L8Gl0LVQEeadLcJesEbkTQ.
//

using BeneficialStrategies.Iso20022.Components;
using BeneficialStrategies.Iso20022.ExternalSchema;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices.Product1Choice;

/// <summary>
/// Attributes relating to repurchase agreement cleared by the CCP.
/// </summary>
public partial record SecuritiesFinancingTransaction : Product1Choice_
     , IIsoXmlSerilizable<SecuritiesFinancingTransaction>
{
    #nullable enable
    
    /// <summary>
    /// Specifies attributes of a derivative based on Final ISDA Taxonomy v1.0 and Final ISDA Taxonomy v2.0.
    /// </summary>
    public required ProductClassification1 ProductClassification { get; init; } 
    /// <summary>
    /// Indicates whether the repo is a general collateral repo or specific repo.
    /// </summary>
    public required RepurchaseAgreementType1Choice_ RepurchaseAgreementType { get; init; } 
    /// <summary>
    /// Identifier for triparty agent if applicable.
    /// </summary>
    public IsoLEIIdentifier? TripartyAgent { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public override void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "PdctClssfctn", xmlNamespace );
        ProductClassification.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "RpAgrmtTp", xmlNamespace );
        RepurchaseAgreementType.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (TripartyAgent is IsoLEIIdentifier TripartyAgentValue)
        {
            writer.WriteStartElement(null, "TrptyAgt", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoLEIIdentifier(TripartyAgentValue)); // data type LEIIdentifier System.String
            writer.WriteEndElement();
        }
    }
    public static new SecuritiesFinancingTransaction Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
