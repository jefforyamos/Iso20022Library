//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by AbstractChoiceGenerator for References65Choice.  ISO2002 ID# _03jkTdBwEeihG9bKfarOOA.
//

using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices;

/// <summary>
/// Choice between references.
/// </summary>
[KnownType(typeof(References65Choice.SecuritiesSettlementTransactionIdentification))]
[KnownType(typeof(References65Choice.IntraPositionMovementIdentification))]
[KnownType(typeof(References65Choice.IntraBalanceMovementIdentification))]
[KnownType(typeof(References65Choice.AccountServicerTransactionIdentification))]
[KnownType(typeof(References65Choice.MarketInfrastructureTransactionIdentification))]
[KnownType(typeof(References65Choice.PoolIdentification))]
[KnownType(typeof(References65Choice.CommonIdentification))]
[KnownType(typeof(References65Choice.TradeIdentification))]
[KnownType(typeof(References65Choice.OtherTransactionIdentification))]
public abstract partial record References65Choice_ : IIsoXmlSerilizable<References65Choice_>
{
    /// <summary>
    /// Serialize the state of this record per ISO 20022 specifications.
    /// Abstract here, overridden in each of the concrete choices.
    /// </summary>
    public abstract void Serialize(XmlWriter writer, string xmlNamespace);
    
    /// <summary>
    /// After detecting the choice being deserialized, defers the serialization of the element to the appropriate concrete choice record.
    /// </summary>
    public static References65Choice_ Deserialize(XElement element)
    {
        var elementWithPayload = element;
        return elementWithPayload.Name.LocalName switch
        {
             "SctiesSttlmTxId" => References65Choice.SecuritiesSettlementTransactionIdentification.Deserialize(elementWithPayload),
             "IntraPosMvmntId" => References65Choice.IntraPositionMovementIdentification.Deserialize(elementWithPayload),
             "IntraBalMvmntId" => References65Choice.IntraBalanceMovementIdentification.Deserialize(elementWithPayload),
             "AcctSvcrTxId" => References65Choice.AccountServicerTransactionIdentification.Deserialize(elementWithPayload),
             "MktInfrstrctrTxId" => References65Choice.MarketInfrastructureTransactionIdentification.Deserialize(elementWithPayload),
             "PoolId" => References65Choice.PoolIdentification.Deserialize(elementWithPayload),
             "CmonId" => References65Choice.CommonIdentification.Deserialize(elementWithPayload),
             "TradId" => References65Choice.TradeIdentification.Deserialize(elementWithPayload),
             "OthrTxId" => References65Choice.OtherTransactionIdentification.Deserialize(elementWithPayload),
            _ => throw new InvalidOperationException($@"Xml tag '{elementWithPayload.Name.LocalName}' does not correspond to a valid References65Choice choice.")
        };
    }
}
