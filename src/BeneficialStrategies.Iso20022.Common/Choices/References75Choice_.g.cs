//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by AbstractChoiceGenerator for References75Choice.  ISO2002 ID# _ccpnozi8Eeydid5dcNPKvg.
//

using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices;

/// <summary>
/// Choice of reference.
/// </summary>
[KnownType(typeof(References75Choice.AccountOwnerTransactionIdentification))]
[KnownType(typeof(References75Choice.AccountServicerTransactionIdentification))]
[KnownType(typeof(References75Choice.PoolIdentification))]
[KnownType(typeof(References75Choice.MarketInfrastructureTransactionIdentification))]
[KnownType(typeof(References75Choice.CounterpartyMarketInfrastructureTransactionIdentification))]
[KnownType(typeof(References75Choice.ProcessorTransactionIdentification))]
public abstract partial record References75Choice_ : IIsoXmlSerilizable<References75Choice_>
{
    /// <summary>
    /// Serialize the state of this record per ISO 20022 specifications.
    /// Abstract here, overridden in each of the concrete choices.
    /// </summary>
    public abstract void Serialize(XmlWriter writer, string xmlNamespace);
    
    /// <summary>
    /// After detecting the choice being deserialized, defers the serialization of the element to the appropriate concrete choice record.
    /// </summary>
    public static References75Choice_ Deserialize(XElement element)
    {
        var elementWithPayload = element;
        return elementWithPayload.Name.LocalName switch
        {
             "AcctOwnrTxId" => References75Choice.AccountOwnerTransactionIdentification.Deserialize(elementWithPayload),
             "AcctSvcrTxId" => References75Choice.AccountServicerTransactionIdentification.Deserialize(elementWithPayload),
             "PoolId" => References75Choice.PoolIdentification.Deserialize(elementWithPayload),
             "MktInfrstrctrTxId" => References75Choice.MarketInfrastructureTransactionIdentification.Deserialize(elementWithPayload),
             "CtrPtyMktInfrstrctrTxId" => References75Choice.CounterpartyMarketInfrastructureTransactionIdentification.Deserialize(elementWithPayload),
             "PrcrTxId" => References75Choice.ProcessorTransactionIdentification.Deserialize(elementWithPayload),
            _ => throw new InvalidOperationException($@"Xml tag '{elementWithPayload.Name.LocalName}' does not correspond to a valid References75Choice choice.")
        };
    }
}
