//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ConcreteChoiceGenerator for TransferOutConfirmationDetails.  ISO2002 ID# _-5EuwBg3EeK-_89we2b-bA.
//

using BeneficialStrategies.Iso20022.Components;
using BeneficialStrategies.Iso20022.ExternalSchema;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices.Reversal1Choice;

/// <summary>
/// Details of the transfer out confirmation to be reversed.
/// </summary>
public partial record TransferOutConfirmationDetails : Reversal1Choice_
     , IIsoXmlSerilizable<TransferOutConfirmationDetails>
{
    #nullable enable
    
    /// <summary>
    /// General information related to the transfer of a financial instrument.
    /// </summary>
    public Transfer24? TransferDetails { get; init;  } // Warning: Don't know multiplicity.
    // ID for the above is _1cQJpRgkEeK-_89we2b-bA
    /// <summary>
    /// Information related to the account from which the financial instrument was withdrawn.
    /// </summary>
    public required InvestmentAccount22 AccountDetails { get; init; } 
    /// <summary>
    /// Information related to the receiving side of the transfer.
    /// </summary>
    public ReceiveInformation11? SettlementDetails { get; init; } 
    /// <summary>
    /// Additional information that can not be captured in the structured fields and/or any other specific block.
    /// </summary>
    public Extension1? Extension { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public override void Serialize(XmlWriter writer, string xmlNamespace)
    {
        // Not sure how to serialize TransferDetails, multiplicity Unknown
        writer.WriteStartElement(null, "AcctDtls", xmlNamespace );
        AccountDetails.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (SettlementDetails is ReceiveInformation11 SettlementDetailsValue)
        {
            writer.WriteStartElement(null, "SttlmDtls", xmlNamespace );
            SettlementDetailsValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (Extension is Extension1 ExtensionValue)
        {
            writer.WriteStartElement(null, "Xtnsn", xmlNamespace );
            ExtensionValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static new TransferOutConfirmationDetails Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
