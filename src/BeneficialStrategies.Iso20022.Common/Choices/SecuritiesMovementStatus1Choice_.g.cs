//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by AbstractChoiceGenerator for SecuritiesMovementStatus1Choice.  ISO2002 ID# _IeQt0OCzEei2UYJ62ws-Fw.
//

using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices;

/// <summary>
/// Provides the status of thesecurities movement.
/// </summary>
[KnownType(typeof(SecuritiesMovementStatus1Choice.Amount))]
[KnownType(typeof(SecuritiesMovementStatus1Choice.Cash))]
[KnownType(typeof(SecuritiesMovementStatus1Choice.Currency))]
[KnownType(typeof(SecuritiesMovementStatus1Choice.Excluded))]
[KnownType(typeof(SecuritiesMovementStatus1Choice.Future))]
[KnownType(typeof(SecuritiesMovementStatus1Choice.Pending))]
[KnownType(typeof(SecuritiesMovementStatus1Choice.ManuallyAccepted))]
[KnownType(typeof(SecuritiesMovementStatus1Choice.Eligibility))]
[KnownType(typeof(SecuritiesMovementStatus1Choice.Tax))]
[KnownType(typeof(SecuritiesMovementStatus1Choice.Wait))]
public abstract partial record SecuritiesMovementStatus1Choice_ : IIsoXmlSerilizable<SecuritiesMovementStatus1Choice_>
{
    /// <summary>
    /// Serialize the state of this record per ISO 20022 specifications.
    /// Abstract here, overridden in each of the concrete choices.
    /// </summary>
    public abstract void Serialize(XmlWriter writer, string xmlNamespace);
    
    /// <summary>
    /// After detecting the choice being deserialized, defers the serialization of the element to the appropriate concrete choice record.
    /// </summary>
    public static SecuritiesMovementStatus1Choice_ Deserialize(XElement element)
    {
        var elementWithPayload = element;
        return elementWithPayload.Name.LocalName switch
        {
             "Amt" => SecuritiesMovementStatus1Choice.Amount.Deserialize(elementWithPayload),
             "Csh" => SecuritiesMovementStatus1Choice.Cash.Deserialize(elementWithPayload),
             "Ccy" => SecuritiesMovementStatus1Choice.Currency.Deserialize(elementWithPayload),
             "Excld" => SecuritiesMovementStatus1Choice.Excluded.Deserialize(elementWithPayload),
             "Futr" => SecuritiesMovementStatus1Choice.Future.Deserialize(elementWithPayload),
             "Pdg" => SecuritiesMovementStatus1Choice.Pending.Deserialize(elementWithPayload),
             "MnlyAccptd" => SecuritiesMovementStatus1Choice.ManuallyAccepted.Deserialize(elementWithPayload),
             "Elgblty" => SecuritiesMovementStatus1Choice.Eligibility.Deserialize(elementWithPayload),
             "Tax" => SecuritiesMovementStatus1Choice.Tax.Deserialize(elementWithPayload),
             "Wait" => SecuritiesMovementStatus1Choice.Wait.Deserialize(elementWithPayload),
            _ => throw new InvalidOperationException($@"Xml tag '{elementWithPayload.Name.LocalName}' does not correspond to a valid SecuritiesMovementStatus1Choice choice.")
        };
    }
}
