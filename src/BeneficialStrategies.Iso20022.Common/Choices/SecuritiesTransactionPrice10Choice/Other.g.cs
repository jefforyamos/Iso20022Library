//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ConcreteChoiceGenerator for Other.  ISO2002 ID# _QtVs6f9iEea3W_f2lS_aiw.
//

using BeneficialStrategies.Iso20022.Components;
using BeneficialStrategies.Iso20022.ExternalSchema;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices.SecuritiesTransactionPrice10Choice;

/// <summary>
/// Indicates that price or quantity is expressed in another notation.
/// </summary>
public partial record Other : SecuritiesTransactionPrice10Choice_
     , IIsoXmlSerilizable<Other>
{
    #nullable enable
    
    /// <summary>
    /// Value of the price.
    /// </summary>
    public IsoLongFraction21DecimalNumber? Value { get; init; } 
    /// <summary>
    /// Notation of the price.
    /// </summary>
    public IsoMax35Text? Type { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public override void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (Value is IsoLongFraction21DecimalNumber ValueValue)
        {
            writer.WriteStartElement(null, "Val", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoLongFraction21DecimalNumber(ValueValue)); // data type LongFraction21DecimalNumber System.UInt64
            writer.WriteEndElement();
        }
        if (Type is IsoMax35Text TypeValue)
        {
            writer.WriteStartElement(null, "Tp", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(TypeValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
    }
    public static new Other Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
