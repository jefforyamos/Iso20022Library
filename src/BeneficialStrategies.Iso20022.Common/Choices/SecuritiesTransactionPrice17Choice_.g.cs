//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by AbstractChoiceGenerator for SecuritiesTransactionPrice17Choice.  ISO2002 ID# _gRtSoZjcEeqkLZLH6DK3UQ.
//

using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices;

/// <summary>
/// Choice to define the price of the securities transaction.
/// </summary>
[KnownType(typeof(SecuritiesTransactionPrice17Choice.MonetaryValue))]
[KnownType(typeof(SecuritiesTransactionPrice17Choice.Unit))]
[KnownType(typeof(SecuritiesTransactionPrice17Choice.Percentage))]
[KnownType(typeof(SecuritiesTransactionPrice17Choice.Yield))]
[KnownType(typeof(SecuritiesTransactionPrice17Choice.Decimal))]
[KnownType(typeof(SecuritiesTransactionPrice17Choice.PendingPrice))]
[KnownType(typeof(SecuritiesTransactionPrice17Choice.Other))]
public abstract partial record SecuritiesTransactionPrice17Choice_ : IIsoXmlSerilizable<SecuritiesTransactionPrice17Choice_>
{
    /// <summary>
    /// Serialize the state of this record per ISO 20022 specifications.
    /// Abstract here, overridden in each of the concrete choices.
    /// </summary>
    public abstract void Serialize(XmlWriter writer, string xmlNamespace);
    
    /// <summary>
    /// After detecting the choice being deserialized, defers the serialization of the element to the appropriate concrete choice record.
    /// </summary>
    public static SecuritiesTransactionPrice17Choice_ Deserialize(XElement element)
    {
        var elementWithPayload = element;
        return elementWithPayload.Name.LocalName switch
        {
             "MntryVal" => SecuritiesTransactionPrice17Choice.MonetaryValue.Deserialize(elementWithPayload),
             "Unit" => SecuritiesTransactionPrice17Choice.Unit.Deserialize(elementWithPayload),
             "Pctg" => SecuritiesTransactionPrice17Choice.Percentage.Deserialize(elementWithPayload),
             "Yld" => SecuritiesTransactionPrice17Choice.Yield.Deserialize(elementWithPayload),
             "Dcml" => SecuritiesTransactionPrice17Choice.Decimal.Deserialize(elementWithPayload),
             "PdgPric" => SecuritiesTransactionPrice17Choice.PendingPrice.Deserialize(elementWithPayload),
             "Othr" => SecuritiesTransactionPrice17Choice.Other.Deserialize(elementWithPayload),
            _ => throw new InvalidOperationException($@"Xml tag '{elementWithPayload.Name.LocalName}' does not correspond to a valid SecuritiesTransactionPrice17Choice choice.")
        };
    }
}
