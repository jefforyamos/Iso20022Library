//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by AbstractChoiceGenerator for SecurityIdentification36Choice.  ISO2002 ID# _PNQi0YrpEeq91phomTRDDA.
//

using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices;

/// <summary>
/// Choice between ISIN and an alternative format for the identification of a financial instrument. ISIN is the preferred format.
/// </summary>
[KnownType(typeof(SecurityIdentification36Choice.ISIN))]
[KnownType(typeof(SecurityIdentification36Choice.AlternativeInstrumentIdentification))]
[KnownType(typeof(SecurityIdentification36Choice.UniqueProductIdentifier))]
[KnownType(typeof(SecurityIdentification36Choice.Basket))]
[KnownType(typeof(SecurityIdentification36Choice.Index))]
[KnownType(typeof(SecurityIdentification36Choice.IdentificationNotAvailable))]
public abstract partial record SecurityIdentification36Choice_ : IIsoXmlSerilizable<SecurityIdentification36Choice_>
{
    /// <summary>
    /// Serialize the state of this record per ISO 20022 specifications.
    /// Abstract here, overridden in each of the concrete choices.
    /// </summary>
    public abstract void Serialize(XmlWriter writer, string xmlNamespace);
    
    /// <summary>
    /// After detecting the choice being deserialized, defers the serialization of the element to the appropriate concrete choice record.
    /// </summary>
    public static SecurityIdentification36Choice_ Deserialize(XElement element)
    {
        var elementWithPayload = element;
        return elementWithPayload.Name.LocalName switch
        {
             "ISIN" => SecurityIdentification36Choice.ISIN.Deserialize(elementWithPayload),
             "AltrntvInstrmId" => SecurityIdentification36Choice.AlternativeInstrumentIdentification.Deserialize(elementWithPayload),
             "UnqPdctIdr" => SecurityIdentification36Choice.UniqueProductIdentifier.Deserialize(elementWithPayload),
             "Bskt" => SecurityIdentification36Choice.Basket.Deserialize(elementWithPayload),
             "Indx" => SecurityIdentification36Choice.Index.Deserialize(elementWithPayload),
             "IdNotAvlbl" => SecurityIdentification36Choice.IdentificationNotAvailable.Deserialize(elementWithPayload),
            _ => throw new InvalidOperationException($@"Xml tag '{elementWithPayload.Name.LocalName}' does not correspond to a valid SecurityIdentification36Choice choice.")
        };
    }
}
