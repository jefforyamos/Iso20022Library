//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ConcreteChoiceGenerator for InstrumentDescription.  ISO2002 ID# _TBKB8tp-Ed-ak6NoX_4Aeg_-1421894924.
//

using BeneficialStrategies.Iso20022.Components;
using BeneficialStrategies.Iso20022.ExternalSchema;

namespace BeneficialStrategies.Iso20022.Choices.SecurityIdentification6Choice;

/// <summary>
/// Provides the ability to describe the instrument through a description and main characteristics.
/// </summary>
public partial record InstrumentDescription : ISecurityIdentification6Choice
{
    #nullable enable
    /// <summary>
    /// Description of the security.
    /// </summary>
    public IsoMax350Text? Description { get; init; } 
    /// <summary>
    /// Classification type of the financial instrument, as per the ISO Classification of Financial Instrument (CFI) codification, eg, common share with voting rights, fully paid, or registered.
    /// </summary>
    public ISecurityClassificationType1Choice? ClassificationType { get; init; } 
    /// <summary>
    /// Provides the place of listing using a market identifier code (MIC).
    /// </summary>
    public IsoMICIdentifier? PlaceOfListing { get; init; } 
    /// <summary>
    /// Exercise date/time of a derivative contract.
    /// </summary>
    public IsoISODate? ExerciseDate { get; init; } 
    /// <summary>
    /// Maturity date/time at which an interest bearing security becomes due.
    /// </summary>
    public IsoISODate? MaturityDate { get; init; } 
    /// <summary>
    /// Specifies whether it is a call option (right to purchase a specific underlying asset) or a put option (right to sell a specific underlying asset).
    /// </summary>
    public OptionTypeCode? OptionType { get; init; } 
    /// <summary>
    /// Predetermined price at which the holder will have to buy or sell the underlying instrument.
    /// </summary>
    public IPriceRateOrAmountChoice? StrikePrice { get; init; } 
    /// <summary>
    /// Indicates the ratio or multiplying factor used to convert one contract into a quantity. In the case of an equity or a bond, the price multiplier is 1.
    /// </summary>
    public IsoBaseOneRate? Multiplier { get; init; } 
    #nullable disable
}
