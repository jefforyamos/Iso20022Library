//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ConcreteChoiceGenerator for CombinedIdentification.  ISO2002 ID# _w8OZg2c-EemvNLufWGIVOQ.
//

using BeneficialStrategies.Iso20022.Components;
using BeneficialStrategies.Iso20022.ExternalSchema;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices.SystemPartyIdentification2Choice;

/// <summary>
/// Identifies the party with the combined identification of both the responsible entity and the party itself.
/// </summary>
public partial record CombinedIdentification : SystemPartyIdentification2Choice_
     , IIsoXmlSerilizable<CombinedIdentification>
{
    #nullable enable
    
    /// <summary>
    /// Unique identification to unambiguously identify the party within the system.
    /// </summary>
    public required PartyIdentification136 Identification { get; init; } 
    /// <summary>
    /// Unique identification of the party responsible for the maintenance of the party reference data.
    /// </summary>
    public PartyIdentification136? ResponsiblePartyIdentification { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public override void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Id", xmlNamespace );
        Identification.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (ResponsiblePartyIdentification is PartyIdentification136 ResponsiblePartyIdentificationValue)
        {
            writer.WriteStartElement(null, "RspnsblPtyId", xmlNamespace );
            ResponsiblePartyIdentificationValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static new CombinedIdentification Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
