//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ConcreteChoiceGenerator for Report.  ISO2002 ID# _CpO6Y__oEemm3skPVSMJQg.
//

using BeneficialStrategies.Iso20022.Components;
using BeneficialStrategies.Iso20022.ExternalSchema;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Choices.TradeData14Choice;

/// <summary>
/// Information concerning the reporting at transaction level.
/// </summary>
public partial record Report : TradeData14Choice_
     , IIsoXmlSerilizable<Report>
{
    #nullable enable
    
    /// <summary>
    /// Status of the required transactions reconciliation or pairing.
    /// </summary>
    public NumberOfReportsPerStatus2? PairingReconciliationStatus { get; init; } 
    /// <summary>
    /// Data on transaction requiring reconciliation or pairing. 
    /// </summary>
    public ReconciliationReport5? ReconciliationReport { get; init;  } // Warning: Don't know multiplicity.
    // ID for the above is _CtHU0__oEemm3skPVSMJQg
    /// <summary>
    /// Additional information that can not be captured in the structured fields and/or any other specific block.
    /// </summary>
    public SupplementaryData1? SupplementaryData { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public override void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (PairingReconciliationStatus is NumberOfReportsPerStatus2 PairingReconciliationStatusValue)
        {
            writer.WriteStartElement(null, "PairgRcncltnSts", xmlNamespace );
            PairingReconciliationStatusValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        // Not sure how to serialize ReconciliationReport, multiplicity Unknown
        if (SupplementaryData is SupplementaryData1 SupplementaryDataValue)
        {
            writer.WriteStartElement(null, "SplmtryData", xmlNamespace );
            SupplementaryDataValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static new Report Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
