//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ConcreteChoiceGenerator for Trade.  ISO2002 ID# _0ORmM7GIEeuSTr8k0UEM8A.
//

using BeneficialStrategies.Iso20022.Components;
using BeneficialStrategies.Iso20022.ExternalSchema;

namespace BeneficialStrategies.Iso20022.Choices.UnderlyingContract3Choice;

/// <summary>
/// Underlying registered contract is a commercial trade.
/// </summary>
public partial record Trade : IUnderlyingContract3Choice
{
    #nullable enable
    /// <summary>
    /// Contract document referenced from this trade agreement.
    /// </summary>
    public DocumentIdentification22? ContractDocumentIdentification { get; init; } 
    /// <summary>
    /// Type code of the trade contract.
    /// </summary>
    public IsoMax35Text? TradeTypeIdentification { get; init; } 
    /// <summary>
    /// Amount of the trade contract.
    /// </summary>
    public IsoActiveCurrencyAndAmount? Amount { get; init; } 
    /// <summary>
    /// Party that is specified as the buyer for this trade agreement.
    /// </summary>
    public TradeParty5? Buyer { get; init;  } // Warning: Don't know multiplicity.
    /// <summary>
    /// Party that is specified as the seller for this trade agreement.
    /// </summary>
    public TradeParty5? Seller { get; init;  } // Warning: Don't know multiplicity.
    /// <summary>
    /// Planned final payment date at the time of issuance.
    /// </summary>
    public IsoISODate? MaturityDate { get; init; } 
    /// <summary>
    /// Indicates whether the contract duration is extended or not.
    /// When absent, the flag meaning is NotApplicable.
    /// </summary>
    public IsoTrueFalseIndicator? ProlongationFlag { get; init; } 
    /// <summary>
    /// Start date of the trade contract.
    /// </summary>
    public IsoISODate? StartDate { get; init; } 
    /// <summary>
    /// Currency in which the trade is being settled.
    /// </summary>
    public ActiveCurrencyCode? SettlementCurrency { get; init; } 
    /// <summary>
    /// Provides details on the currency exchange rate and contract.
    /// </summary>
    public ExchangeRate1? ExchangeRateInformation { get; init; } 
    /// <summary>
    /// Schedule of the payments defined for the trade contract.
    /// </summary>
    public InterestPaymentDateRange1? PaymentSchedule { get; init; } 
    /// <summary>
    /// Schedule of the shipment.
    /// </summary>
    public IShipmentSchedule2Choice? ShipmentSchedule { get; init; } 
    /// <summary>
    /// Documents provided as attachments to the trade contract.
    /// </summary>
    public DocumentGeneralInformation5? Attachment { get; init;  } // Warning: Don't know multiplicity.
    #nullable disable
}
