//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for BalanceType15Code.  ISO2002 ID# _r56MocSqEeuBjv5G5kw00g.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20022.Codesets;

/// <summary>
/// Type of balance.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_r56MocSqEeuBjv5G5kw00g")]
[Description(@"Type of balance.")]
[DerivedFrom(typeof(BalanceTypeCode))]
public enum BalanceType15Code
{
    /// <summary>
    /// Amount put on hold.
    /// Encoded/decoded by serializers as "AMOH".
    /// </summary>
    [EnumMember(Value = "AMOH")]
    [IsoId("_r_HcwcSqEeuBjv5G5kw00g")]
    [Description(@"Amount put on hold.")]
    AmountOnHold = BalanceTypeCode.AmountOnHold, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Amount of money owed
    /// Encoded/decoded by serializers as "AMTO".
    /// </summary>
    [EnumMember(Value = "AMTO")]
    [IsoId("_r_Hcw8SqEeuBjv5G5kw00g")]
    [Description(@"Amount of money owed")]
    AmountOwing = BalanceTypeCode.AmountOwing, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Amount of money due.
    /// Encoded/decoded by serializers as "AMTD".
    /// </summary>
    [EnumMember(Value = "AMTD")]
    [IsoId("_r_HcxcSqEeuBjv5G5kw00g")]
    [Description(@"Amount of money due.")]
    AmountDue = BalanceTypeCode.AmountDue, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Credit line available.
    /// Encoded/decoded by serializers as "CRDL".
    /// </summary>
    [EnumMember(Value = "CRDL")]
    [IsoId("_r_Hcx8SqEeuBjv5G5kw00g")]
    [Description(@"Credit line available.")]
    CreditLine = BalanceTypeCode.CreditLine, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Other type of balance defined at national level
    /// Encoded/decoded by serializers as "OTHN".
    /// </summary>
    [EnumMember(Value = "OTHN")]
    [IsoId("_r_HcycSqEeuBjv5G5kw00g")]
    [Description(@"Other type of balance defined at national level")]
    OtherNational = BalanceTypeCode.OtherNational, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Other type of balance defined at private level.
    /// Encoded/decoded by serializers as "OTHP".
    /// </summary>
    [EnumMember(Value = "OTHP")]
    [IsoId("_r_ID0cSqEeuBjv5G5kw00g")]
    [Description(@"Other type of balance defined at private level.")]
    OtherPrivate = BalanceTypeCode.OtherPrivate, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Balance of money or securities that is at the disposal of the account owner on the date specified.
    /// Encoded/decoded by serializers as "AVLB".
    /// </summary>
    [EnumMember(Value = "AVLB")]
    [IsoId("_r_ID08SqEeuBjv5G5kw00g")]
    [Description(@"Balance of money or securities that is at the disposal of the account owner on the date specified.")]
    Available = BalanceTypeCode.Available, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Cleared items balance. 
    /// Encoded/decoded by serializers as "CLRI".
    /// </summary>
    [EnumMember(Value = "CLRI")]
    [IsoId("_r_ID1cSqEeuBjv5G5kw00g")]
    [Description(@"Cleared items balance. ")]
    ClearedItem = BalanceTypeCode.ClearedItem, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Ledger balance refers to posted transactions (e.g. limit authorisation amount - posted transactions).
    /// Encoded/decoded by serializers as "LDGR".
    /// </summary>
    [EnumMember(Value = "LDGR")]
    [IsoId("_r_ID18SqEeuBjv5G5kw00g")]
    [Description(@"Ledger balance refers to posted transactions (e.g. limit authorisation amount - posted transactions).")]
    Ledger = BalanceTypeCode.Ledger, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Value expressed in points.
    /// Encoded/decoded by serializers as "PNTS".
    /// </summary>
    [EnumMember(Value = "PNTS")]
    [IsoId("_y5o-4cSqEeuBjv5G5kw00g")]
    [Description(@"Value expressed in points.")]
    Points = BalanceTypeCode.Points, // same ordinal as derivation source for type conversions
    
}
