//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for AllocationIndicator1Code.  ISO2002 ID# _UrZRYCjoEeK1Sbo8NpBROA.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Specifies whether the trade is a pre-allocation or a post-allocation trade, or whether the trade is unallocated.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_UrZRYCjoEeK1Sbo8NpBROA")]
[Description(@"Specifies whether the trade is a pre-allocation or a post-allocation trade, or whether the trade is unallocated.")]
[DerivedFrom(typeof(AllocationIndicatorCode))]
public enum AllocationIndicator1Code
{
    /// <summary>
    /// Trade is a post-allocation trade.
    /// Encoded/decoded by serializers as "Post_allocation".
    /// </summary>
    [EnumMember(Value = "POST")]
    [IsoId("_kPSY4SjvEeK1Sbo8NpBROA")]
    [Description(@"Trade is a post-allocation trade.")]
    Post_allocation,
    
    /// <summary>
    /// Trade is a pre-allocation trade.
    /// Encoded/decoded by serializers as "Pre_allocation".
    /// </summary>
    [EnumMember(Value = "PREA")]
    [IsoId("_kUnk0SjvEeK1Sbo8NpBROA")]
    [Description(@"Trade is a pre-allocation trade.")]
    Pre_allocation,
    
    /// <summary>
    /// Trade is unallocated.
    /// Encoded/decoded by serializers as "Unallocated".
    /// </summary>
    [EnumMember(Value = "UNAL")]
    [IsoId("_kZ_NASjvEeK1Sbo8NpBROA")]
    [Description(@"Trade is unallocated.")]
    Unallocated,
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class AllocationIndicator1CodeMetadataExtensions
{
    private static readonly AllocationIndicator1CodeDropdownSource _dropdownSource = new AllocationIndicator1CodeDropdownSource();

    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static IAllocationIndicator1CodeDropdownRow GetMetadata(this AllocationIndicator1Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


