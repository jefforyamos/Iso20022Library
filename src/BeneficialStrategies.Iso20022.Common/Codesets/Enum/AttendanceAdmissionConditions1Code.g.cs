//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for AttendanceAdmissionConditions1Code.  ISO2002 ID# _I0hQEK4nEemG7MmivSuE5g.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Specifies conditions for physical admittance to general meetings.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_I0hQEK4nEemG7MmivSuE5g")]
[Description(@"Specifies conditions for physical admittance to general meetings.")]
[DerivedFrom(typeof(AttendanceAdmissionConditionsCode))]
public enum AttendanceAdmissionConditions1Code
{
    /// <summary>
    /// Any attendee must be a shareholder themselves.
    /// Encoded/decoded by serializers as "AllowedForShareholder".
    /// </summary>
    [EnumMember(Value = "MASH")]
    [IsoId("_K2sjMa4nEemG7MmivSuE5g")]
    [Description(@"Any attendee must be a shareholder themselves.")]
    AllowedForShareholder,
    
    /// <summary>
    /// Attendees acting on behalf of registered holder must have a valid power of attorney (POA) and/or proof of holding.
    /// Encoded/decoded by serializers as "AllowedOnBehalf".
    /// </summary>
    [EnumMember(Value = "MAPO")]
    [IsoId("_K75zUa4nEemG7MmivSuE5g")]
    [Description(@"Attendees acting on behalf of registered holder must have a valid power of attorney (POA) and/or proof of holding.")]
    AllowedOnBehalf,
    
    /// <summary>
    /// Attendees will be placed on a attendee list and must bring photographic identification with them.
    /// Encoded/decoded by serializers as "AllowedWithAttendeeList".
    /// </summary>
    [EnumMember(Value = "MAAL")]
    [IsoId("_LDN8Qq4nEemG7MmivSuE5g")]
    [Description(@"Attendees will be placed on a attendee list and must bring photographic identification with them.")]
    AllowedWithAttendeeList,
    
    /// <summary>
    /// Attendees will be placed on a attendee list or issued with a letter of representation, and must bring photographic identification with them.
    /// Encoded/decoded by serializers as "AllowedWithLetterOfRepresentation".
    /// </summary>
    [EnumMember(Value = "MALR")]
    [IsoId("_LFdX8a4nEemG7MmivSuE5g")]
    [Description(@"Attendees will be placed on a attendee list or issued with a letter of representation, and must bring photographic identification with them.")]
    AllowedWithLetterOfRepresentation,
    
    /// <summary>
    /// Attendees must request proof of holding and register for attendance directly with Issuer.
    /// Encoded/decoded by serializers as "AllowedWithProof".
    /// </summary>
    [EnumMember(Value = "MAHI")]
    [IsoId("_LIcaga4nEemG7MmivSuE5g")]
    [Description(@"Attendees must request proof of holding and register for attendance directly with Issuer.")]
    AllowedWithProof,
    
    /// <summary>
    /// Attendees will be issued an admission ticket and must bring photographic identification with them.
    /// Encoded/decoded by serializers as "AllowedWithTicket".
    /// </summary>
    [EnumMember(Value = "MATK")]
    [IsoId("_LN7-ga4nEemG7MmivSuE5g")]
    [Description(@"Attendees will be issued an admission ticket and must bring photographic identification with them.")]
    AllowedWithTicket,
    
    /// <summary>
    /// Meeting attendance is not possible.
    /// Encoded/decoded by serializers as "NotPossible".
    /// </summary>
    [EnumMember(Value = "MANP")]
    [IsoId("_LSYZoa4nEemG7MmivSuE5g")]
    [Description(@"Meeting attendance is not possible.")]
    NotPossible,
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class AttendanceAdmissionConditions1CodeMetadataExtensions
{
    private static readonly AttendanceAdmissionConditions1CodeDropdownSource _dropdownSource = new AttendanceAdmissionConditions1CodeDropdownSource();

    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static IAttendanceAdmissionConditions1CodeDropdownRow GetMetadata(this AttendanceAdmissionConditions1Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


