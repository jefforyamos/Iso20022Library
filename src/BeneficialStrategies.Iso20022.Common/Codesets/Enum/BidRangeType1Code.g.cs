//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for BidRangeType1Code.  ISO2002 ID# _EsjOkO3NEeqc-LCjwLsUVg.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Types of acceptable bid range values.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_EsjOkO3NEeqc-LCjwLsUVg")]
[Description(@"Types of acceptable bid range values.")]
[DerivedFrom(typeof(BidRangeTypeCode))]
public enum BidRangeType1Code
{
    /// <summary>
    /// All values (including minimum and maximum prices) are divisible by the bid interval.
    /// Encoded/decoded by serializers as "Divisible".
    /// </summary>
    [EnumMember(Value = "DIVI")]
    [IsoId("_IuYsUe3NEeqc-LCjwLsUVg")]
    [Description(@"All values (including minimum and maximum prices) are divisible by the bid interval.")]
    Divisible,
    
    /// <summary>
    /// No values within the bid range are divisible by the bid interval including the minimum and maximum prices.  Each value between the minimum and maximum prices is incremented by the bid interval.
    /// Encoded/decoded by serializers as "Incremental".
    /// </summary>
    [EnumMember(Value = "INCR")]
    [IsoId("_Iy9DQe3NEeqc-LCjwLsUVg")]
    [Description(@"No values within the bid range are divisible by the bid interval including the minimum and maximum prices.  Each value between the minimum and maximum prices is incremented by the bid interval.")]
    Incremental,
    
    /// <summary>
    /// Minimum and maximum prices are not divisible by the bid interval.  All successive values between the minimum and maximum prices are in multiples of the bid interval.
    /// Encoded/decoded by serializers as "InMultiple".
    /// </summary>
    [EnumMember(Value = "MULT")]
    [IsoId("_I3mSse3NEeqc-LCjwLsUVg")]
    [Description(@"Minimum and maximum prices are not divisible by the bid interval.  All successive values between the minimum and maximum prices are in multiples of the bid interval.")]
    InMultiple,
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class BidRangeType1CodeMetadataExtensions
{
    private static readonly BidRangeType1CodeDropdownSource _dropdownSource = new BidRangeType1CodeDropdownSource();

    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static IBidRangeType1CodeDropdownRow GetMetadata(this BidRangeType1Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


