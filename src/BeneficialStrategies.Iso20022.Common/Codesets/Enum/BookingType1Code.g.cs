//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for BookingType1Code.  ISO2002 ID# _bU1IRdp-Ed-ak6NoX_4Aeg_909907363.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Method for booking out an order. Used when notifying a broker that an order to be settled by that broker is to be booked out as an Over The Counter derivative (for example, Contract For Difference - CFD or similar).
/// </summary>
[DataContract]
[Serializable]
[IsoId("_bU1IRdp-Ed-ak6NoX_4Aeg_909907363")]
[Description(@"Method for booking out an order. Used when notifying a broker that an order to be settled by that broker is to be booked out as an Over The Counter derivative (for example, Contract For Difference - CFD or similar).")]
[DerivedFrom(typeof(BookingTypeCode))]
public enum BookingType1Code
{
    /// <summary>
    /// Booking type is regular.
    /// Encoded/decoded by serializers as "REGU".
    /// </summary>
    [EnumMember(Value = "REGU")]
    [IsoId("_bU1IRtp-Ed-ak6NoX_4Aeg_-626502093")]
    [Description(@"Booking type is regular.")]
    Regular = BookingTypeCode.Regular, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Order is to be booked out as a CFD.
    /// Encoded/decoded by serializers as "CFOD".
    /// </summary>
    [EnumMember(Value = "CFOD")]
    [IsoId("_bU-SMNp-Ed-ak6NoX_4Aeg_-626502041")]
    [Description(@"Order is to be booked out as a CFD.")]
    ContractForDifference = BookingTypeCode.ContractForDifference, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Order is to be booked out as an OTC derivative (for example, Swap).
    /// Encoded/decoded by serializers as "TRSW".
    /// </summary>
    [EnumMember(Value = "TRSW")]
    [IsoId("_bU-SMdp-Ed-ak6NoX_4Aeg_-626501775")]
    [Description(@"Order is to be booked out as an OTC derivative (for example, Swap).")]
    TotalReturnSwap = BookingTypeCode.TotalReturnSwap, // same ordinal as derivation source for type conversions
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class BookingType1CodeMetadataExtensions
{
    private static readonly BookingType1CodeDropdownSource _dropdownSource = new BookingType1CodeDropdownSource();
    
    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static IBookingType1CodeDropdownRow GetMetadata(this BookingType1Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


