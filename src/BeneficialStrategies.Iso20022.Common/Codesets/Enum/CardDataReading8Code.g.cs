//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for CardDataReading8Code.  ISO2002 ID# _u2wKkQxtEeqdx6buGpCCQw.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20022.Codesets;

/// <summary>
/// Type of reading of the card data.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_u2wKkQxtEeqdx6buGpCCQw")]
[Description(@"Type of reading of the card data.")]
[DerivedFrom(typeof(CardDataReadingCode))]
public enum CardDataReading8Code
{
    /// <summary>
    /// Tag reading capabilities (RFID, etc.).
    /// Encoded/decoded by serializers as "TAGC".
    /// </summary>
    [EnumMember(Value = "TAGC")]
    [IsoId("_vBrBIQxtEeqdx6buGpCCQw")]
    [Description(@"Tag reading capabilities (RFID, etc.).")]
    Tag = CardDataReadingCode.Tag, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Keyboard entry or OCR reading of embossing or printed data, either at time of transaction or after the event.
    /// Encoded/decoded by serializers as "PHYS".
    /// </summary>
    [EnumMember(Value = "PHYS")]
    [IsoId("_vBrBIwxtEeqdx6buGpCCQw")]
    [Description(@"Keyboard entry or OCR reading of embossing or printed data, either at time of transaction or after the event.")]
    Physical = CardDataReadingCode.Physical, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Bar code.
    /// Encoded/decoded by serializers as "BRCD".
    /// </summary>
    [EnumMember(Value = "BRCD")]
    [IsoId("_vBrBJQxtEeqdx6buGpCCQw")]
    [Description(@"Bar code.")]
    BarCode = CardDataReadingCode.BarCode, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Magnetic stripe.
    /// Encoded/decoded by serializers as "MGST".
    /// </summary>
    [EnumMember(Value = "MGST")]
    [IsoId("_vBrBJwxtEeqdx6buGpCCQw")]
    [Description(@"Magnetic stripe.")]
    MagneticStripe = CardDataReadingCode.MagneticStripe, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// ICC (Integrated Circuit Card) with contact containing software applications conform to ISO 7816.
    /// Encoded/decoded by serializers as "CICC".
    /// </summary>
    [EnumMember(Value = "CICC")]
    [IsoId("_vBrBKQxtEeqdx6buGpCCQw")]
    [Description(@"ICC (Integrated Circuit Card) with contact containing software applications conform to ISO 7816.")]
    ICC = CardDataReadingCode.ICC, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Account data on file.
    /// Encoded/decoded by serializers as "DFLE".
    /// </summary>
    [EnumMember(Value = "DFLE")]
    [IsoId("_vBrBKwxtEeqdx6buGpCCQw")]
    [Description(@"Account data on file.")]
    AccountData = CardDataReadingCode.AccountData, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Contactless proximity reader.
    /// Encoded/decoded by serializers as "CTLS".
    /// </summary>
    [EnumMember(Value = "CTLS")]
    [IsoId("_vBrBLQxtEeqdx6buGpCCQw")]
    [Description(@"Contactless proximity reader.")]
    ProximityReader = CardDataReadingCode.ProximityReader, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Contactless proximity reader, with application conform to the standard EMV (standard initiated by Europay, Mastercard and Visa).
    /// Encoded/decoded by serializers as "ECTL".
    /// </summary>
    [EnumMember(Value = "ECTL")]
    [IsoId("_vBrBLwxtEeqdx6buGpCCQw")]
    [Description(@"Contactless proximity reader, with application conform to the standard EMV (standard initiated by Europay, Mastercard and Visa).")]
    EMVProximityReader = CardDataReadingCode.EMVProximityReader, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Card information are stored on a file.
    /// Encoded/decoded by serializers as "CDFL".
    /// </summary>
    [EnumMember(Value = "CDFL")]
    [IsoId("_vBrBMQxtEeqdx6buGpCCQw")]
    [Description(@"Card information are stored on a file.")]
    CardOnFile = CardDataReadingCode.CardOnFile, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Synchronous ICC - (Integrated Circuit Card) with contact.
    /// Encoded/decoded by serializers as "SICC".
    /// </summary>
    [EnumMember(Value = "SICC")]
    [IsoId("_vBrBMwxtEeqdx6buGpCCQw")]
    [Description(@"Synchronous ICC - (Integrated Circuit Card) with contact.")]
    SynchronousIntegratedCircuitCard = CardDataReadingCode.SynchronousIntegratedCircuitCard, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Unknown card reading capability.
    /// Encoded/decoded by serializers as "UNKW".
    /// </summary>
    [EnumMember(Value = "UNKW")]
    [IsoId("_vBrBNQxtEeqdx6buGpCCQw")]
    [Description(@"Unknown card reading capability.")]
    Unknown = CardDataReadingCode.Unknown, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Quick response code.
    /// Encoded/decoded by serializers as "QRCD".
    /// </summary>
    [EnumMember(Value = "QRCD")]
    [IsoId("_1ZVGwQxtEeqdx6buGpCCQw")]
    [Description(@"Quick response code.")]
    QRCode = CardDataReadingCode.QRCode, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Optical coded reading capabilities (e.g. barcode, QR code, etc.)
    /// Encoded/decoded by serializers as "OPTC".
    /// </summary>
    [EnumMember(Value = "OPTC")]
    [IsoId("_y8Nm4BEJEeq7iqRI5vDgAQ")]
    [Description(@"Optical coded reading capabilities (e.g. barcode, QR code, etc.)")]
    OpticalCode = CardDataReadingCode.OpticalCode, // same ordinal as derivation source for type conversions
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class CardDataReading8CodeMetadataExtensions
{
    private static readonly CardDataReading8CodeDropdownSource _dropdownSource = new CardDataReading8CodeDropdownSource();
    
    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static ICardDataReading8CodeDropdownRow GetMetadata(this CardDataReading8Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


