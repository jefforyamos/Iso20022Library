//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for CheckType1Code.  ISO2002 ID# _fyQcYNtbEeipuvJHTHIw9A.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20022.Codesets;

/// <summary>
/// Type of bank check.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_fyQcYNtbEeipuvJHTHIw9A")]
[Description(@"Type of bank check.")]
[DerivedFrom(typeof(CheckTypeCode))]
public enum CheckType1Code
{
    /// <summary>
    /// The check is guaranteed by a bank.
    /// Encoded/decoded by serializers as "BANK".
    /// </summary>
    [EnumMember(Value = "BANK")]
    [IsoId("_ipUJEdtbEeipuvJHTHIw9A")]
    [Description(@"The check is guaranteed by a bank.")]
    BankCheck = CheckTypeCode.BankCheck, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// The check belongs to a Company or a professional entity.
    /// Encoded/decoded by serializers as "BUSI".
    /// </summary>
    [EnumMember(Value = "BUSI")]
    [IsoId("_itISEdtbEeipuvJHTHIw9A")]
    [Description(@"The check belongs to a Company or a professional entity.")]
    BusinessCheck = CheckTypeCode.BusinessCheck, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Check issued by Government.
    /// Encoded/decoded by serializers as "GOVC".
    /// </summary>
    [EnumMember(Value = "GOVC")]
    [IsoId("_ixdYcdtbEeipuvJHTHIw9A")]
    [Description(@"Check issued by Government.")]
    GovernmentCheck = CheckTypeCode.GovernmentCheck, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Check issued by a company for the employees.
    /// Encoded/decoded by serializers as "PAYR".
    /// </summary>
    [EnumMember(Value = "PAYR")]
    [IsoId("_i2vhEdtbEeipuvJHTHIw9A")]
    [Description(@"Check issued by a company for the employees.")]
    PayrollCheck = CheckTypeCode.PayrollCheck, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// The check belongs to an individual.
    /// Encoded/decoded by serializers as "PERS".
    /// </summary>
    [EnumMember(Value = "PERS")]
    [IsoId("_i6bHMdtbEeipuvJHTHIw9A")]
    [Description(@"The check belongs to an individual.")]
    PersonalCheck = CheckTypeCode.PersonalCheck, // same ordinal as derivation source for type conversions
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class CheckType1CodeMetadataExtensions
{
    private static readonly CheckType1CodeDropdownSource _dropdownSource = new CheckType1CodeDropdownSource();
    
    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static ICheckType1CodeDropdownRow GetMetadata(this CheckType1Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


