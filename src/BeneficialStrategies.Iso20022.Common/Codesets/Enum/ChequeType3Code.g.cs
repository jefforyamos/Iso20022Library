//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for ChequeType3Code.  ISO2002 ID# _a-7Jtdp-Ed-ak6NoX_4Aeg_1310151180.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Specifies the type of cheque.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_a-7Jtdp-Ed-ak6NoX_4Aeg_1310151180")]
[Description(@"Specifies the type of cheque.")]
[DerivedFrom(typeof(ChequeTypeCode))]
public enum ChequeType3Code
{
    /// <summary>
    /// A guaranteed bank cheque with a future value date (do not pay before], which in commercial terms is a 'negotiatable instrument': the beneficiary can receive early payment from any bank under subtraction of a discount. The ordering customer's account is debited on value date.
    /// Encoded/decoded by serializers as "Draft".
    /// </summary>
    [EnumMember(Value = "DRFT")]
    [IsoId("_a-7Jttp-Ed-ak6NoX_4Aeg_1310151272")]
    [Description(@"A guaranteed bank cheque with a future value date (do not pay before], which in commercial terms is a 'negotiatable instrument': the beneficiary can receive early payment from any bank under subtraction of a discount. The ordering customer's account is debited on value date.")]
    Draft,
    
    /// <summary>
    /// An instrument with a future value date (do not pay before], which in commercial terms is a 'negotiatable instrument': the beneficiary can receive early payment from any bank under subtraction of a discount. The ordering customer's account is debited on value date.
    /// Encoded/decoded by serializers as "ElectronicDraft".
    /// </summary>
    [EnumMember(Value = "ELDR")]
    [IsoId("_a-7Jt9p-Ed-ak6NoX_4Aeg_1310151519")]
    [Description(@"An instrument with a future value date (do not pay before], which in commercial terms is a 'negotiatable instrument': the beneficiary can receive early payment from any bank under subtraction of a discount. The ordering customer's account is debited on value date.")]
    ElectronicDraft,
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class ChequeType3CodeMetadataExtensions
{
    private static readonly ChequeType3CodeDropdownSource _dropdownSource = new ChequeType3CodeDropdownSource();

    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static IChequeType3CodeDropdownRow GetMetadata(this ChequeType3Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


