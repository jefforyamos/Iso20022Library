//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for ClearingAccountType4Code.  ISO2002 ID# _CGl4YIJLEeuDe9SyRl5qeg.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Specifies the clearing account type.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_CGl4YIJLEeuDe9SyRl5qeg")]
[Description(@"Specifies the clearing account type.")]
[DerivedFrom(typeof(ClearingAccountTypeCode))]
public enum ClearingAccountType4Code
{
    /// <summary>
    /// Specifies that the account is used to register trades executed for the clearing member's customers.
    /// Encoded/decoded by serializers as "CLIE".
    /// </summary>
    [EnumMember(Value = "CLIE")]
    [IsoId("_Gbdm4YJLEeuDe9SyRl5qeg")]
    [Description(@"Specifies that the account is used to register trades executed for the clearing member's customers.")]
    Client = ClearingAccountTypeCode.Client, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Specifies that the account is used to register trades executed for either the clearing member or its subsidiaries.
    /// Encoded/decoded by serializers as "HOUS".
    /// </summary>
    [EnumMember(Value = "HOUS")]
    [IsoId("_GmBREYJLEeuDe9SyRl5qeg")]
    [Description(@"Specifies that the account is used to register trades executed for either the clearing member or its subsidiaries.")]
    House = ClearingAccountTypeCode.House, // same ordinal as derivation source for type conversions
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class ClearingAccountType4CodeMetadataExtensions
{
    private static readonly ClearingAccountType4CodeDropdownSource _dropdownSource = new ClearingAccountType4CodeDropdownSource();
    
    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static IClearingAccountType4CodeDropdownRow GetMetadata(this ClearingAccountType4Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


