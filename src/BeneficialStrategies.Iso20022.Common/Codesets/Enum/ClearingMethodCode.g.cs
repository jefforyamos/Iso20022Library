//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for ClearingMethodCode.  ISO2002 ID# _99IlkA8SEeSFHsNYty4C9Q.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Specifies whether the value is net (inclusive of tax) or gross.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_99IlkA8SEeSFHsNYty4C9Q")]
[Description(@"Specifies whether the value is net (inclusive of tax) or gross.")]
public enum ClearingMethodCode
{
    /// <summary>
    /// Settlement done by netting amounts (for trades in the same currency and for the same value date).
    /// </summary>
    [EnumMember(Value = "NENE")]
    [IsoId("_Gp_A8A8TEeSFHsNYty4C9Q")]
    [Description(@"Settlement done by netting amounts (for trades in the same currency and for the same value date).")]
    NENE,
    
    /// <summary>
    /// Each trade is settled by a single entry to the account of the beneficiary.
    /// </summary>
    [EnumMember(Value = "GRNE")]
    [IsoId("_NDxNgA8TEeSFHsNYty4C9Q")]
    [Description(@"Each trade is settled by a single entry to the account of the beneficiary.")]
    GRNE,
    
    /// <summary>
    /// In a foreign exchange transaction, the third party as a central clearing counterparty will settle the transaction for both sides respectively.
    /// </summary>
    [EnumMember(Value = "NEMA")]
    [IsoId("_Tjg4IA8TEeSFHsNYty4C9Q")]
    [Description(@"In a foreign exchange transaction, the third party as a central clearing counterparty will settle the transaction for both sides respectively.")]
    NEMA,
    
    /// <summary>
    /// Day clearing.
    /// </summary>
    [EnumMember(Value = "DAYC")]
    [IsoId("_sC6yNnx8EemHsOqJOzMVfg")]
    [Description(@"Day clearing.")]
    DAYC,
    
    /// <summary>
    /// Clearing to be deferred in time.
    /// </summary>
    [EnumMember(Value = "DFRD")]
    [IsoId("_sC6yN3x8EemHsOqJOzMVfg")]
    [Description(@"Clearing to be deferred in time.")]
    DFRD,
    
    /// <summary>
    /// Clearing for instant payments and transfers.
    /// </summary>
    [EnumMember(Value = "INST")]
    [IsoId("_sC6yOHx8EemHsOqJOzMVfg")]
    [Description(@"Clearing for instant payments and transfers.")]
    INST,
    
    /// <summary>
    /// Other type of clearing method defined at national level.
    /// </summary>
    [EnumMember(Value = "OTHN")]
    [IsoId("_sC6yOXx8EemHsOqJOzMVfg")]
    [Description(@"Other type of clearing method defined at national level.")]
    OTHN,
    
    /// <summary>
    /// Other type of clearing method defined at private level.
    /// </summary>
    [EnumMember(Value = "OTHP")]
    [IsoId("_sC6yOnx8EemHsOqJOzMVfg")]
    [Description(@"Other type of clearing method defined at private level.")]
    OTHP,
    
    /// <summary>
    /// Clearing done in real time.
    /// </summary>
    [EnumMember(Value = "RLTM")]
    [IsoId("_sC6yO3x8EemHsOqJOzMVfg")]
    [Description(@"Clearing done in real time.")]
    RLTM,
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class ClearingMethodCodeMetadataExtensions
{
    private static readonly ClearingMethodCodeDropdownSource _dropdownSource = new ClearingMethodCodeDropdownSource();

    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static IClearingMethodCodeDropdownRow GetMetadata(this ClearingMethodCode code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


