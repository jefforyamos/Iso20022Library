//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for ClosingType1Code.  ISO2002 ID# _KgvwANonEeCWg-hsBVGrDA_-669343258.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Specifies the timing or method for terminating the agreement - for repos.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_KgvwANonEeCWg-hsBVGrDA_-669343258")]
[Description(@"Specifies the timing or method for terminating the agreement - for repos.")]
[DerivedFrom(typeof(TerminationTypeCode))]
public enum ClosingType1Code
{
    /// <summary>
    /// Repo with a term of one day.
    /// Encoded/decoded by serializers as "OVER".
    /// </summary>
    [EnumMember(Value = "OVER")]
    [IsoId("_KgvwAdonEeCWg-hsBVGrDA_975924177")]
    [Description(@"Repo with a term of one day.")]
    Overnight = TerminationTypeCode.Overnight, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Repo with a term of more than one day.
    /// Encoded/decoded by serializers as "TERM".
    /// </summary>
    [EnumMember(Value = "TERM")]
    [IsoId("_KgvwAtonEeCWg-hsBVGrDA_-1666415611")]
    [Description(@"Repo with a term of more than one day.")]
    Term = TerminationTypeCode.Term, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Identifies "a classic term repo with the added feature that the cash is repaid to the buyer in installments" (Definition from "Mastering Repo Markets" by Bob Steiner).
    /// Encoded/decoded by serializers as "FLEX".
    /// </summary>
    [EnumMember(Value = "FLEX")]
    [IsoId("_KgvwA9onEeCWg-hsBVGrDA_-1488296939")]
    [Description(@"Identifies ""a classic term repo with the added feature that the cash is repaid to the buyer in installments"" (Definition from ""Mastering Repo Markets"" by Bob Steiner).")]
    Flexible = TerminationTypeCode.Flexible, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Repo which can be terminated by either party at any time, and which has an unspecified repurchase date.
    /// Encoded/decoded by serializers as "OPEN".
    /// </summary>
    [EnumMember(Value = "OPEN")]
    [IsoId("_KgvwBNonEeCWg-hsBVGrDA_-1780254677")]
    [Description(@"Repo which can be terminated by either party at any time, and which has an unspecified repurchase date.")]
    Open = TerminationTypeCode.Open, // same ordinal as derivation source for type conversions
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class ClosingType1CodeMetadataExtensions
{
    private static readonly ClosingType1CodeDropdownSource _dropdownSource = new ClosingType1CodeDropdownSource();
    
    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static IClosingType1CodeDropdownRow GetMetadata(this ClosingType1Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


