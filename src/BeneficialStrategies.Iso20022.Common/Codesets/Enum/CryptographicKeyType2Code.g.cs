//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for CryptographicKeyType2Code.  ISO2002 ID# _wL_l8Cm0EeKIjpr--01h3Q.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Codes for qualifying the type of cryptographic keys;.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_wL_l8Cm0EeKIjpr--01h3Q")]
[Description(@"Codes for qualifying the type of cryptographic keys;.")]
[DerivedFrom(typeof(CryptographicKeyTypeCode))]
public enum CryptographicKeyType2Code
{
    /// <summary>
    /// AES (Advanced Encryption Standard) 128 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).
    /// Encoded/decoded by serializers as "AES2".
    /// </summary>
    [EnumMember(Value = "AES2")]
    [IsoId("_yZyTMSm0EeKIjpr--01h3Q")]
    [Description(@"AES (Advanced Encryption Standard) 128 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).")]
    AES128 = CryptographicKeyTypeCode.AES128, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Data encryption standard key of 112 bits (without the parity bits).
    /// Encoded/decoded by serializers as "EDE3".
    /// </summary>
    [EnumMember(Value = "EDE3")]
    [IsoId("_zIyuQym0EeKIjpr--01h3Q")]
    [Description(@"Data encryption standard key of 112 bits (without the parity bits).")]
    DES112 = CryptographicKeyTypeCode.DES112, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// DUKPT (Derived Unique Key Per Transaction) key, as specified in ANSI X9.24-2009 Annex A.
    /// Encoded/decoded by serializers as "DKP9".
    /// </summary>
    [EnumMember(Value = "DKP9")]
    [IsoId("_zYRUsym0EeKIjpr--01h3Q")]
    [Description(@"DUKPT (Derived Unique Key Per Transaction) key, as specified in ANSI X9.24-2009 Annex A.")]
    DUKPT2009 = CryptographicKeyTypeCode.DUKPT2009, // same ordinal as derivation source for type conversions
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class CryptographicKeyType2CodeMetadataExtensions
{
    private static readonly CryptographicKeyType2CodeDropdownSource _dropdownSource = new CryptographicKeyType2CodeDropdownSource();
    
    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static ICryptographicKeyType2CodeDropdownRow GetMetadata(this CryptographicKeyType2Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


