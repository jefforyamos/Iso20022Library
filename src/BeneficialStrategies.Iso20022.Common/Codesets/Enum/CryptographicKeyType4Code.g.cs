//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for CryptographicKeyType4Code.  ISO2002 ID# _NwgesItJEeSxlKlAGYErFg.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20022.Codesets;

/// <summary>
/// Category of the cryptographic key.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_NwgesItJEeSxlKlAGYErFg")]
[Description(@"Category of the cryptographic key.")]
[DerivedFrom(typeof(CryptographicKeyTypeCode))]
public enum CryptographicKeyType4Code
{
    /// <summary>
    /// Key used to protect application information.
    /// Encoded/decoded by serializers as "APPL".
    /// </summary>
    [EnumMember(Value = "APPL")]
    [IsoId("_VAq5oYtJEeSxlKlAGYErFg")]
    [Description(@"Key used to protect application information.")]
    Application = CryptographicKeyTypeCode.Application, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Key used to protect data in the messages.
    /// Encoded/decoded by serializers as "DATA".
    /// </summary>
    [EnumMember(Value = "DATA")]
    [IsoId("_VKNQI4tJEeSxlKlAGYErFg")]
    [Description(@"Key used to protect data in the messages.")]
    Data = CryptographicKeyTypeCode.Data, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Any cryptographic key that can be downloaded.
    /// Encoded/decoded by serializers as "DYNC".
    /// </summary>
    [EnumMember(Value = "DYNC")]
    [IsoId("_VcPbU4tJEeSxlKlAGYErFg")]
    [Description(@"Any cryptographic key that can be downloaded.")]
    Dynamic = CryptographicKeyTypeCode.Dynamic, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Key used to encrypt other keys.
    /// Encoded/decoded by serializers as "KENC".
    /// </summary>
    [EnumMember(Value = "KENC")]
    [IsoId("_Vntrg4tJEeSxlKlAGYErFg")]
    [Description(@"Key used to encrypt other keys.")]
    KeyEncryption = CryptographicKeyTypeCode.KeyEncryption, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Key used to generate the MAC of a message.
    /// Encoded/decoded by serializers as "MACK".
    /// </summary>
    [EnumMember(Value = "MACK")]
    [IsoId("_V28aU4tJEeSxlKlAGYErFg")]
    [Description(@"Key used to generate the MAC of a message.")]
    MAC = CryptographicKeyTypeCode.MAC, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Key used to encrypt a PIN.
    /// Encoded/decoded by serializers as "PINK".
    /// </summary>
    [EnumMember(Value = "PINK")]
    [IsoId("_WBHC84tJEeSxlKlAGYErFg")]
    [Description(@"Key used to encrypt a PIN.")]
    PIN = CryptographicKeyTypeCode.PIN, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Temporary key used to download keys.
    /// Encoded/decoded by serializers as "WRKG".
    /// </summary>
    [EnumMember(Value = "WRKG")]
    [IsoId("_WJwBk4tJEeSxlKlAGYErFg")]
    [Description(@"Temporary key used to download keys.")]
    Working = CryptographicKeyTypeCode.Working, // same ordinal as derivation source for type conversions
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class CryptographicKeyType4CodeMetadataExtensions
{
    private static readonly CryptographicKeyType4CodeDropdownSource _dropdownSource = new CryptographicKeyType4CodeDropdownSource();
    
    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static ICryptographicKeyType4CodeDropdownRow GetMetadata(this CryptographicKeyType4Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


