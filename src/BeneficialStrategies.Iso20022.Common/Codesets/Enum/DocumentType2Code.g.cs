//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for DocumentType2Code.  ISO2002 ID# _af7gl9p-Ed-ak6NoX_4Aeg_-1135079340.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Specifies a type of financial or commercial document.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_af7gl9p-Ed-ak6NoX_4Aeg_-1135079340")]
[Description(@"Specifies a type of financial or commercial document.")]
[DerivedFrom(typeof(DocumentTypeCode))]
public enum DocumentType2Code
{
    /// <summary>
    /// Document is an invoice claiming payment for the supply of metered services, for example gas or electricity supplied to a fixed meter.
    /// Encoded/decoded by serializers as "MSIN".
    /// </summary>
    [EnumMember(Value = "MSIN")]
    [IsoId("_af7gmNp-Ed-ak6NoX_4Aeg_-1135079244")]
    [Description(@"Document is an invoice claiming payment for the supply of metered services, for example gas or electricity supplied to a fixed meter.")]
    MeteredServiceInvoice = DocumentTypeCode.MeteredServiceInvoice, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Document is a credit note for the final amount settled for a commercial transaction.
    /// Encoded/decoded by serializers as "CNFA".
    /// </summary>
    [EnumMember(Value = "CNFA")]
    [IsoId("_af7gmdp-Ed-ak6NoX_4Aeg_-1135079227")]
    [Description(@"Document is a credit note for the final amount settled for a commercial transaction.")]
    CreditNoteRelatedToFinancialAdjustment = DocumentTypeCode.CreditNoteRelatedToFinancialAdjustment, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Document is a debit note for the final amount settled for a commercial transaction.
    /// Encoded/decoded by serializers as "DNFA".
    /// </summary>
    [EnumMember(Value = "DNFA")]
    [IsoId("_agEqgNp-Ed-ak6NoX_4Aeg_-1135079209")]
    [Description(@"Document is a debit note for the final amount settled for a commercial transaction.")]
    DebitNoteRelatedToFinancialAdjustment = DocumentTypeCode.DebitNoteRelatedToFinancialAdjustment, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Document is an invoice.
    /// Encoded/decoded by serializers as "CINV".
    /// </summary>
    [EnumMember(Value = "CINV")]
    [IsoId("_agEqgdp-Ed-ak6NoX_4Aeg_-1135078967")]
    [Description(@"Document is an invoice.")]
    CommercialInvoice = DocumentTypeCode.CommercialInvoice, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Document is a credit note.
    /// Encoded/decoded by serializers as "CREN".
    /// </summary>
    [EnumMember(Value = "CREN")]
    [IsoId("_agEqgtp-Ed-ak6NoX_4Aeg_-1135078950")]
    [Description(@"Document is a credit note.")]
    CreditNote = DocumentTypeCode.CreditNote, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Document is a debit note.
    /// Encoded/decoded by serializers as "DEBN".
    /// </summary>
    [EnumMember(Value = "DEBN")]
    [IsoId("_agEqg9p-Ed-ak6NoX_4Aeg_-1135078932")]
    [Description(@"Document is a debit note.")]
    DebitNote = DocumentTypeCode.DebitNote, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Document is an invoice for the hiring of human resources or renting goods or equipment.
    /// Encoded/decoded by serializers as "HIRI".
    /// </summary>
    [EnumMember(Value = "HIRI")]
    [IsoId("_agEqhNp-Ed-ak6NoX_4Aeg_-1135078915")]
    [Description(@"Document is an invoice for the hiring of human resources or renting goods or equipment.")]
    HireInvoice = DocumentTypeCode.HireInvoice, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Document is an invoice issued by the debtor.
    /// Encoded/decoded by serializers as "SBIN".
    /// </summary>
    [EnumMember(Value = "SBIN")]
    [IsoId("_agEqhdp-Ed-ak6NoX_4Aeg_-1135078897")]
    [Description(@"Document is an invoice issued by the debtor.")]
    SelfBilledInvoice = DocumentTypeCode.SelfBilledInvoice, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Document is an agreement between the parties, stipulating the terms and conditions of the delivery of goods or services.
    /// Encoded/decoded by serializers as "CMCN".
    /// </summary>
    [EnumMember(Value = "CMCN")]
    [IsoId("_agEqhtp-Ed-ak6NoX_4Aeg_-1135078837")]
    [Description(@"Document is an agreement between the parties, stipulating the terms and conditions of the delivery of goods or services.")]
    CommercialContract = DocumentTypeCode.CommercialContract, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Document is a statement of the transactions posted to the debtor's account at the supplier.
    /// Encoded/decoded by serializers as "SOAC".
    /// </summary>
    [EnumMember(Value = "SOAC")]
    [IsoId("_agEqh9p-Ed-ak6NoX_4Aeg_-1135078795")]
    [Description(@"Document is a statement of the transactions posted to the debtor's account at the supplier.")]
    StatementOfAccount = DocumentTypeCode.StatementOfAccount, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Document is a dispatch advice.
    /// Encoded/decoded by serializers as "DISP".
    /// </summary>
    [EnumMember(Value = "DISP")]
    [IsoId("_agEqiNp-Ed-ak6NoX_4Aeg_-864489577")]
    [Description(@"Document is a dispatch advice.")]
    DispatchAdvice = DocumentTypeCode.DispatchAdvice, // same ordinal as derivation source for type conversions
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class DocumentType2CodeMetadataExtensions
{
    private static readonly DocumentType2CodeDropdownSource _dropdownSource = new DocumentType2CodeDropdownSource();
    
    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static IDocumentType2CodeDropdownRow GetMetadata(this DocumentType2Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


