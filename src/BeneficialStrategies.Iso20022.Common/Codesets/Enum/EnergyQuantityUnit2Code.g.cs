//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for EnergyQuantityUnit2Code.  ISO2002 ID# _fXdYECi_EeuKKc2MztSwPw.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Specifies an energy quantity unit.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_fXdYECi_EeuKKc2MztSwPw")]
[Description(@"Specifies an energy quantity unit.")]
[DerivedFrom(typeof(EnergyQuantityUnitCode))]
public enum EnergyQuantityUnit2Code
{
    /// <summary>
    /// British Thermal Unit Per Day
    /// Encoded/decoded by serializers as "BritishThermalUnitPerDay".
    /// </summary>
    [EnumMember(Value = "BTUD")]
    [IsoId("_kRrPUSi_EeuKKc2MztSwPw")]
    [Description(@"British Thermal Unit Per Day")]
    BritishThermalUnitPerDay,
    
    /// <summary>
    /// Cm per day.
    /// Encoded/decoded by serializers as "CMPerDay".
    /// </summary>
    [EnumMember(Value = "CMPD")]
    [IsoId("_kYg3ISi_EeuKKc2MztSwPw")]
    [Description(@"Cm per day.")]
    CMPerDay,
    
    /// <summary>
    /// GigaJoule Per Day.
    /// Encoded/decoded by serializers as "GigaJoulePerDay".
    /// </summary>
    [EnumMember(Value = "GJDD")]
    [IsoId("_kduHQSi_EeuKKc2MztSwPw")]
    [Description(@"GigaJoule Per Day.")]
    GigaJoulePerDay,
    
    /// <summary>
    /// Giga Watt.
    /// Encoded/decoded by serializers as "GW".
    /// </summary>
    [EnumMember(Value = "GWAT")]
    [IsoId("_kmDj4Si_EeuKKc2MztSwPw")]
    [Description(@"Giga Watt.")]
    GW,
    
    /// <summary>
    /// Giga Watt hour per day.
    /// Encoded/decoded by serializers as "GWhPerDay".
    /// </summary>
    [EnumMember(Value = "GWHD")]
    [IsoId("_krtf8Si_EeuKKc2MztSwPw")]
    [Description(@"Giga Watt hour per day.")]
    GWhPerDay,
    
    /// <summary>
    /// Giga Watt hour per hour.
    /// Encoded/decoded by serializers as "GWhPerHour".
    /// </summary>
    [EnumMember(Value = "GWHH")]
    [IsoId("_kvudQSi_EeuKKc2MztSwPw")]
    [Description(@"Giga Watt hour per hour.")]
    GWhPerHour,
    
    /// <summary>
    /// Hundred MegaJoule Per Day.
    /// Encoded/decoded by serializers as "HundredMegaJoulePerDay".
    /// </summary>
    [EnumMember(Value = "HMJD")]
    [IsoId("_k0fBcSi_EeuKKc2MztSwPw")]
    [Description(@"Hundred MegaJoule Per Day.")]
    HundredMegaJoulePerDay,
    
    /// <summary>
    /// KTherm per day.
    /// Encoded/decoded by serializers as "KThermPerDay".
    /// </summary>
    [EnumMember(Value = "KTMD")]
    [IsoId("_k4y5sSi_EeuKKc2MztSwPw")]
    [Description(@"KTherm per day.")]
    KThermPerDay,
    
    /// <summary>
    /// Kilo Watt.
    /// Encoded/decoded by serializers as "KW".
    /// </summary>
    [EnumMember(Value = "KWAT")]
    [IsoId("_k8XyISi_EeuKKc2MztSwPw")]
    [Description(@"Kilo Watt.")]
    KW,
    
    /// <summary>
    /// Kilo Watt hour per day.
    /// Encoded/decoded by serializers as "KWhPerDay".
    /// </summary>
    [EnumMember(Value = "KWHD")]
    [IsoId("_lAigcSi_EeuKKc2MztSwPw")]
    [Description(@"Kilo Watt hour per day.")]
    KWhPerDay,
    
    /// <summary>
    /// Kilo Watt hour per hour.
    /// Encoded/decoded by serializers as "KWhPerHour".
    /// </summary>
    [EnumMember(Value = "KWHH")]
    [IsoId("_lLZFkSi_EeuKKc2MztSwPw")]
    [Description(@"Kilo Watt hour per hour.")]
    KWhPerHour,
    
    /// <summary>
    /// Mcm per day.
    /// Encoded/decoded by serializers as "MCMPerDay".
    /// </summary>
    [EnumMember(Value = "MCMD")]
    [IsoId("_lQwGsSi_EeuKKc2MztSwPw")]
    [Description(@"Mcm per day.")]
    MCMPerDay,
    
    /// <summary>
    /// MegaJoule Per Day.
    /// Encoded/decoded by serializers as "MegaJoulePerDay".
    /// </summary>
    [EnumMember(Value = "MJDD")]
    [IsoId("_lVqb4Si_EeuKKc2MztSwPw")]
    [Description(@"MegaJoule Per Day.")]
    MegaJoulePerDay,
    
    /// <summary>
    /// Million British Thermal Unit Per Day.
    /// Encoded/decoded by serializers as "MillionBritishThermalUnitPerDay".
    /// </summary>
    [EnumMember(Value = "MBTD")]
    [IsoId("_lZ-UISi_EeuKKc2MztSwPw")]
    [Description(@"Million British Thermal Unit Per Day.")]
    MillionBritishThermalUnitPerDay,
    
    /// <summary>
    /// Million MegaJoule Per Day.
    /// Encoded/decoded by serializers as "MillionMegaJoulePerDay".
    /// </summary>
    [EnumMember(Value = "MMJD")]
    [IsoId("_lh3E0Si_EeuKKc2MztSwPw")]
    [Description(@"Million MegaJoule Per Day.")]
    MillionMegaJoulePerDay,
    
    /// <summary>
    /// MTherm per day.
    /// Encoded/decoded by serializers as "MThermPerDay".
    /// </summary>
    [EnumMember(Value = "MTMD")]
    [IsoId("_lotTsSi_EeuKKc2MztSwPw")]
    [Description(@"MTherm per day.")]
    MThermPerDay,
    
    /// <summary>
    /// Mega Watt.
    /// Encoded/decoded by serializers as "MW".
    /// </summary>
    [EnumMember(Value = "MWAT")]
    [IsoId("_ltBL8Si_EeuKKc2MztSwPw")]
    [Description(@"Mega Watt.")]
    MW,
    
    /// <summary>
    /// Mega Watt hour per day.
    /// Encoded/decoded by serializers as "MWhPerDay".
    /// </summary>
    [EnumMember(Value = "MWHD")]
    [IsoId("_lx7hISi_EeuKKc2MztSwPw")]
    [Description(@"Mega Watt hour per day.")]
    MWhPerDay,
    
    /// <summary>
    /// Mega Watt hour per hour.
    /// Encoded/decoded by serializers as "MWhPerHour".
    /// </summary>
    [EnumMember(Value = "MWHH")]
    [IsoId("_l2iUUSi_EeuKKc2MztSwPw")]
    [Description(@"Mega Watt hour per hour.")]
    MWhPerHour,
    
    /// <summary>
    /// Therm per day.
    /// Encoded/decoded by serializers as "ThermPerDay".
    /// </summary>
    [EnumMember(Value = "THMD")]
    [IsoId("_l8o8USi_EeuKKc2MztSwPw")]
    [Description(@"Therm per day.")]
    ThermPerDay,
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class EnergyQuantityUnit2CodeMetadataExtensions
{
    private static readonly EnergyQuantityUnit2CodeDropdownSource _dropdownSource = new EnergyQuantityUnit2CodeDropdownSource();

    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static IEnergyQuantityUnit2CodeDropdownRow GetMetadata(this EnergyQuantityUnit2Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


