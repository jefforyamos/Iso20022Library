//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for ExternalAcceptedReason1Code.  ISO2002 ID# _fNkVgFjqEeOnqqBHs8Gasw.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Specifies the reason for an accepted status.|
/// The list of valid codes is an external code list published separately. 
/// External code sets can be downloaded from www.iso20022.org.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_fNkVgFjqEeOnqqBHs8Gasw")]
[Description(@"Specifies the reason for an accepted status.||The list of valid codes is an external code list published separately. |External code sets can be downloaded from www.iso20022.org.")]
[DerivedFrom(typeof(ExternalAcceptedReasonCode))]
public enum ExternalAcceptedReason1Code
{
    /// <summary>
    /// Received after the servicer's deadline. Processed on best effort basis
    /// Encoded/decoded by serializers as "ADEA".
    /// </summary>
    [EnumMember(Value = "ADEA")]
    [IsoId("_uVGJS_RYEeuLhpyIdtJzwg")]
    [Description(@"Received after the servicer's deadline. Processed on best effort basis")]
    AccountServicerDeadlineMissed = ExternalAcceptedReasonCode.AccountServicerDeadlineMissed, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Instruction was not straight through processing and had to be processed manually
    /// Encoded/decoded by serializers as "NSTP".
    /// </summary>
    [EnumMember(Value = "NSTP")]
    [IsoId("_uVP6QvRYEeuLhpyIdtJzwg")]
    [Description(@"Instruction was not straight through processing and had to be processed manually")]
    NotStraightThroughProcessing = ExternalAcceptedReasonCode.NotStraightThroughProcessing, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Instruction is accepted but does not comply with the market practice rule published for the concerned market or process
    /// Encoded/decoded by serializers as "SMPG".
    /// </summary>
    [EnumMember(Value = "SMPG")]
    [IsoId("_uVP6RfRYEeuLhpyIdtJzwg")]
    [Description(@"Instruction is accepted but does not comply with the market practice rule published for the concerned market or process")]
    MarketPracticeRuleDiscrepency = ExternalAcceptedReasonCode.MarketPracticeRuleDiscrepency, // same ordinal as derivation source for type conversions
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class ExternalAcceptedReason1CodeMetadataExtensions
{
    private static readonly ExternalAcceptedReason1CodeDropdownSource _dropdownSource = new ExternalAcceptedReason1CodeDropdownSource();
    
    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static IExternalAcceptedReason1CodeDropdownRow GetMetadata(this ExternalAcceptedReason1Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


