//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for ExternalUnitOfMeasure1Code.  ISO2002 ID# _nN1oMDNmEe2UWZuK9pqFtg.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Specifies the external unit of measure by means of a code in the format of character string with a maximum length of 4 characters.
/// The list of valid codes is an external code list published separately.
/// External code sets can be downloaded from www.iso20022.org.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_nN1oMDNmEe2UWZuK9pqFtg")]
[Description(@"Specifies the external unit of measure by means of a code in the format of character string with a maximum length of 4 characters. The list of valid codes is an external code list published separately. External code sets can be downloaded from www.iso20022.org.")]
[DerivedFrom(typeof(ExternalUnitOfMeasureCode))]
public enum ExternalUnitOfMeasure1Code
{
    /// <summary>
    /// Basic unit of mass in the SI system, 1000 grams.
    /// Encoded/decoded by serializers as "Kilogram".
    /// </summary>
    [EnumMember(Value = "KILO")]
    [IsoId("_nPi4YTNmEe2UWZuK9pqFtg")]
    [Description(@"Basic unit of mass in the SI system, 1000 grams.")]
    Kilogram,
    
    /// <summary>
    /// Standard length of cloth, wallpaper, as an item for sale or amount of a substance.
    /// Encoded/decoded by serializers as "Piece".
    /// </summary>
    [EnumMember(Value = "PIEC")]
    [IsoId("_nPi4YzNmEe2UWZuK9pqFtg")]
    [Description(@"Standard length of cloth, wallpaper, as an item for sale or amount of a substance.")]
    Piece,
    
    /// <summary>
    /// Measure of weight, in Britain 2240lb (long ton)and in the US 2000lb (short ton).
    /// Encoded/decoded by serializers as "Ton".
    /// </summary>
    [EnumMember(Value = "TONS")]
    [IsoId("_nPi4ZTNmEe2UWZuK9pqFtg")]
    [Description(@"Measure of weight, in Britain 2240lb (long ton)and in the US 2000lb (short ton).")]
    Ton,
    
    /// <summary>
    /// Unit of length in the metric system, equal to 39.37 inches.
    /// Encoded/decoded by serializers as "Metre".
    /// </summary>
    [EnumMember(Value = "METR")]
    [IsoId("_nPi4ZzNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of length in the metric system, equal to 39.37 inches.")]
    Metre,
    
    /// <summary>
    /// Measure of length equal to 2.54 cm.
    /// Encoded/decoded by serializers as "Inch".
    /// </summary>
    [EnumMember(Value = "INCH")]
    [IsoId("_nPi4aTNmEe2UWZuK9pqFtg")]
    [Description(@"Measure of length equal to 2.54 cm.")]
    Inch,
    
    /// <summary>
    /// Unit of length equal to 3 feet or 0.9144 metre.
    /// Encoded/decoded by serializers as "Yard".
    /// </summary>
    [EnumMember(Value = "YARD")]
    [IsoId("_nPi4azNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of length equal to 3 feet or 0.9144 metre.")]
    Yard,
    
    /// <summary>
    /// Unit of volume that is equal to 8 pints.
    /// Encoded/decoded by serializers as "GBGallon".
    /// </summary>
    [EnumMember(Value = "GBGA")]
    [IsoId("_nPi4bTNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of volume that is equal to 8 pints.")]
    GBGallon,
    
    /// <summary>
    /// Unit of measure that is equal to a 1, 000th of a kilo.
    /// Encoded/decoded by serializers as "Gram".
    /// </summary>
    [EnumMember(Value = "GRAM")]
    [IsoId("_nPi4bzNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of measure that is equal to a 1, 000th of a kilo.")]
    Gram,
    
    /// <summary>
    /// Unit of measure that is equal to one hundredth of a metre.
    /// Encoded/decoded by serializers as "Centimetre".
    /// </summary>
    [EnumMember(Value = "CMET")]
    [IsoId("_nPi4cTNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of measure that is equal to one hundredth of a metre.")]
    Centimetre,
    
    /// <summary>
    /// Measure of a surface, one metre by one metre.
    /// Encoded/decoded by serializers as "SquareMetre".
    /// </summary>
    [EnumMember(Value = "SMET")]
    [IsoId("_nPjfcTNmEe2UWZuK9pqFtg")]
    [Description(@"Measure of a surface, one metre by one metre.")]
    SquareMetre,
    
    /// <summary>
    /// Unit of length equal to 1/3 yard.
    /// Encoded/decoded by serializers as "Foot".
    /// </summary>
    [EnumMember(Value = "FOOT")]
    [IsoId("_nPjfczNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of length equal to 1/3 yard.")]
    Foot,
    
    /// <summary>
    /// Unit of length equal to 1, 760 yards.
    /// Encoded/decoded by serializers as "Mile".
    /// </summary>
    [EnumMember(Value = "MILE")]
    [IsoId("_nPjfdTNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of length equal to 1, 760 yards.")]
    Mile,
    
    /// <summary>
    /// Measure of a surface, one inch by one inch.
    /// Encoded/decoded by serializers as "SquareInch".
    /// </summary>
    [EnumMember(Value = "SQIN")]
    [IsoId("_nPjfdzNmEe2UWZuK9pqFtg")]
    [Description(@"Measure of a surface, one inch by one inch.")]
    SquareInch,
    
    /// <summary>
    /// Measure of a surface, one foot by one foot.
    /// Encoded/decoded by serializers as "SquareFoot".
    /// </summary>
    [EnumMember(Value = "SQFO")]
    [IsoId("_nPjfeTNmEe2UWZuK9pqFtg")]
    [Description(@"Measure of a surface, one foot by one foot.")]
    SquareFoot,
    
    /// <summary>
    /// Measure of a surface, one mile by one mile.
    /// Encoded/decoded by serializers as "SquareMile".
    /// </summary>
    [EnumMember(Value = "SQMI")]
    [IsoId("_nPjfezNmEe2UWZuK9pqFtg")]
    [Description(@"Measure of a surface, one mile by one mile.")]
    SquareMile,
    
    /// <summary>
    /// Unit of weight equal to a sixteenth of a pound.
    /// Encoded/decoded by serializers as "GBOunce".
    /// </summary>
    [EnumMember(Value = "GBOU")]
    [IsoId("_nPjffTNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of weight equal to a sixteenth of a pound.")]
    GBOunce,
    
    /// <summary>
    /// Unit of weight equal to a sixteenth of a pound.
    /// Encoded/decoded by serializers as "USOunce".
    /// </summary>
    [EnumMember(Value = "USOU")]
    [IsoId("_nPjffzNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of weight equal to a sixteenth of a pound.")]
    USOunce,
    
    /// <summary>
    /// Unit of volume that is equal to 568 cubic centimetres.
    /// Encoded/decoded by serializers as "GBPint".
    /// </summary>
    [EnumMember(Value = "GBPI")]
    [IsoId("_nPjfgTNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of volume that is equal to 568 cubic centimetres.")]
    GBPint,
    
    /// <summary>
    /// Unit of volume that is equal to 473 cubic centimetres.
    /// Encoded/decoded by serializers as "USPint".
    /// </summary>
    [EnumMember(Value = "USPI")]
    [IsoId("_nPjfgzNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of volume that is equal to 473 cubic centimetres.")]
    USPint,
    
    /// <summary>
    /// Unit of volume that is equal to 2 pints.
    /// Encoded/decoded by serializers as "GBQuart".
    /// </summary>
    [EnumMember(Value = "GBQA")]
    [IsoId("_nPjfhTNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of volume that is equal to 2 pints.")]
    GBQuart,
    
    /// <summary>
    /// Unit of volume that is equal to 2 pints.
    /// Encoded/decoded by serializers as "USQuart".
    /// </summary>
    [EnumMember(Value = "USQA")]
    [IsoId("_nPjfhzNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of volume that is equal to 2 pints.")]
    USQuart,
    
    /// <summary>
    /// Unit of volume that is equal to 8 pints.
    /// Encoded/decoded by serializers as "USGallon".
    /// </summary>
    [EnumMember(Value = "USGA")]
    [IsoId("_nPjfiTNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of volume that is equal to 8 pints.")]
    USGallon,
    
    /// <summary>
    /// Unit of measure that is a thousandth of one metre.
    /// Encoded/decoded by serializers as "Millimetre".
    /// </summary>
    [EnumMember(Value = "MMET")]
    [IsoId("_nPjfizNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of measure that is a thousandth of one metre.")]
    Millimetre,
    
    /// <summary>
    /// Unit of measure that is equal to 1, 000 meters.
    /// Encoded/decoded by serializers as "Kilometre".
    /// </summary>
    [EnumMember(Value = "KMET")]
    [IsoId("_nPjfjTNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of measure that is equal to 1, 000 meters.")]
    Kilometre,
    
    /// <summary>
    /// Measure of a surface, one yard by one yard.
    /// Encoded/decoded by serializers as "SquareYard".
    /// </summary>
    [EnumMember(Value = "SQYA")]
    [IsoId("_nPjfjzNmEe2UWZuK9pqFtg")]
    [Description(@"Measure of a surface, one yard by one yard.")]
    SquareYard,
    
    /// <summary>
    /// Unit of measure equal to 4, 840 square yards.
    /// Encoded/decoded by serializers as "Acre".
    /// </summary>
    [EnumMember(Value = "ACRE")]
    [IsoId("_nPjfkTNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of measure equal to 4, 840 square yards.")]
    Acre,
    
    /// <summary>
    /// Unit of measure equal to a 100 square meters.
    /// Encoded/decoded by serializers as "Are".
    /// </summary>
    [EnumMember(Value = "ARES")]
    [IsoId("_nPjfkzNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of measure equal to a 100 square meters.")]
    Are,
    
    /// <summary>
    /// Measure of a surface, one millimetre by one millimetre.
    /// Encoded/decoded by serializers as "SquareMillimetre".
    /// </summary>
    [EnumMember(Value = "SMIL")]
    [IsoId("_nPjflTNmEe2UWZuK9pqFtg")]
    [Description(@"Measure of a surface, one millimetre by one millimetre.")]
    SquareMillimetre,
    
    /// <summary>
    /// Measure of a surface, one centimetre by one centimetre.
    /// Encoded/decoded by serializers as "SquareCentimetre".
    /// </summary>
    [EnumMember(Value = "SCMT")]
    [IsoId("_nPjflzNmEe2UWZuK9pqFtg")]
    [Description(@"Measure of a surface, one centimetre by one centimetre.")]
    SquareCentimetre,
    
    /// <summary>
    /// Unit of measure that is equal to 10, 000 square meters.
    /// Encoded/decoded by serializers as "Hectare".
    /// </summary>
    [EnumMember(Value = "HECT")]
    [IsoId("_nPjfmTNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of measure that is equal to 10, 000 square meters.")]
    Hectare,
    
    /// <summary>
    /// Measure of a surface, one kilometre by one kilometre.
    /// Encoded/decoded by serializers as "SquareKilometre".
    /// </summary>
    [EnumMember(Value = "SQKI")]
    [IsoId("_nPjfmzNmEe2UWZuK9pqFtg")]
    [Description(@"Measure of a surface, one kilometre by one kilometre.")]
    SquareKilometre,
    
    /// <summary>
    /// Unit of volume that is equal to one thousandth of a litre.
    /// Encoded/decoded by serializers as "MilliLitre".
    /// </summary>
    [EnumMember(Value = "MILI")]
    [IsoId("_nPjfnTNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of volume that is equal to one thousandth of a litre.")]
    MilliLitre,
    
    /// <summary>
    /// Unit of volume that is equal to one hundredth of a litre.
    /// Encoded/decoded by serializers as "Centilitre".
    /// </summary>
    [EnumMember(Value = "CELI")]
    [IsoId("_nPjfnzNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of volume that is equal to one hundredth of a litre.")]
    Centilitre,
    
    /// <summary>
    /// Unit of volume that is equal to a thousand cubic centimetres.
    /// Encoded/decoded by serializers as "Litre".
    /// </summary>
    [EnumMember(Value = "LITR")]
    [IsoId("_nPjfoTNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of volume that is equal to a thousand cubic centimetres.")]
    Litre,
    
    /// <summary>
    /// Unit of weight equal to 0.454 kilograms.
    /// Encoded/decoded by serializers as "Pound".
    /// </summary>
    [EnumMember(Value = "PUND")]
    [IsoId("_nPjfozNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of weight equal to 0.454 kilograms.")]
    Pound,
    
    /// <summary>
    /// Amount of money deducted from a price or an amount due.
    /// Encoded/decoded by serializers as "Allowances".
    /// </summary>
    [EnumMember(Value = "ALOW")]
    [IsoId("_nPjfpTNmEe2UWZuK9pqFtg")]
    [Description(@"Amount of money deducted from a price or an amount due.")]
    Allowances,
    
    /// <summary>
    /// Number of monetary units specified in a currency, where the unit of currency is explicit and compliant with ISO 4217.
    /// Encoded/decoded by serializers as "AmountOfCurrency".
    /// </summary>
    [EnumMember(Value = "ACCY")]
    [IsoId("_nPjfpzNmEe2UWZuK9pqFtg")]
    [Description(@"Number of monetary units specified in a currency, where the unit of currency is explicit and compliant with ISO 4217.")]
    AmountOfCurrency,
    
    /// <summary>
    /// Unit of volume that is equal to 42 US gallons.
    /// Encoded/decoded by serializers as "Barrels".
    /// </summary>
    [EnumMember(Value = "BARL")]
    [IsoId("_nPkGgTNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of volume that is equal to 42 US gallons.")]
    Barrels,
    
    /// <summary>
    /// Unit of measure for large volumes of natural gas equivalent to 28316846 cubic meters.
    /// Encoded/decoded by serializers as "BillionCubicFeet".
    /// </summary>
    [EnumMember(Value = "BCUF")]
    [IsoId("_nPkGgzNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of measure for large volumes of natural gas equivalent to 28316846 cubic meters.")]
    BillionCubicFeet,
    
    /// <summary>
    /// Measure of length equal to 144 cubic inches.
    /// Encoded/decoded by serializers as "BoardFeet".
    /// </summary>
    [EnumMember(Value = "BDFT")]
    [IsoId("_nPkGhTNmEe2UWZuK9pqFtg")]
    [Description(@"Measure of length equal to 144 cubic inches.")]
    BoardFeet,
    
    /// <summary>
    /// Unit of weight that is equal to 8 gallons. Mostly used for agricultural products with a specification of weight defined for each commodity differently.
    /// Encoded/decoded by serializers as "Bushels".
    /// </summary>
    [EnumMember(Value = "BUSL")]
    [IsoId("_nPkGhzNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of weight that is equal to 8 gallons. Mostly used for agricultural products with a specification of weight defined for each commodity differently.")]
    Bushels,
    
    /// <summary>
    /// Unit of emissions type (or carbon credits) issued by the Clean Development Mechanism (CDM) Executive Board for emission reductions achieved by CDM projects and verified by a DOE (Designated Operational Entity) under the rules of the Kyoto Protocol.
    /// Encoded/decoded by serializers as "CertifiedEmissionsReduction".
    /// </summary>
    [EnumMember(Value = "CEER")]
    [IsoId("_nPkGiTNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of emissions type (or carbon credits) issued by the Clean Development Mechanism (CDM) Executive Board for emission reductions achieved by CDM projects and verified by a DOE (Designated Operational Entity) under the rules of the Kyoto Protocol.")]
    CertifiedEmissionsReduction,
    
    /// <summary>
    /// Unit of offset credits used by the Climate Action Reserve. One Climate Reserve Tonne is equal to one metric ton of Greenhouse Gas (GHG) reduced/sequestered.
    /// Encoded/decoded by serializers as "ClimateReserveTonnes".
    /// </summary>
    [EnumMember(Value = "CLRT")]
    [IsoId("_nPkGizNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of offset credits used by the Climate Action Reserve. One Climate Reserve Tonne is equal to one metric ton of Greenhouse Gas (GHG) reduced/sequestered.")]
    ClimateReserveTonnes,
    
    /// <summary>
    /// Unit of volume that is equal to one meter in length, breadth and height or also equal to 1000 liters.
    /// Encoded/decoded by serializers as "CubicMeters".
    /// </summary>
    [EnumMember(Value = "CBME")]
    [IsoId("_nPkGjTNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of volume that is equal to one meter in length, breadth and height or also equal to 1000 liters.")]
    CubicMeters,
    
    /// <summary>
    /// Unit of time that is equal to 24 hours.
    /// Encoded/decoded by serializers as "Days".
    /// </summary>
    [EnumMember(Value = "DAYS")]
    [IsoId("_nPkGjzNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of time that is equal to 24 hours.")]
    Days,
    
    /// <summary>
    /// Unit of weight that is equal to the same mass value as a metric ton excluding moisture.
    /// Encoded/decoded by serializers as "DryMetricTons".
    /// </summary>
    [EnumMember(Value = "DMET")]
    [IsoId("_nPkGkTNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of weight that is equal to the same mass value as a metric ton excluding moisture.")]
    DryMetricTons,
    
    /// <summary>
    /// Unit of measure for ownership of credit (or allowance) of carbon dioxide emission (in metric ton).
    /// Encoded/decoded by serializers as "EnvironmentalCredit".
    /// </summary>
    [EnumMember(Value = "ENVC")]
    [IsoId("_nPkGkzNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of measure for ownership of credit (or allowance) of carbon dioxide emission (in metric ton).")]
    EnvironmentalCredit,
    
    /// <summary>
    /// Unit of measure for reduction of carbon dioxide emission (in metric ton) that may result in Environmental Credit.
    /// Encoded/decoded by serializers as "EnvironmentalOffset".
    /// </summary>
    [EnumMember(Value = "ENVO")]
    [IsoId("_nPkGlTNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of measure for reduction of carbon dioxide emission (in metric ton) that may result in Environmental Credit.")]
    EnvironmentalOffset,
    
    /// <summary>
    /// Unit of weight or mass of various values in the Imperial Unit System also known as quintal, cental or centum.
    /// Encoded/decoded by serializers as "Hundredweight".
    /// </summary>
    [EnumMember(Value = "HUWG")]
    [IsoId("_nPkGlzNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of weight or mass of various values in the Imperial Unit System also known as quintal, cental or centum.")]
    Hundredweight,
    
    /// <summary>
    /// Unit of measure of the capacity of production of electric power equal to 1000 watt in one day.
    /// Encoded/decoded by serializers as "KilowattDayCapacity".
    /// </summary>
    [EnumMember(Value = "KWDC")]
    [IsoId("_nPkGmTNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of measure of the capacity of production of electric power equal to 1000 watt in one day.")]
    KilowattDayCapacity,
    
    /// <summary>
    /// Unit of measure that is equal to the power consumption of one kilowatt during one hour.
    /// Encoded/decoded by serializers as "KilowattHours".
    /// </summary>
    [EnumMember(Value = "KWHO")]
    [IsoId("_nPkGmzNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of measure that is equal to the power consumption of one kilowatt during one hour.")]
    KilowattHours,
    
    /// <summary>
    /// Unit of measure of the capacity of production of electric power equal to 1000 watt in one hour.
    /// Encoded/decoded by serializers as "KilowattHoursCapacity".
    /// </summary>
    [EnumMember(Value = "KWHC")]
    [IsoId("_nPkGnTNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of measure of the capacity of production of electric power equal to 1000 watt in one hour.")]
    KilowattHoursCapacity,
    
    /// <summary>
    /// Unit of measure of the capacity of production of electric power equal to 1000 watt in one minute.
    /// Encoded/decoded by serializers as "KilowattMinuteCapacity".
    /// </summary>
    [EnumMember(Value = "KMOC")]
    [IsoId("_nPkGnzNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of measure of the capacity of production of electric power equal to 1000 watt in one minute.")]
    KilowattMinuteCapacity,
    
    /// <summary>
    /// Unit of measure of the capacity of production of electric power equal to 1000 watt in one month.
    /// Encoded/decoded by serializers as "KilowattMonthCapacity".
    /// </summary>
    [EnumMember(Value = "KWMC")]
    [IsoId("_nPkGoTNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of measure of the capacity of production of electric power equal to 1000 watt in one month.")]
    KilowattMonthCapacity,
    
    /// <summary>
    /// Unit of measure of the capacity of production of electric power equal to 1000 watt in one year.
    /// Encoded/decoded by serializers as "KilowattYearCapacity".
    /// </summary>
    [EnumMember(Value = "KWYC")]
    [IsoId("_nPkGozNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of measure of the capacity of production of electric power equal to 1000 watt in one year.")]
    KilowattYearCapacity,
    
    /// <summary>
    /// Unit of measure of the capacity of production of electric power equal to 1000000 watt in one day.
    /// Encoded/decoded by serializers as "MegawattDayCapacity".
    /// </summary>
    [EnumMember(Value = "MWDC")]
    [IsoId("_nPkGpTNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of measure of the capacity of production of electric power equal to 1000000 watt in one day.")]
    MegawattDayCapacity,
    
    /// <summary>
    /// Unit of measure that is equal to the power consumption of one megawatt during one hour.
    /// Encoded/decoded by serializers as "MegawattHours".
    /// </summary>
    [EnumMember(Value = "MWHO")]
    [IsoId("_nPkGpzNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of measure that is equal to the power consumption of one megawatt during one hour.")]
    MegawattHours,
    
    /// <summary>
    /// Unit of measure of the capacity of production of electric power equal to 1000000 watt in one hour.
    /// Encoded/decoded by serializers as "MegawattHoursCapacity".
    /// </summary>
    [EnumMember(Value = "MWHC")]
    [IsoId("_nPkGqTNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of measure of the capacity of production of electric power equal to 1000000 watt in one hour.")]
    MegawattHoursCapacity,
    
    /// <summary>
    /// Unit of measure of the capacity of production of electric power equal to 1000000 watt in one minute.
    /// Encoded/decoded by serializers as "MegawattMinuteCapacity".
    /// </summary>
    [EnumMember(Value = "MWMC")]
    [IsoId("_nPkGqzNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of measure of the capacity of production of electric power equal to 1000000 watt in one minute.")]
    MegawattMinuteCapacity,
    
    /// <summary>
    /// Unit of measure of the capacity of production of electric power equal to 1000000 watt in one month.
    /// Encoded/decoded by serializers as "MegawattMonthCapacity".
    /// </summary>
    [EnumMember(Value = "MMOC")]
    [IsoId("_nPkGrTNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of measure of the capacity of production of electric power equal to 1000000 watt in one month.")]
    MegawattMonthCapacity,
    
    /// <summary>
    /// Unit of measure of the capacity of production of electric power equal to 1000000 watt in one year.
    /// Encoded/decoded by serializers as "MegawattYearCapacity".
    /// </summary>
    [EnumMember(Value = "MWYC")]
    [IsoId("_nPkGrzNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of measure of the capacity of production of electric power equal to 1000000 watt in one year.")]
    MegawattYearCapacity,
    
    /// <summary>
    /// Unit of mass equal to 1000 kilograms; equivalent to approximately 2,204.6 pounds, 1.102 short tons (US) or 0.984 long tons (imperial).
    /// Encoded/decoded by serializers as "MetricTons".
    /// </summary>
    [EnumMember(Value = "TONE")]
    [IsoId("_nPkGsTNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of mass equal to 1000 kilograms; equivalent to approximately 2,204.6 pounds, 1.102 short tons (US) or 0.984 long tons (imperial).")]
    MetricTons,
    
    /// <summary>
    /// Unit of volume that is equal to 1 million barrels equivalent to 42.000.000 US gallons.
    /// Encoded/decoded by serializers as "MillionBarrels".
    /// </summary>
    [EnumMember(Value = "MIBA")]
    [IsoId("_nPkGszNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of volume that is equal to 1 million barrels equivalent to 42.000.000 US gallons.")]
    MillionBarrels,
    
    /// <summary>
    /// Unit of measure of heat equal to one million British thermal unit (BTU).
    /// Encoded/decoded by serializers as "OneMillionBTU".
    /// </summary>
    [EnumMember(Value = "MBTU")]
    [IsoId("_nPkGtTNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of measure of heat equal to one million British thermal unit (BTU).")]
    OneMillionBTU,
    
    /// <summary>
    /// Unit of weight equal to 31.1034768 grams. Used in precious metals.
    /// Encoded/decoded by serializers as "TroyOunces".
    /// </summary>
    [EnumMember(Value = "OZTR")]
    [IsoId("_nPkGtzNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of weight equal to 31.1034768 grams. Used in precious metals.")]
    TroyOunces,
    
    /// <summary>
    /// Unit of weight or mass of various values in the US Customary System also known as quintal, cental or centum. Equal to 100 lbs.
    /// Encoded/decoded by serializers as "USHundredweight".
    /// </summary>
    [EnumMember(Value = "UCWT")]
    [IsoId("_nPkGuTNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of weight or mass of various values in the US Customary System also known as quintal, cental or centum. Equal to 100 lbs.")]
    USHundredweight,
    
    /// <summary>
    /// Decimal number used to calculate an amount or a price.
    /// Encoded/decoded by serializers as "IndexPoint".
    /// </summary>
    [EnumMember(Value = "IPNT")]
    [IsoId("_nPkGuzNmEe2UWZuK9pqFtg")]
    [Description(@"Decimal number used to calculate an amount or a price.")]
    IndexPoint,
    
    /// <summary>
    /// Amount of money borrowed, or part of that amount which remains unpaid (excluding interest).
    /// Encoded/decoded by serializers as "PrincipalWithRelationToDebtInstrument".
    /// </summary>
    [EnumMember(Value = "PWRD")]
    [IsoId("_nPkGvTNmEe2UWZuK9pqFtg")]
    [Description(@"Amount of money borrowed, or part of that amount which remains unpaid (excluding interest).")]
    PrincipalWithRelationToDebtInstrument,
    
    /// <summary>
    /// Amount of fuel alternative equal to one gallon of diesel.
    /// Encoded/decoded by serializers as "DieselGallonEquivalent".
    /// </summary>
    [EnumMember(Value = "DGEU")]
    [IsoId("_nPkGvzNmEe2UWZuK9pqFtg")]
    [Description(@"Amount of fuel alternative equal to one gallon of diesel.")]
    DieselGallonEquivalent,
    
    /// <summary>
    /// Amount of fuel alternative equal to one gallon of gasoline.
    /// Encoded/decoded by serializers as "GasolineGallonEquivalent".
    /// </summary>
    [EnumMember(Value = "GGEU")]
    [IsoId("_nPkGwTNmEe2UWZuK9pqFtg")]
    [Description(@"Amount of fuel alternative equal to one gallon of gasoline.")]
    GasolineGallonEquivalent,
    
    /// <summary>
    /// Tons of carbon dioxide.
    /// Encoded/decoded by serializers as "TonsOfCarbonDioxide".
    /// </summary>
    [EnumMember(Value = "TOCD")]
    [IsoId("_nPkGwzNmEe2UWZuK9pqFtg")]
    [Description(@"Tons of carbon dioxide.")]
    TonsOfCarbonDioxide,
    
    /// <summary>
    /// Financial instrument that gives the owner right to dividends paid by a company and the most junior claim on the companies assets in the event of a bankruptcy.
    /// Encoded/decoded by serializers as "Shares".
    /// </summary>
    [EnumMember(Value = "SHAS")]
    [IsoId("_nPkGxTNmEe2UWZuK9pqFtg")]
    [Description(@"Financial instrument that gives the owner right to dividends paid by a company and the most junior claim on the companies assets in the event of a bankruptcy.")]
    Shares,
    
    /// <summary>
    /// Unit of heat, often used a unit of measure for natural gas in the UK.
    /// Encoded/decoded by serializers as "Therms".
    /// </summary>
    [EnumMember(Value = "THMS")]
    [IsoId("_nPkGxzNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of heat, often used a unit of measure for natural gas in the UK.")]
    Therms,
    
    /// <summary>
    /// Exchange traded contract that defines an agreement to buy specific quantities of a commodity or financial instrument at an agreed time in the future.
    /// Encoded/decoded by serializers as "Future".
    /// </summary>
    [EnumMember(Value = "FUTU")]
    [IsoId("_nPkGyTNmEe2UWZuK9pqFtg")]
    [Description(@"Exchange traded contract that defines an agreement to buy specific quantities of a commodity or financial instrument at an agreed time in the future.")]
    Future,
    
    /// <summary>
    /// Unit of measure that is equal to the power consumption of one Gigawatt during one hour.
    /// Encoded/decoded by serializers as "GigawattHours".
    /// </summary>
    [EnumMember(Value = "GWHO")]
    [IsoId("_nPkGyzNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of measure that is equal to the power consumption of one Gigawatt during one hour.")]
    GigawattHours,
    
    /// <summary>
    /// Unit of measure of heat required to raise the temperature of one pound of water by one degree Fahrenheit.
    /// Encoded/decoded by serializers as "BritishThermalUnit".
    /// </summary>
    [EnumMember(Value = "BRTU")]
    [IsoId("_nPkGzTNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of measure of heat required to raise the temperature of one pound of water by one degree Fahrenheit.")]
    BritishThermalUnit,
    
    /// <summary>
    /// Indication of the unit of measurement.
    /// Encoded/decoded by serializers as "Lot".
    /// </summary>
    [EnumMember(Value = "LOTS")]
    [IsoId("_nPkGzzNmEe2UWZuK9pqFtg")]
    [Description(@"Indication of the unit of measurement.")]
    Lot,
    
    /// <summary>
    /// Code for a bag.
    /// Encoded/decoded by serializers as "Bag".
    /// </summary>
    [EnumMember(Value = "BAGG")]
    [IsoId("_nPkG0TNmEe2UWZuK9pqFtg")]
    [Description(@"Code for a bag.")]
    Bag,
    
    /// <summary>
    /// Code for a bale.
    /// Encoded/decoded by serializers as "Bale".
    /// </summary>
    [EnumMember(Value = "BALE")]
    [IsoId("_nPkG0zNmEe2UWZuK9pqFtg")]
    [Description(@"Code for a bale.")]
    Bale,
    
    /// <summary>
    /// Code for a bottle.
    /// Encoded/decoded by serializers as "Bottle".
    /// </summary>
    [EnumMember(Value = "BOTL")]
    [IsoId("_nPkG1TNmEe2UWZuK9pqFtg")]
    [Description(@"Code for a bottle.")]
    Bottle,
    
    /// <summary>
    /// Code for a box.
    /// Encoded/decoded by serializers as "Box".
    /// </summary>
    [EnumMember(Value = "BOXX")]
    [IsoId("_nPkG1zNmEe2UWZuK9pqFtg")]
    [Description(@"Code for a box.")]
    Box,
    
    /// <summary>
    /// Code for a carton.
    /// Encoded/decoded by serializers as "Carton".
    /// </summary>
    [EnumMember(Value = "CRTN")]
    [IsoId("_nPkG2TNmEe2UWZuK9pqFtg")]
    [Description(@"Code for a carton.")]
    Carton,
    
    /// <summary>
    /// Code for a container.
    /// Encoded/decoded by serializers as "Container".
    /// </summary>
    [EnumMember(Value = "CNTR")]
    [IsoId("_nPkG2zNmEe2UWZuK9pqFtg")]
    [Description(@"Code for a container.")]
    Container,
    
    /// <summary>
    /// Code for a crate.
    /// Encoded/decoded by serializers as "Crate".
    /// </summary>
    [EnumMember(Value = "CRAT")]
    [IsoId("_nPkG3TNmEe2UWZuK9pqFtg")]
    [Description(@"Code for a crate.")]
    Crate,
    
    /// <summary>
    /// Measure of a volume, one inch by one inch by one inch.
    /// Encoded/decoded by serializers as "CubicInch".
    /// </summary>
    [EnumMember(Value = "CBIN")]
    [IsoId("_nPkG3zNmEe2UWZuK9pqFtg")]
    [Description(@"Measure of a volume, one inch by one inch by one inch.")]
    CubicInch,
    
    /// <summary>
    /// Unit of volume that is equal to one thousandth of a litre.
    /// Encoded/decoded by serializers as "CubicMillimetre".
    /// </summary>
    [EnumMember(Value = "CBML")]
    [IsoId("_nPktkTNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of volume that is equal to one thousandth of a litre.")]
    CubicMillimetre,
    
    /// <summary>
    /// Unit of volume equal to 2, 841 306 centilitre.
    /// Encoded/decoded by serializers as "GBFuildOunce".
    /// </summary>
    [EnumMember(Value = "GBFO")]
    [IsoId("_nPktkzNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of volume equal to 2, 841 306 centilitre.")]
    GBFuildOunce,
    
    /// <summary>
    /// Measure of weight, in Britain 2240 lb (long ton).
    /// Encoded/decoded by serializers as "GBTon".
    /// </summary>
    [EnumMember(Value = "GBTN")]
    [IsoId("_nPktlTNmEe2UWZuK9pqFtg")]
    [Description(@"Measure of weight, in Britain 2240 lb (long ton).")]
    GBTon,
    
    /// <summary>
    /// Unit of volume equal to 158, 9873 litre.
    /// Encoded/decoded by serializers as "USBarrel".
    /// </summary>
    [EnumMember(Value = "USBA")]
    [IsoId("_nPktlzNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of volume equal to 158, 9873 litre.")]
    USBarrel,
    
    /// <summary>
    /// Unit of volume equal to 2, 957353 centilitre.
    /// Encoded/decoded by serializers as "USFluidOunce".
    /// </summary>
    [EnumMember(Value = "USFO")]
    [IsoId("_nPktmTNmEe2UWZuK9pqFtg")]
    [Description(@"Unit of volume equal to 2, 957353 centilitre.")]
    USFluidOunce,
    
    /// <summary>
    /// Measure of weight, in the US 2000 lb (short ton).
    /// Encoded/decoded by serializers as "USTon".
    /// </summary>
    [EnumMember(Value = "USTN")]
    [IsoId("_nPktmzNmEe2UWZuK9pqFtg")]
    [Description(@"Measure of weight, in the US 2000 lb (short ton).")]
    USTon,
    
    /// <summary>
    /// Cooling degree day
    /// Encoded/decoded by serializers as "CoolingDegreeDay".
    /// </summary>
    [EnumMember(Value = "CDDA")]
    [IsoId("_nPktnTNmEe2UWZuK9pqFtg")]
    [Description(@"Cooling degree day")]
    CoolingDegreeDay,
    
    /// <summary>
    /// Heating degree day
    /// Encoded/decoded by serializers as "HeatingDegreeDay".
    /// </summary>
    [EnumMember(Value = "HDDA")]
    [IsoId("_nPktnzNmEe2UWZuK9pqFtg")]
    [Description(@"Heating degree day")]
    HeatingDegreeDay,
    
    /// <summary>
    /// Critical precipitation day
    /// Encoded/decoded by serializers as "CriticalPrecipitationDay".
    /// </summary>
    [EnumMember(Value = "CPDA")]
    [IsoId("_nPktoTNmEe2UWZuK9pqFtg")]
    [Description(@"Critical precipitation day")]
    CriticalPrecipitationDay,
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class ExternalUnitOfMeasure1CodeMetadataExtensions
{
    private static readonly ExternalUnitOfMeasure1CodeDropdownSource _dropdownSource = new ExternalUnitOfMeasure1CodeDropdownSource();

    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static IExternalUnitOfMeasure1CodeDropdownRow GetMetadata(this ExternalUnitOfMeasure1Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


