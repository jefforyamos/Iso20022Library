//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for FailedSettlementReason1Code.  ISO2002 ID# _amoliNp-Ed-ak6NoX_4Aeg_-707965689.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20022.Codesets;

/// <summary>
/// Specifies the reason of a settlement failure.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_amoliNp-Ed-ak6NoX_4Aeg_-707965689")]
[Description(@"Specifies the reason of a settlement failure.")]
[DerivedFrom(typeof(FailedSettlementReasonCode))]
public enum FailedSettlementReason1Code
{
    /// <summary>
    /// Credit account is not eligible.
    /// Encoded/decoded by serializers as "CANE".
    /// </summary>
    [EnumMember(Value = "CANE")]
    [IsoId("_amyWgNp-Ed-ak6NoX_4Aeg_-641474163")]
    [Description(@"Credit account is not eligible.")]
    CreditAccountNotEligible = FailedSettlementReasonCode.CreditAccountNotEligible, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Credit account is disabled.
    /// Encoded/decoded by serializers as "CADI".
    /// </summary>
    [EnumMember(Value = "CADI")]
    [IsoId("_amyWgdp-Ed-ak6NoX_4Aeg_-641474133")]
    [Description(@"Credit account is disabled.")]
    CreditAccountDisabled = FailedSettlementReasonCode.CreditAccountDisabled, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Debit account is not eligible.
    /// Encoded/decoded by serializers as "DANE".
    /// </summary>
    [EnumMember(Value = "DANE")]
    [IsoId("_amyWgtp-Ed-ak6NoX_4Aeg_-641474102")]
    [Description(@"Debit account is not eligible.")]
    DebitAccountNotEligible = FailedSettlementReasonCode.DebitAccountNotEligible, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Debit account is disabled.
    /// Encoded/decoded by serializers as "AADI".
    /// </summary>
    [EnumMember(Value = "AADI")]
    [IsoId("_amyWg9p-Ed-ak6NoX_4Aeg_-641474101")]
    [Description(@"Debit account is disabled.")]
    DebitAccountDisabled = FailedSettlementReasonCode.DebitAccountDisabled, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Insufficient securities on the account to settle.
    /// Encoded/decoded by serializers as "INSE".
    /// </summary>
    [EnumMember(Value = "INSE")]
    [IsoId("_amyWhNp-Ed-ak6NoX_4Aeg_-641474072")]
    [Description(@"Insufficient securities on the account to settle.")]
    InsufficientSecurities = FailedSettlementReasonCode.InsufficientSecurities, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// The distribution is incomplete.
    /// Encoded/decoded by serializers as "INDI".
    /// </summary>
    [EnumMember(Value = "INDI")]
    [IsoId("_amyWhdp-Ed-ak6NoX_4Aeg_-641473762")]
    [Description(@"The distribution is incomplete.")]
    IncompleteDistribution = FailedSettlementReasonCode.IncompleteDistribution, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Insufficient cash on the account to settle.
    /// Encoded/decoded by serializers as "INCA".
    /// </summary>
    [EnumMember(Value = "INCA")]
    [IsoId("_amyWhtp-Ed-ak6NoX_4Aeg_-641473739")]
    [Description(@"Insufficient cash on the account to settle.")]
    InsufficientCash = FailedSettlementReasonCode.InsufficientCash, // same ordinal as derivation source for type conversions
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class FailedSettlementReason1CodeMetadataExtensions
{
    private static readonly FailedSettlementReason1CodeDropdownSource _dropdownSource = new FailedSettlementReason1CodeDropdownSource();
    
    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static IFailedSettlementReason1CodeDropdownRow GetMetadata(this FailedSettlementReason1Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


