//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for FractionDispositionType11Code.  ISO2002 ID# _dafmQGSCEeKFfdK0gKYFLQ.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Indicates that fractional value should be retained; no rounding.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_dafmQGSCEeKFfdK0gKYFLQ")]
[Description(@"Indicates that fractional value should be retained; no rounding.")]
[DerivedFrom(typeof(FractionDispositionTypeV2Code))]
public enum FractionDispositionType11Code
{
    /// <summary>
    /// Buy securities up to next whole number.
    /// Encoded/decoded by serializers as "BuyUp".
    /// </summary>
    [EnumMember(Value = "BUYU")]
    [IsoId("_gXwooWSCEeKFfdK0gKYFLQ")]
    [Description(@"Buy securities up to next whole number.")]
    BuyUp,
    
    /// <summary>
    /// Fractional part of cash. Take cash in lieu of fractions.
    /// Encoded/decoded by serializers as "CashInLieuOfFraction".
    /// </summary>
    [EnumMember(Value = "CINL")]
    [IsoId("_ggtJQWSCEeKFfdK0gKYFLQ")]
    [Description(@"Fractional part of cash. Take cash in lieu of fractions.")]
    CashInLieuOfFraction,
    
    /// <summary>
    /// Take distribution of fractions in the form of securities.
    /// Encoded/decoded by serializers as "IssueFraction".
    /// </summary>
    [EnumMember(Value = "DIST")]
    [IsoId("_g-qQkWSCEeKFfdK0gKYFLQ")]
    [Description(@"Take distribution of fractions in the form of securities.")]
    IssueFraction,
    
    /// <summary>
    /// Round the entitlement down to the last full unit/minimum nominal quantity, fractions are discarded.
    /// Encoded/decoded by serializers as "RoundDown".
    /// </summary>
    [EnumMember(Value = "RDDN")]
    [IsoId("_hv_m4WSCEeKFfdK0gKYFLQ")]
    [Description(@"Round the entitlement down to the last full unit/minimum nominal quantity, fractions are discarded.")]
    RoundDown,
    
    /// <summary>
    /// If the fraction is greater than or equal to 0.5 of the resulting security then round up, else round down as specified in the respective RDUP and RDDN codes.
    /// Encoded/decoded by serializers as "RoundToNearest".
    /// </summary>
    [EnumMember(Value = "STAN")]
    [IsoId("_h4yWgWSCEeKFfdK0gKYFLQ")]
    [Description(@"If the fraction is greater than or equal to 0.5 of the resulting security then round up, else round down as specified in the respective RDUP and RDDN codes.")]
    RoundToNearest,
    
    /// <summary>
    /// Round up to the next full unit/minimum nominal quantity at no cost.
    /// Encoded/decoded by serializers as "RoundUp".
    /// </summary>
    [EnumMember(Value = "RDUP")]
    [IsoId("_h7d3EWSCEeKFfdK0gKYFLQ")]
    [Description(@"Round up to the next full unit/minimum nominal quantity at no cost.")]
    RoundUp,
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class FractionDispositionType11CodeMetadataExtensions
{
    private static readonly FractionDispositionType11CodeDropdownSource _dropdownSource = new FractionDispositionType11CodeDropdownSource();

    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static IFractionDispositionType11CodeDropdownRow GetMetadata(this FractionDispositionType11Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


