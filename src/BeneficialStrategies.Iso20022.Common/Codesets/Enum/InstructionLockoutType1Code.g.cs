//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for InstructionLockoutType1Code.  ISO2002 ID# _YXPTYA7xEeuZI5Sr_GAcuA.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Specify the type of blocking when instructions are temporarily blocked for an event.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_YXPTYA7xEeuZI5Sr_GAcuA")]
[Description(@"Specify the type of blocking when instructions are temporarily blocked for an event.")]
[DerivedFrom(typeof(InstructionLockoutTypeCode))]
public enum InstructionLockoutType1Code
{
    /// <summary>
    /// Event is locked out manually for instruction processing.  This relates to conversions, warrants and put events.
    /// Encoded/decoded by serializers as "ManualLocked".
    /// </summary>
    [EnumMember(Value = "MANL")]
    [IsoId("_g5Rl4Q7xEeuZI5Sr_GAcuA")]
    [Description(@"Event is locked out manually for instruction processing.  This relates to conversions, warrants and put events.")]
    ManualLocked,
    
    /// <summary>
    /// Event is not locked out manually for instruction processing. This relates to conversions, warrants and put events.
    /// Encoded/decoded by serializers as "NotLocked".
    /// </summary>
    [EnumMember(Value = "NOTL")]
    [IsoId("_g_SuUQ7xEeuZI5Sr_GAcuA")]
    [Description(@"Event is not locked out manually for instruction processing. This relates to conversions, warrants and put events.")]
    NotLocked,
    
    /// <summary>
    /// Event is locked out systemically for instruction processing. This relates to conversion or warrant events due to an "out of town" record date on the disbursed security.
    /// Encoded/decoded by serializers as "SystemicLocked".
    /// </summary>
    [EnumMember(Value = "SYSL")]
    [IsoId("_hELOUQ7xEeuZI5Sr_GAcuA")]
    [Description(@"Event is locked out systemically for instruction processing. This relates to conversion or warrant events due to an ""out of town"" record date on the disbursed security.")]
    SystemicLocked,
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class InstructionLockoutType1CodeMetadataExtensions
{
    private static readonly InstructionLockoutType1CodeDropdownSource _dropdownSource = new InstructionLockoutType1CodeDropdownSource();

    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static IInstructionLockoutType1CodeDropdownRow GetMetadata(this InstructionLockoutType1Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


