//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for InstructionRejectionReason3Code.  ISO2002 ID# _BNsdQFCDEe2KGNXAcFL5RA.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Reason for rejection of a corporate action instruction or of an instruction cancellation.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_BNsdQFCDEe2KGNXAcFL5RA")]
[Description(@"Reason for rejection of a corporate action instruction or of an instruction cancellation.")]
[DerivedFrom(typeof(InstructionRejectionReasonV2Code))]
public enum InstructionRejectionReason3Code
{
    /// <summary>
    /// Acknowledgement must be agreed.
    /// Encoded/decoded by serializers as "AcknowledgementNotAgreed".
    /// </summary>
    [EnumMember(Value = "ACKA")]
    [IsoId("_gbIwsVCDEe2KGNXAcFL5RA")]
    [Description(@"Acknowledgement must be agreed.")]
    AcknowledgementNotAgreed,
    
    /// <summary>
    /// Acknowledgment indicator is missing.
    /// Encoded/decoded by serializers as "AcknowledgmentIndicatorMissing".
    /// </summary>
    [EnumMember(Value = "ACKS")]
    [IsoId("_gv0nQVCDEe2KGNXAcFL5RA")]
    [Description(@"Acknowledgment indicator is missing.")]
    AcknowledgmentIndicatorMissing,
    
    /// <summary>
    /// Adjudication of incompetency acknowledgement indicator is invalid.
    /// Encoded/decoded by serializers as "AdjudicationOfIncompetencyAcknowledgementIndicatorInvalid".
    /// </summary>
    [EnumMember(Value = "ADIN")]
    [IsoId("_hBjQcVCDEe2KGNXAcFL5RA")]
    [Description(@"Adjudication of incompetency acknowledgement indicator is invalid.")]
    AdjudicationOfIncompetencyAcknowledgementIndicatorInvalid,
    
    /// <summary>
    /// Adjudication of incompetency acknowledgement indicator is missing.
    /// Encoded/decoded by serializers as "AdjudicationOfIncompetencyAcknowledgmentIndicatorMissing".
    /// </summary>
    [EnumMember(Value = "ADIM")]
    [IsoId("_hQgScVCDEe2KGNXAcFL5RA")]
    [Description(@"Adjudication of incompetency acknowledgement indicator is missing.")]
    AdjudicationOfIncompetencyAcknowledgmentIndicatorMissing,
    
    /// <summary>
    /// Beneficial owner death date is missing.
    /// Encoded/decoded by serializers as "BeneficialOwnerDeathDateMissing".
    /// </summary>
    [EnumMember(Value = "BODD")]
    [IsoId("_hc0QIVCDEe2KGNXAcFL5RA")]
    [Description(@"Beneficial owner death date is missing.")]
    BeneficialOwnerDeathDateMissing,
    
    /// <summary>
    /// Beneficial owner name is missing.
    /// Encoded/decoded by serializers as "BeneficialOwnerNameMissing".
    /// </summary>
    [EnumMember(Value = "BONM")]
    [IsoId("_hqh8AVCDEe2KGNXAcFL5RA")]
    [Description(@"Beneficial owner name is missing.")]
    BeneficialOwnerNameMissing,
    
    /// <summary>
    /// Bid price is missing or invalid.
    /// Encoded/decoded by serializers as "BidPriceMissingOrInvalid".
    /// </summary>
    [EnumMember(Value = "BIDI")]
    [IsoId("_h6oNgVCDEe2KGNXAcFL5RA")]
    [Description(@"Bid price is missing or invalid.")]
    BidPriceMissingOrInvalid,
    
    /// <summary>
    /// Bid price cannot be greater than 9999.99999.
    /// Encoded/decoded by serializers as "BidPriceOverflow".
    /// </summary>
    [EnumMember(Value = "BIDG")]
    [IsoId("_iGhUcVCDEe2KGNXAcFL5RA")]
    [Description(@"Bid price cannot be greater than 9999.99999.")]
    BidPriceOverflow,
    
    /// <summary>
    /// Bid price exceeds maximum bid price allowed for the offer.
    /// Encoded/decoded by serializers as "BidPriceOverMaximumAllowed".
    /// </summary>
    [EnumMember(Value = "BIDE")]
    [IsoId("_iXPRAVCDEe2KGNXAcFL5RA")]
    [Description(@"Bid price exceeds maximum bid price allowed for the offer.")]
    BidPriceOverMaximumAllowed,
    
    /// <summary>
    /// Bid price is less than the minimum bid price allowed for the offer.
    /// Encoded/decoded by serializers as "BidPriceUnderMinimumAllowed".
    /// </summary>
    [EnumMember(Value = "BIDM")]
    [IsoId("_iuLxYVCDEe2KGNXAcFL5RA")]
    [Description(@"Bid price is less than the minimum bid price allowed for the offer.")]
    BidPriceUnderMinimumAllowed,
    
    /// <summary>
    /// Zeroes are required for bid price.
    /// Encoded/decoded by serializers as "BidPriceZeroesRequired".
    /// </summary>
    [EnumMember(Value = "BID0")]
    [IsoId("_i588gVCDEe2KGNXAcFL5RA")]
    [Description(@"Zeroes are required for bid price.")]
    BidPriceZeroesRequired,
    
    /// <summary>
    /// Bond check on master table is not available.
    /// Encoded/decoded by serializers as "BondCheckOnMasterTableNotAvailable".
    /// </summary>
    [EnumMember(Value = "BNDU")]
    [IsoId("_jIaPQVCDEe2KGNXAcFL5RA")]
    [Description(@"Bond check on master table is not available.")]
    BondCheckOnMasterTableNotAvailable,
    
    /// <summary>
    /// Certificate number is missing.
    /// Encoded/decoded by serializers as "CertificateNameMissing".
    /// </summary>
    [EnumMember(Value = "CENM")]
    [IsoId("_jfRQEVCDEe2KGNXAcFL5RA")]
    [Description(@"Certificate number is missing.")]
    CertificateNameMissing,
    
    /// <summary>
    /// Certificate number is invalid.
    /// Encoded/decoded by serializers as "CertificateNumberInvalid".
    /// </summary>
    [EnumMember(Value = "CERN")]
    [IsoId("_jxwHMVCDEe2KGNXAcFL5RA")]
    [Description(@"Certificate number is invalid.")]
    CertificateNumberInvalid,
    
    /// <summary>
    /// Certificate sequence number is invalid.
    /// Encoded/decoded by serializers as "CertificateSequenceNumberInvalid".
    /// </summary>
    [EnumMember(Value = "CERS")]
    [IsoId("_l9BE4VCDEe2KGNXAcFL5RA")]
    [Description(@"Certificate sequence number is invalid.")]
    CertificateSequenceNumberInvalid,
    
    /// <summary>
    /// Comment area is invalid.
    /// Encoded/decoded by serializers as "CommentAreaInvalid".
    /// </summary>
    [EnumMember(Value = "COMM")]
    [IsoId("_mJid8VCDEe2KGNXAcFL5RA")]
    [Description(@"Comment area is invalid.")]
    CommentAreaInvalid,
    
    /// <summary>
    /// Condition 1 indicator is invalid. It must be No.
    /// Encoded/decoded by serializers as "Condition1InvalidMustBeNo".
    /// </summary>
    [EnumMember(Value = "CN1N")]
    [IsoId("_mWNA8VCDEe2KGNXAcFL5RA")]
    [Description(@"Condition 1 indicator is invalid. It must be No.")]
    Condition1InvalidMustBeNo,
    
    /// <summary>
    /// Condition 1 indicator is invalid. It must be Yes.
    /// Encoded/decoded by serializers as "Condition1InvalidMustBeYes".
    /// </summary>
    [EnumMember(Value = "CN1Y")]
    [IsoId("_mj7T4VCDEe2KGNXAcFL5RA")]
    [Description(@"Condition 1 indicator is invalid. It must be Yes.")]
    Condition1InvalidMustBeYes,
    
    /// <summary>
    /// Condition 1 indicator is must be present.
    /// Encoded/decoded by serializers as "Condition1Required".
    /// </summary>
    [EnumMember(Value = "CN1R")]
    [IsoId("_m1C5EVCDEe2KGNXAcFL5RA")]
    [Description(@"Condition 1 indicator is must be present.")]
    Condition1Required,
    
    /// <summary>
    /// Condition 2 indicator is invalid. It must be No.
    /// Encoded/decoded by serializers as "Condition2InvalidMustBeNo".
    /// </summary>
    [EnumMember(Value = "CN2N")]
    [IsoId("_oJrwwVCDEe2KGNXAcFL5RA")]
    [Description(@"Condition 2 indicator is invalid. It must be No.")]
    Condition2InvalidMustBeNo,
    
    /// <summary>
    /// Condition 2 indicator is invalid. It must be Yes.
    /// Encoded/decoded by serializers as "Condition2InvalidMustBeYes".
    /// </summary>
    [EnumMember(Value = "CN2Y")]
    [IsoId("_oQ_SoVCDEe2KGNXAcFL5RA")]
    [Description(@"Condition 2 indicator is invalid. It must be Yes.")]
    Condition2InvalidMustBeYes,
    
    /// <summary>
    /// Condition 2 indicator is must be present.
    /// Encoded/decoded by serializers as "Condition2Required".
    /// </summary>
    [EnumMember(Value = "CN2R")]
    [IsoId("_obRQAVCDEe2KGNXAcFL5RA")]
    [Description(@"Condition 2 indicator is must be present.")]
    Condition2Required,
    
    /// <summary>
    /// Condition 3 indicator is invalid. It must be No.
    /// Encoded/decoded by serializers as "Condition3InvalidMustBeNo".
    /// </summary>
    [EnumMember(Value = "CN3N")]
    [IsoId("_olQScVCDEe2KGNXAcFL5RA")]
    [Description(@"Condition 3 indicator is invalid. It must be No.")]
    Condition3InvalidMustBeNo,
    
    /// <summary>
    /// Condition 3 indicator is invalid. It must be Yes.
    /// Encoded/decoded by serializers as "Condition3InvalidMustBeYes".
    /// </summary>
    [EnumMember(Value = "CN3Y")]
    [IsoId("_ouV9AVCDEe2KGNXAcFL5RA")]
    [Description(@"Condition 3 indicator is invalid. It must be Yes.")]
    Condition3InvalidMustBeYes,
    
    /// <summary>
    /// Condition 3 indicator is must be present.
    /// Encoded/decoded by serializers as "Condition3Required".
    /// </summary>
    [EnumMember(Value = "CN3R")]
    [IsoId("_o7AgAVCDEe2KGNXAcFL5RA")]
    [Description(@"Condition 3 indicator is must be present.")]
    Condition3Required,
    
    /// <summary>
    /// Condition 4 indicator is invalid. It must be No.
    /// Encoded/decoded by serializers as "Condition4InvalidMustBeNo".
    /// </summary>
    [EnumMember(Value = "CN4N")]
    [IsoId("_pNVmIVCDEe2KGNXAcFL5RA")]
    [Description(@"Condition 4 indicator is invalid. It must be No.")]
    Condition4InvalidMustBeNo,
    
    /// <summary>
    /// Condition 4 indicator is invalid. It must be Yes.
    /// Encoded/decoded by serializers as "Condition4InvalidMustBeYes".
    /// </summary>
    [EnumMember(Value = "CN4Y")]
    [IsoId("_pvw9wVCDEe2KGNXAcFL5RA")]
    [Description(@"Condition 4 indicator is invalid. It must be Yes.")]
    Condition4InvalidMustBeYes,
    
    /// <summary>
    /// Condition 4 indicator is must be present.
    /// Encoded/decoded by serializers as "Condition4Required".
    /// </summary>
    [EnumMember(Value = "CN4R")]
    [IsoId("_qJMxcVCDEe2KGNXAcFL5RA")]
    [Description(@"Condition 4 indicator is must be present.")]
    Condition4Required,
    
    /// <summary>
    /// Condition 5 indicator is invalid. It must be No.
    /// Encoded/decoded by serializers as "Condition5InvalidMustBeNo".
    /// </summary>
    [EnumMember(Value = "CN5N")]
    [IsoId("_qXjWgVCDEe2KGNXAcFL5RA")]
    [Description(@"Condition 5 indicator is invalid. It must be No.")]
    Condition5InvalidMustBeNo,
    
    /// <summary>
    /// Condition 5 indicator is invalid. It must be Yes.
    /// Encoded/decoded by serializers as "Condition5InvalidMustBeYes".
    /// </summary>
    [EnumMember(Value = "CN5Y")]
    [IsoId("_qejWYVCDEe2KGNXAcFL5RA")]
    [Description(@"Condition 5 indicator is invalid. It must be Yes.")]
    Condition5InvalidMustBeYes,
    
    /// <summary>
    /// Condition 5 indicator is must be present.
    /// Encoded/decoded by serializers as "Condition5Required".
    /// </summary>
    [EnumMember(Value = "CN5R")]
    [IsoId("_qk9gYVCDEe2KGNXAcFL5RA")]
    [Description(@"Condition 5 indicator is must be present.")]
    Condition5Required,
    
    /// <summary>
    /// Condition 6 indicator is invalid. It must be No.
    /// Encoded/decoded by serializers as "Condition6InvalidMustBeNo".
    /// </summary>
    [EnumMember(Value = "CN6N")]
    [IsoId("_q2c5AVCDEe2KGNXAcFL5RA")]
    [Description(@"Condition 6 indicator is invalid. It must be No.")]
    Condition6InvalidMustBeNo,
    
    /// <summary>
    /// Condition 6 indicator is invalid. It must be Yes.
    /// Encoded/decoded by serializers as "Condition6InvalidMustBeYes".
    /// </summary>
    [EnumMember(Value = "CN6Y")]
    [IsoId("_q9QEkVCDEe2KGNXAcFL5RA")]
    [Description(@"Condition 6 indicator is invalid. It must be Yes.")]
    Condition6InvalidMustBeYes,
    
    /// <summary>
    /// Condition 6 indicator is must be present.
    /// Encoded/decoded by serializers as "Condition6Required".
    /// </summary>
    [EnumMember(Value = "CN6R")]
    [IsoId("_rE_rUVCDEe2KGNXAcFL5RA")]
    [Description(@"Condition 6 indicator is must be present.")]
    Condition6Required,
    
    /// <summary>
    /// Conditional quantity cannot be zero.
    /// Encoded/decoded by serializers as "ConditionalQuantityCannotBeZero".
    /// </summary>
    [EnumMember(Value = "COQX")]
    [IsoId("_reoTUVCDEe2KGNXAcFL5RA")]
    [Description(@"Conditional quantity cannot be zero.")]
    ConditionalQuantityCannotBeZero,
    
    /// <summary>
    /// Conditional quantity does not equal the transaction quantity whilst this offer accepts only the full conditional quantity.
    /// Encoded/decoded by serializers as "ConditionalQuantityDoesNotEqualTransactionQuantity".
    /// </summary>
    [EnumMember(Value = "COTQ")]
    [IsoId("_tOixwVCDEe2KGNXAcFL5RA")]
    [Description(@"Conditional quantity does not equal the transaction quantity whilst this offer accepts only the full conditional quantity.")]
    ConditionalQuantityDoesNotEqualTransactionQuantity,
    
    /// <summary>
    /// Conditional quantity exceeds the transaction quantity.
    /// Encoded/decoded by serializers as "ConditionalQuantityExceedsTransactionQuantity".
    /// </summary>
    [EnumMember(Value = "COQE")]
    [IsoId("_tcixgVCDEe2KGNXAcFL5RA")]
    [Description(@"Conditional quantity exceeds the transaction quantity.")]
    ConditionalQuantityExceedsTransactionQuantity,
    
    /// <summary>
    /// Conditional quantity is missing or invalid.
    /// Encoded/decoded by serializers as "ConditionalQuantityMissingOrInvalid".
    /// </summary>
    [EnumMember(Value = "COQI")]
    [IsoId("_twbW0VCDEe2KGNXAcFL5RA")]
    [Description(@"Conditional quantity is missing or invalid.")]
    ConditionalQuantityMissingOrInvalid,
    
    /// <summary>
    /// Conditional quantity zeroes are required.
    /// Encoded/decoded by serializers as "ConditionalQuantityZeroesRequired".
    /// </summary>
    [EnumMember(Value = "COQ0")]
    [IsoId("_uFBt0VCDEe2KGNXAcFL5RA")]
    [Description(@"Conditional quantity zeroes are required.")]
    ConditionalQuantityZeroesRequired,
    
    /// <summary>
    /// Contact name is missing.
    /// Encoded/decoded by serializers as "ContactNameMissing".
    /// </summary>
    [EnumMember(Value = "CNAM")]
    [IsoId("_uT0-0VCDEe2KGNXAcFL5RA")]
    [Description(@"Contact name is missing.")]
    ContactNameMissing,
    
    /// <summary>
    /// Contact name is not used with this event.
    /// Encoded/decoded by serializers as "ContactNameNotUsedWithEvent".
    /// </summary>
    [EnumMember(Value = "CNAX")]
    [IsoId("_uhoKQVCDEe2KGNXAcFL5RA")]
    [Description(@"Contact name is not used with this event.")]
    ContactNameNotUsedWithEvent,
    
    /// <summary>
    /// Contact phone number is missing.
    /// Encoded/decoded by serializers as "ContactPhoneNumberMissing".
    /// </summary>
    [EnumMember(Value = "CNPM")]
    [IsoId("_wn-ywVCDEe2KGNXAcFL5RA")]
    [Description(@"Contact phone number is missing.")]
    ContactPhoneNumberMissing,
    
    /// <summary>
    /// Contact phone number is not used with this event.
    /// Encoded/decoded by serializers as "ContactPhoneNumberNotUsedWithEvent".
    /// </summary>
    [EnumMember(Value = "CNPX")]
    [IsoId("_w2SUgVCDEe2KGNXAcFL5RA")]
    [Description(@"Contact phone number is not used with this event.")]
    ContactPhoneNumberNotUsedWithEvent,
    
    /// <summary>
    /// There is summary difference between core oversubscription quantity and extension transaction details.
    /// Encoded/decoded by serializers as "CoreInstructionOversubscriptionQuantityAndExtensionTransactionDetailsDifference".
    /// </summary>
    [EnumMember(Value = "SUMO")]
    [IsoId("_xHsNkVCDEe2KGNXAcFL5RA")]
    [Description(@"There is summary difference between core oversubscription quantity and extension transaction details.")]
    CoreInstructionOversubscriptionQuantityAndExtensionTransactionDetailsDifference,
    
    /// <summary>
    /// There is a summary difference between the core instruction quantity and the extension transaction details.
    /// Encoded/decoded by serializers as "CoreInstructionQuantityAndExtensionTransactionDetailsDifference".
    /// </summary>
    [EnumMember(Value = "SUME")]
    [IsoId("_xRYVEVCDEe2KGNXAcFL5RA")]
    [Description(@"There is a summary difference between the core instruction quantity and the extension transaction details.")]
    CoreInstructionQuantityAndExtensionTransactionDetailsDifference,
    
    /// <summary>
    /// Corporate action event identification is invalid.
    /// Encoded/decoded by serializers as "CorporateActionEventInvalid".
    /// </summary>
    [EnumMember(Value = "CAID")]
    [IsoId("_xlx3wVCDEe2KGNXAcFL5RA")]
    [Description(@"Corporate action event identification is invalid.")]
    CorporateActionEventInvalid,
    
    /// <summary>
    /// Cover quantity is greater than the remaining protect quantity.
    /// Encoded/decoded by serializers as "CoverQuantityGreaterThanProtectQuantity".
    /// </summary>
    [EnumMember(Value = "COVR")]
    [IsoId("_8NAVIVCDEe2KGNXAcFL5RA")]
    [Description(@"Cover quantity is greater than the remaining protect quantity.")]
    CoverQuantityGreaterThanProtectQuantity,
    
    /// <summary>
    /// Current date is greater than the protect submission end date.
    /// Encoded/decoded by serializers as "CurrentDatePassedProtectSubmissionEndDate".
    /// </summary>
    [EnumMember(Value = "PROE")]
    [IsoId("_8t-7QVCDEe2KGNXAcFL5RA")]
    [Description(@"Current date is greater than the protect submission end date.")]
    CurrentDatePassedProtectSubmissionEndDate,
    
    /// <summary>
    /// Current date is less than the protect submission start date.
    /// Encoded/decoded by serializers as "CurrentDatePrecedesProtectSubmissionStartDate".
    /// </summary>
    [EnumMember(Value = "PROS")]
    [IsoId("_86MyUVCDEe2KGNXAcFL5RA")]
    [Description(@"Current date is less than the protect submission start date.")]
    CurrentDatePrecedesProtectSubmissionStartDate,
    
    /// <summary>
    /// CUSIP is depository deliver chilled.
    /// Encoded/decoded by serializers as "CUSIPDepositoryDeliverChilled".
    /// </summary>
    [EnumMember(Value = "CHIL")]
    [IsoId("_9EcTcVCDEe2KGNXAcFL5RA")]
    [Description(@"CUSIP is depository deliver chilled.")]
    CUSIPDepositoryDeliverChilled,
    
    /// <summary>
    /// Target CUSIP or contra CUSIP identification is not DTC eligible.
    /// Encoded/decoded by serializers as "CUSIPNotDTCEligible".
    /// </summary>
    [EnumMember(Value = "CUSD")]
    [IsoId("_9YtTQVCDEe2KGNXAcFL5RA")]
    [Description(@"Target CUSIP or contra CUSIP identification is not DTC eligible.")]
    CUSIPNotDTCEligible,
    
    /// <summary>
    /// Target CUSIP or contra CUSIP identification is missing or invalid.
    /// Encoded/decoded by serializers as "CUSIPMissingOrInvalid".
    /// </summary>
    [EnumMember(Value = "CUSI")]
    [IsoId("_9sE7MVCDEe2KGNXAcFL5RA")]
    [Description(@"Target CUSIP or contra CUSIP identification is missing or invalid.")]
    CUSIPMissingOrInvalid,
    
    /// <summary>
    /// Customer oversubscription quantities do not add up to total oversubscription quantity.
    /// Encoded/decoded by serializers as "CustomerAndTotalOversubscriptionQuantitiesMismatch".
    /// </summary>
    [EnumMember(Value = "OVCU")]
    [IsoId("_-qPzoVCDEe2KGNXAcFL5RA")]
    [Description(@"Customer oversubscription quantities do not add up to total oversubscription quantity.")]
    CustomerAndTotalOversubscriptionQuantitiesMismatch,
    
    /// <summary>
    /// Customer identification is missing or invalid.
    /// Encoded/decoded by serializers as "CustomerIdentificationMissingOrInvalid".
    /// </summary>
    [EnumMember(Value = "CUID")]
    [IsoId("_-yaRIVCDEe2KGNXAcFL5RA")]
    [Description(@"Customer identification is missing or invalid.")]
    CustomerIdentificationMissingOrInvalid,
    
    /// <summary>
    /// Customer quantities do not add up to total rights quantities.
    /// Encoded/decoded by serializers as "CustomerQuantitiesAndTotalRightsQuantitiesMismatch".
    /// </summary>
    [EnumMember(Value = "CQRQ")]
    [IsoId("__Rs1MVCDEe2KGNXAcFL5RA")]
    [Description(@"Customer quantities do not add up to total rights quantities.")]
    CustomerQuantitiesAndTotalRightsQuantitiesMismatch,
    
    /// <summary>
    /// Customer sequence number must be all zero.
    /// Encoded/decoded by serializers as "CustomerSequenceNumberAllZero".
    /// </summary>
    [EnumMember(Value = "SEQ0")]
    [IsoId("_DZKZ0VCEEe2KGNXAcFL5RA")]
    [Description(@"Customer sequence number must be all zero.")]
    CustomerSequenceNumberAllZero,
    
    /// <summary>
    /// Customer sequence number is invalid or out of sequence.
    /// Encoded/decoded by serializers as "CustomerSequenceNumberInvalid".
    /// </summary>
    [EnumMember(Value = "CSEQ")]
    [IsoId("_D1ESsVCEEe2KGNXAcFL5RA")]
    [Description(@"Customer sequence number is invalid or out of sequence.")]
    CustomerSequenceNumberInvalid,
    
    /// <summary>
    /// Cut-off time check has failed.
    /// Encoded/decoded by serializers as "CutoffTimeCheckFailed".
    /// </summary>
    [EnumMember(Value = "CUTC")]
    [IsoId("_EmgWsVCEEe2KGNXAcFL5RA")]
    [Description(@"Cut-off time check has failed.")]
    CutoffTimeCheckFailed,
    
    /// <summary>
    /// Cut-off time has passed.
    /// Encoded/decoded by serializers as "CutoffTimePassed".
    /// </summary>
    [EnumMember(Value = "CUTT")]
    [IsoId("_E2JVMVCEEe2KGNXAcFL5RA")]
    [Description(@"Cut-off time has passed.")]
    CutoffTimePassed,
    
    /// <summary>
    /// Death certificate details are missing.
    /// Encoded/decoded by serializers as "DeathCertificateMissing".
    /// </summary>
    [EnumMember(Value = "BODC")]
    [IsoId("_E_Pm0VCEEe2KGNXAcFL5RA")]
    [Description(@"Death certificate details are missing.")]
    DeathCertificateMissing,
    
    /// <summary>
    /// Transaction sequence number is duplicated.
    /// Encoded/decoded by serializers as "DuplicateTransactionSequenceNumber".
    /// </summary>
    [EnumMember(Value = "SEQD")]
    [IsoId("_FhD6cVCEEe2KGNXAcFL5RA")]
    [Description(@"Transaction sequence number is duplicated.")]
    DuplicateTransactionSequenceNumber,
    
    /// <summary>
    /// Entry date is invalid.
    /// Encoded/decoded by serializers as "EntryDateInvalid".
    /// </summary>
    [EnumMember(Value = "ENTR")]
    [IsoId("_F14T4VCEEe2KGNXAcFL5RA")]
    [Description(@"Entry date is invalid.")]
    EntryDateInvalid,
    
    /// <summary>
    /// Entry date must be less than or equal to current date.
    /// Encoded/decoded by serializers as "EntryDatePassed".
    /// </summary>
    [EnumMember(Value = "ENTL")]
    [IsoId("_GENDwVCEEe2KGNXAcFL5RA")]
    [Description(@"Entry date must be less than or equal to current date.")]
    EntryDatePassed,
    
    /// <summary>
    /// Event already allocated.
    /// Encoded/decoded by serializers as "EventAlreadyAllocated".
    /// </summary>
    [EnumMember(Value = "ALLO")]
    [IsoId("_Gt9LYVCEEe2KGNXAcFL5RA")]
    [Description(@"Event already allocated.")]
    EventAlreadyAllocated,
    
    /// <summary>
    /// Customer has fractional underlying quantity, adjust quantity.
    /// Encoded/decoded by serializers as "FractionalUnderlyingQuantity".
    /// </summary>
    [EnumMember(Value = "FRAQ")]
    [IsoId("_HOnocVCEEe2KGNXAcFL5RA")]
    [Description(@"Customer has fractional underlying quantity, adjust quantity.")]
    FractionalUnderlyingQuantity,
    
    /// <summary>
    /// Function is not available at this time. Please check expiration start and end times for the event.
    /// Encoded/decoded by serializers as "FunctionNotAvailable".
    /// </summary>
    [EnumMember(Value = "FUNU")]
    [IsoId("_Hk9r4VCEEe2KGNXAcFL5RA")]
    [Description(@"Function is not available at this time. Please check expiration start and end times for the event.")]
    FunctionNotAvailable,
    
    /// <summary>
    /// Function is quiesced (not available).
    /// Encoded/decoded by serializers as "FunctionQuiesced".
    /// </summary>
    [EnumMember(Value = "QUIE")]
    [IsoId("_Hq570VCEEe2KGNXAcFL5RA")]
    [Description(@"Function is quiesced (not available).")]
    FunctionQuiesced,
    
    /// <summary>
    /// Instruction deletion acknowledgement indicator is invalid.
    /// Encoded/decoded by serializers as "InstructionDeletionAcknowledgementIndicatorInvalid".
    /// </summary>
    [EnumMember(Value = "INDI")]
    [IsoId("_IIxjkVCEEe2KGNXAcFL5RA")]
    [Description(@"Instruction deletion acknowledgement indicator is invalid.")]
    InstructionDeletionAcknowledgementIndicatorInvalid,
    
    /// <summary>
    /// Instruction deletion acknowledgement indicator is missing.
    /// Encoded/decoded by serializers as "InstructionDeletionAcknowledgementIndicatorMissing".
    /// </summary>
    [EnumMember(Value = "INDM")]
    [IsoId("_IXKk4VCEEe2KGNXAcFL5RA")]
    [Description(@"Instruction deletion acknowledgement indicator is missing.")]
    InstructionDeletionAcknowledgementIndicatorMissing,
    
    /// <summary>
    /// Participant has an insufficient position.
    /// Encoded/decoded by serializers as "InsufficientPosition".
    /// </summary>
    [EnumMember(Value = "LACK")]
    [IsoId("_JdxAkVCEEe2KGNXAcFL5RA")]
    [Description(@"Participant has an insufficient position.")]
    InsufficientPosition,
    
    /// <summary>
    /// Event type is not valid.
    /// Encoded/decoded by serializers as "InvalidEventType".
    /// </summary>
    [EnumMember(Value = "EVNM")]
    [IsoId("_JxLEwVCEEe2KGNXAcFL5RA")]
    [Description(@"Event type is not valid.")]
    InvalidEventType,
    
    /// <summary>
    /// Option number is not valid.
    /// Encoded/decoded by serializers as "InvalidOptionNumber".
    /// </summary>
    [EnumMember(Value = "OPNM")]
    [IsoId("_KPRWAVCEEe2KGNXAcFL5RA")]
    [Description(@"Option number is not valid.")]
    InvalidOptionNumber,
    
    /// <summary>
    /// Option type is not valid.
    /// Encoded/decoded by serializers as "InvalidOptionType".
    /// </summary>
    [EnumMember(Value = "OPTY")]
    [IsoId("_KXwjoVCEEe2KGNXAcFL5RA")]
    [Description(@"Option type is not valid.")]
    InvalidOptionType,
    
    /// <summary>
    /// Issuing jurisdiction is missing.
    /// Encoded/decoded by serializers as "IssuingJurisdictionMissing".
    /// </summary>
    [EnumMember(Value = "BOIJ")]
    [IsoId("_L21JsVCEEe2KGNXAcFL5RA")]
    [Description(@"Issuing jurisdiction is missing.")]
    IssuingJurisdictionMissing,
    
    /// <summary>
    /// Key data (VOI transaction) cannot be found.
    /// Encoded/decoded by serializers as "KeyDataNotFound".
    /// </summary>
    [EnumMember(Value = "KEYV")]
    [IsoId("_PNQS8VCEEe2KGNXAcFL5RA")]
    [Description(@"Key data (VOI transaction) cannot be found.")]
    KeyDataNotFound,
    
    /// <summary>
    /// Key information is missing (tenders data).
    /// Encoded/decoded by serializers as "KeyInformationMissing".
    /// </summary>
    [EnumMember(Value = "KEYM")]
    [IsoId("_PwuzcVCEEe2KGNXAcFL5RA")]
    [Description(@"Key information is missing (tenders data).")]
    KeyInformationMissing,
    
    /// <summary>
    /// Legal documentation thirty months retention acknowledgement indicator is invalid.
    /// Encoded/decoded by serializers as "LegalDocumentationThirtyMonthsRetentionAcknowledgementIndicatorInvalid".
    /// </summary>
    [EnumMember(Value = "LEGI")]
    [IsoId("_P9QMgVCEEe2KGNXAcFL5RA")]
    [Description(@"Legal documentation thirty months retention acknowledgement indicator is invalid.")]
    LegalDocumentationThirtyMonthsRetentionAcknowledgementIndicatorInvalid,
    
    /// <summary>
    /// Legal documentation thirty months retention acknowledgement indicator is missing.
    /// Encoded/decoded by serializers as "LegalDocumentationThirtyMonthsRetentionAcknowledgementIndicatorMissing".
    /// </summary>
    [EnumMember(Value = "LEGM")]
    [IsoId("_QIucsVCEEe2KGNXAcFL5RA")]
    [Description(@"Legal documentation thirty months retention acknowledgement indicator is missing.")]
    LegalDocumentationThirtyMonthsRetentionAcknowledgementIndicatorMissing,
    
    /// <summary>
    /// Master tables are not available.
    /// Encoded/decoded by serializers as "MasterTablesNotAvailable".
    /// </summary>
    [EnumMember(Value = "MSTB")]
    [IsoId("_QZjuAVCEEe2KGNXAcFL5RA")]
    [Description(@"Master tables are not available.")]
    MasterTablesNotAvailable,
    
    /// <summary>
    /// Not eligible for withdrawal, not in made status
    /// Encoded/decoded by serializers as "NotEligibleForWithdrawal".
    /// </summary>
    [EnumMember(Value = "NELG")]
    [IsoId("_S0gGcVCEEe2KGNXAcFL5RA")]
    [Description(@"Not eligible for withdrawal, not in made status")]
    NotEligibleForWithdrawal,
    
    /// <summary>
    /// There is no withdrawal privilege on this offer.
    /// Encoded/decoded by serializers as "NoWithdrawalPrivilege".
    /// </summary>
    [EnumMember(Value = "NWIT")]
    [IsoId("_TGt30VCEEe2KGNXAcFL5RA")]
    [Description(@"There is no withdrawal privilege on this offer.")]
    NoWithdrawalPrivilege,
    
    /// <summary>
    /// Odd lot indicator is missing or invalid.
    /// Encoded/decoded by serializers as "OddLotIndicatorMissingOrInvalid".
    /// </summary>
    [EnumMember(Value = "ODLI")]
    [IsoId("_UjG9UVCEEe2KGNXAcFL5RA")]
    [Description(@"Odd lot indicator is missing or invalid.")]
    OddLotIndicatorMissingOrInvalid,
    
    /// <summary>
    /// Cannot submit odd lot indicator 'Yes' for the offer.
    /// Encoded/decoded by serializers as "OddLotIndicatorYesInvalid".
    /// </summary>
    [EnumMember(Value = "ODLY")]
    [IsoId("_U9CgQVCEEe2KGNXAcFL5RA")]
    [Description(@"Cannot submit odd lot indicator 'Yes' for the offer.")]
    OddLotIndicatorYesInvalid,
    
    /// <summary>
    /// Offer is already on historical data base.
    /// Encoded/decoded by serializers as "OfferInDatabase".
    /// </summary>
    [EnumMember(Value = "HIST")]
    [IsoId("_VIjzwVCEEe2KGNXAcFL5RA")]
    [Description(@"Offer is already on historical data base.")]
    OfferInDatabase,
    
    /// <summary>
    /// Offer is not ATOP eligible.
    /// Encoded/decoded by serializers as "OfferNotATOPEligible".
    /// </summary>
    [EnumMember(Value = "ATOP")]
    [IsoId("_VV66UVCEEe2KGNXAcFL5RA")]
    [Description(@"Offer is not ATOP eligible.")]
    OfferNotATOPEligible,
    
    /// <summary>
    /// Offer is not eligible for the PUTS function.
    /// Encoded/decoded by serializers as "OfferNotEligibleForPuts".
    /// </summary>
    [EnumMember(Value = "OFFP")]
    [IsoId("_Vg8ekVCEEe2KGNXAcFL5RA")]
    [Description(@"Offer is not eligible for the PUTS function.")]
    OfferNotEligibleForPuts,
    
    /// <summary>
    /// Oversubscription is not allowed.
    /// Encoded/decoded by serializers as "OversubscriptionNotAllowed".
    /// </summary>
    [EnumMember(Value = "OVRX")]
    [IsoId("_WPb8QVCEEe2KGNXAcFL5RA")]
    [Description(@"Oversubscription is not allowed.")]
    OversubscriptionNotAllowed,
    
    /// <summary>
    /// Oversubscription quantity is greater than percentage of underlying shares.
    /// Encoded/decoded by serializers as "OversubscriptionQuantityExceeded".
    /// </summary>
    [EnumMember(Value = "OVRG")]
    [IsoId("_WmFhsVCEEe2KGNXAcFL5RA")]
    [Description(@"Oversubscription quantity is greater than percentage of underlying shares.")]
    OversubscriptionQuantityExceeded,
    
    /// <summary>
    /// Oversubscription quantity is invalid.
    /// Encoded/decoded by serializers as "OversubscriptionQuantityInvalid".
    /// </summary>
    [EnumMember(Value = "OVRI")]
    [IsoId("_WvLzUVCEEe2KGNXAcFL5RA")]
    [Description(@"Oversubscription quantity is invalid.")]
    OversubscriptionQuantityInvalid,
    
    /// <summary>
    /// Oversubscription quantity not used with this transaction type.
    /// Encoded/decoded by serializers as "OversubscriptionQuantityNotUsed".
    /// </summary>
    [EnumMember(Value = "OVTT")]
    [IsoId("_XCtMQVCEEe2KGNXAcFL5RA")]
    [Description(@"Oversubscription quantity not used with this transaction type.")]
    OversubscriptionQuantityNotUsed,
    
    /// <summary>
    /// Participant is DO chilled.
    /// Encoded/decoded by serializers as "ParticipantDOChilled".
    /// </summary>
    [EnumMember(Value = "PACH")]
    [IsoId("_XY2bYVCEEe2KGNXAcFL5RA")]
    [Description(@"Participant is DO chilled.")]
    ParticipantDOChilled,
    
    /// <summary>
    /// Participant eligibility check on master table is not available.
    /// Encoded/decoded by serializers as "ParticipantEligibilityCheckNotAvailable".
    /// </summary>
    [EnumMember(Value = "PAEC")]
    [IsoId("_XluZwVCEEe2KGNXAcFL5RA")]
    [Description(@"Participant eligibility check on master table is not available.")]
    ParticipantEligibilityCheckNotAvailable,
    
    /// <summary>
    /// Participant is globally locked.
    /// Encoded/decoded by serializers as "ParticipantLocked".
    /// </summary>
    [EnumMember(Value = "PARL")]
    [IsoId("_YBlPUVCEEe2KGNXAcFL5RA")]
    [Description(@"Participant is globally locked.")]
    ParticipantLocked,
    
    /// <summary>
    /// Participant does not match the participant on protect identification.
    /// Encoded/decoded by serializers as "ParticipantNoMatchOnProtectIdentification".
    /// </summary>
    [EnumMember(Value = "PAPI")]
    [IsoId("_YoLVQVCEEe2KGNXAcFL5RA")]
    [Description(@"Participant does not match the participant on protect identification.")]
    ParticipantNoMatchOnProtectIdentification,
    
    /// <summary>
    /// Participant is not DTC eligible.
    /// Encoded/decoded by serializers as "ParticipantNotEligible".
    /// </summary>
    [EnumMember(Value = "PARX")]
    [IsoId("_a5OK0VCEEe2KGNXAcFL5RA")]
    [Description(@"Participant is not DTC eligible.")]
    ParticipantNotEligible,
    
    /// <summary>
    /// Participant number is invalid.
    /// Encoded/decoded by serializers as "ParticipantNumberInvalid".
    /// </summary>
    [EnumMember(Value = "PART")]
    [IsoId("_bD5w0VCEEe2KGNXAcFL5RA")]
    [Description(@"Participant number is invalid.")]
    ParticipantNumberInvalid,
    
    /// <summary>
    /// Potential loss acknowledgement indicator is invalid.
    /// Encoded/decoded by serializers as "PotentialLossAcknowledgementIndicatorInvalid".
    /// </summary>
    [EnumMember(Value = "POLI")]
    [IsoId("_ddYwsVCEEe2KGNXAcFL5RA")]
    [Description(@"Potential loss acknowledgement indicator is invalid.")]
    PotentialLossAcknowledgementIndicatorInvalid,
    
    /// <summary>
    /// Potential loss acknowledgement indicator is missing.
    /// Encoded/decoded by serializers as "PotentialLossAcknowledgementIndicatorMissing".
    /// </summary>
    [EnumMember(Value = "POLM")]
    [IsoId("_dmBvUVCEEe2KGNXAcFL5RA")]
    [Description(@"Potential loss acknowledgement indicator is missing.")]
    PotentialLossAcknowledgementIndicatorMissing,
    
    /// <summary>
    /// Protect date invalid or missing.
    /// Encoded/decoded by serializers as "ProtectDateInvalidOrMissing".
    /// </summary>
    [EnumMember(Value = "PROI")]
    [IsoId("_d_D6YVCEEe2KGNXAcFL5RA")]
    [Description(@"Protect date invalid or missing.")]
    ProtectDateInvalidOrMissing,
    
    /// <summary>
    /// Protect date must be less than or equal to current date.
    /// Encoded/decoded by serializers as "ProtectDatePassed".
    /// </summary>
    [EnumMember(Value = "PROL")]
    [IsoId("_eOju8VCEEe2KGNXAcFL5RA")]
    [Description(@"Protect date must be less than or equal to current date.")]
    ProtectDatePassed,
    
    /// <summary>
    /// Protect date on file must be zero.
    /// Encoded/decoded by serializers as "ProtectDateZero".
    /// </summary>
    [EnumMember(Value = "PRO0")]
    [IsoId("_efGsYVCEEe2KGNXAcFL5RA")]
    [Description(@"Protect date on file must be zero.")]
    ProtectDateZero,
    
    /// <summary>
    /// Protect identification is missing or invalid.
    /// Encoded/decoded by serializers as "ProtectIdentificationMissingOrInvalid".
    /// </summary>
    [EnumMember(Value = "PROT")]
    [IsoId("_euTmAVCEEe2KGNXAcFL5RA")]
    [Description(@"Protect identification is missing or invalid.")]
    ProtectIdentificationMissingOrInvalid,
    
    /// <summary>
    /// Protect identification is not used with this event.
    /// Encoded/decoded by serializers as "ProtectIdentificationNotUsed".
    /// </summary>
    [EnumMember(Value = "PROX")]
    [IsoId("_e3sLgVCEEe2KGNXAcFL5RA")]
    [Description(@"Protect identification is not used with this event.")]
    ProtectIdentificationNotUsed,
    
    /// <summary>
    /// Provided by protect, enter 0 for transaction quantity.
    /// Encoded/decoded by serializers as "ProvidedByProtect".
    /// </summary>
    [EnumMember(Value = "TRQP")]
    [IsoId("_fRUzgVCEEe2KGNXAcFL5RA")]
    [Description(@"Provided by protect, enter 0 for transaction quantity.")]
    ProvidedByProtect,
    
    /// <summary>
    /// Record type is invalid.
    /// Encoded/decoded by serializers as "RecordTypeInvalid".
    /// </summary>
    [EnumMember(Value = "RECI")]
    [IsoId("_fbKE8VCEEe2KGNXAcFL5RA")]
    [Description(@"Record type is invalid.")]
    RecordTypeInvalid,
    
    /// <summary>
    /// Rights CUSIP has insufficient position.
    /// Encoded/decoded by serializers as "RightsCUSIPInsufficientPosition".
    /// </summary>
    [EnumMember(Value = "RILA")]
    [IsoId("_gMxvIVCEEe2KGNXAcFL5RA")]
    [Description(@"Rights CUSIP has insufficient position.")]
    RightsCUSIPInsufficientPosition,
    
    /// <summary>
    /// Not a good return code from rights position check.
    /// Encoded/decoded by serializers as "RightsPositionCheckInvalid".
    /// </summary>
    [EnumMember(Value = "RPCI")]
    [IsoId("_gbrGwVCEEe2KGNXAcFL5RA")]
    [Description(@"Not a good return code from rights position check.")]
    RightsPositionCheckInvalid,
    
    /// <summary>
    /// Rights quantity for this subscription must be divisible by rights.
    /// Encoded/decoded by serializers as "RightsQuantityDivisibleByRights".
    /// </summary>
    [EnumMember(Value = "RQDV")]
    [IsoId("_gnmC4VCEEe2KGNXAcFL5RA")]
    [Description(@"Rights quantity for this subscription must be divisible by rights.")]
    RightsQuantityDivisibleByRights,
    
    /// <summary>
    /// Rights quantity is invalid.
    /// Encoded/decoded by serializers as "RightsQuantityInvalid".
    /// </summary>
    [EnumMember(Value = "RQIN")]
    [IsoId("_hAVTAVCEEe2KGNXAcFL5RA")]
    [Description(@"Rights quantity is invalid.")]
    RightsQuantityInvalid,
    
    /// <summary>
    /// Rights ratio not found on data base.
    /// Encoded/decoded by serializers as "RightsRatioNotFound".
    /// </summary>
    [EnumMember(Value = "RTIO")]
    [IsoId("_iCsu8VCEEe2KGNXAcFL5RA")]
    [Description(@"Rights ratio not found on data base.")]
    RightsRatioNotFound,
    
    /// <summary>
    /// RTS processing is in progress. Submit later.
    /// Encoded/decoded by serializers as "RTSProcessingInProgress".
    /// </summary>
    [EnumMember(Value = "RTSP")]
    [IsoId("_iPOIAVCEEe2KGNXAcFL5RA")]
    [Description(@"RTS processing is in progress. Submit later.")]
    RTSProcessingInProgress,
    
    /// <summary>
    /// Customer sequence number must be between 1 and 1 or for PUTS between 9999901 and 9999912.
    /// Encoded/decoded by serializers as "SequenceNumberInvalidBounds".
    /// </summary>
    [EnumMember(Value = "SEQP")]
    [IsoId("_ijRscVCEEe2KGNXAcFL5RA")]
    [Description(@"Customer sequence number must be between 1 and 1 or for PUTS between 9999901 and 9999912.")]
    SequenceNumberInvalidBounds,
    
    /// <summary>
    /// Sequence number is missing.
    /// Encoded/decoded by serializers as "SequenceNumberMissing".
    /// </summary>
    [EnumMember(Value = "SEQM")]
    [IsoId("_jB-aoVCEEe2KGNXAcFL5RA")]
    [Description(@"Sequence number is missing.")]
    SequenceNumberMissing,
    
    /// <summary>
    /// Sequence number is out of sequence.
    /// Encoded/decoded by serializers as "SequenceNumberOutOfSync".
    /// </summary>
    [EnumMember(Value = "SEQO")]
    [IsoId("_jj0jcVCEEe2KGNXAcFL5RA")]
    [Description(@"Sequence number is out of sequence.")]
    SequenceNumberOutOfSync,
    
    /// <summary>
    /// Comments are required for solicitation fee.
    /// Encoded/decoded by serializers as "SolicitationFeeCommentsRequired".
    /// </summary>
    [EnumMember(Value = "SOCR")]
    [IsoId("_j9luUVCEEe2KGNXAcFL5RA")]
    [Description(@"Comments are required for solicitation fee.")]
    SolicitationFeeCommentsRequired,
    
    /// <summary>
    /// Solicitation fee indicator is not used with this event.
    /// Encoded/decoded by serializers as "SolicitationFeeIndicatorNotUsed".
    /// </summary>
    [EnumMember(Value = "SOLX")]
    [IsoId("_kESzQVCEEe2KGNXAcFL5RA")]
    [Description(@"Solicitation fee indicator is not used with this event.")]
    SolicitationFeeIndicatorNotUsed,
    
    /// <summary>
    /// Solicitation fee indicator is required.
    /// Encoded/decoded by serializers as "SolicitationFeeIndicatorRequired".
    /// </summary>
    [EnumMember(Value = "SOLI")]
    [IsoId("_kMo28VCEEe2KGNXAcFL5RA")]
    [Description(@"Solicitation fee indicator is required.")]
    SolicitationFeeIndicatorRequired,
    
    /// <summary>
    /// Submission date is not yet reached.
    /// Encoded/decoded by serializers as "SubmissionDateNotReached".
    /// </summary>
    [EnumMember(Value = "SUBE")]
    [IsoId("_kXNvQVCEEe2KGNXAcFL5RA")]
    [Description(@"Submission date is not yet reached.")]
    SubmissionDateNotReached,
    
    /// <summary>
    /// Date of submission has passed.
    /// Encoded/decoded by serializers as "SubmissionDatePassed".
    /// </summary>
    [EnumMember(Value = "SUBL")]
    [IsoId("_kpqKIVCEEe2KGNXAcFL5RA")]
    [Description(@"Date of submission has passed.")]
    SubmissionDatePassed,
    
    /// <summary>
    /// Transaction identification is invalid.
    /// Encoded/decoded by serializers as "TransactionIdentificationInvalid".
    /// </summary>
    [EnumMember(Value = "TRNI")]
    [IsoId("_kyyQ8VCEEe2KGNXAcFL5RA")]
    [Description(@"Transaction identification is invalid.")]
    TransactionIdentificationInvalid,
    
    /// <summary>
    /// Transaction quantity cannot be zero.
    /// Encoded/decoded by serializers as "TransactionQuantityCannotBeZero".
    /// </summary>
    [EnumMember(Value = "TRQ0")]
    [IsoId("_lB-jgVCEEe2KGNXAcFL5RA")]
    [Description(@"Transaction quantity cannot be zero.")]
    TransactionQuantityCannotBeZero,
    
    /// <summary>
    /// Transaction quantity is less than the transaction minimum.
    /// Encoded/decoded by serializers as "TransactionQuantityLessThanTransactionMinimum".
    /// </summary>
    [EnumMember(Value = "TRQM")]
    [IsoId("_lbnLgVCEEe2KGNXAcFL5RA")]
    [Description(@"Transaction quantity is less than the transaction minimum.")]
    TransactionQuantityLessThanTransactionMinimum,
    
    /// <summary>
    /// Transaction quantity is missing or invalid.
    /// Encoded/decoded by serializers as "TransactionQuantityMissingOrInvalid".
    /// </summary>
    [EnumMember(Value = "TRQI")]
    [IsoId("_llJiAVCEEe2KGNXAcFL5RA")]
    [Description(@"Transaction quantity is missing or invalid.")]
    TransactionQuantityMissingOrInvalid,
    
    /// <summary>
    /// Transaction sequence is invalid. Used only for rights exercise events.
    /// Encoded/decoded by serializers as "TransactionSequenceInvalid".
    /// </summary>
    [EnumMember(Value = "TRNS")]
    [IsoId("_l0DgsVCEEe2KGNXAcFL5RA")]
    [Description(@"Transaction sequence is invalid. Used only for rights exercise events.")]
    TransactionSequenceInvalid,
    
    /// <summary>
    /// Transaction type and event are incompatible.
    /// Encoded/decoded by serializers as "TransactionTypeAndEventIncompatible".
    /// </summary>
    [EnumMember(Value = "TNFN")]
    [IsoId("_mM43cVCEEe2KGNXAcFL5RA")]
    [Description(@"Transaction type and event are incompatible.")]
    TransactionTypeAndEventIncompatible,
    
    /// <summary>
    /// Transaction type or withdrawal transaction type is invalid.
    /// Encoded/decoded by serializers as "TransactionTypeInvalid".
    /// </summary>
    [EnumMember(Value = "TRTI")]
    [IsoId("_mVINcVCEEe2KGNXAcFL5RA")]
    [Description(@"Transaction type or withdrawal transaction type is invalid.")]
    TransactionTypeInvalid,
    
    /// <summary>
    /// Transaction type is missing.
    /// Encoded/decoded by serializers as "TransactionTypeMissing".
    /// </summary>
    [EnumMember(Value = "TRNM")]
    [IsoId("_mkoCAVCEEe2KGNXAcFL5RA")]
    [Description(@"Transaction type is missing.")]
    TransactionTypeMissing,
    
    /// <summary>
    /// Underlying security CUSIP is invalid.
    /// Encoded/decoded by serializers as "UnderlyingSecurityCUSIPInvalid".
    /// </summary>
    [EnumMember(Value = "CUSP")]
    [IsoId("_pGdsoVCEEe2KGNXAcFL5RA")]
    [Description(@"Underlying security CUSIP is invalid.")]
    UnderlyingSecurityCUSIPInvalid,
    
    /// <summary>
    /// Underlying security CUSIP does not match the original.
    /// Encoded/decoded by serializers as "UnderlyingSecurityCUSIPMismatch".
    /// </summary>
    [EnumMember(Value = "CUSU")]
    [IsoId("_pU1f0VCEEe2KGNXAcFL5RA")]
    [Description(@"Underlying security CUSIP does not match the original.")]
    UnderlyingSecurityCUSIPMismatch,
    
    /// <summary>
    /// Underlying share quantity is invalid.
    /// Encoded/decoded by serializers as "UnderlyingShareQuantityInvalid".
    /// </summary>
    [EnumMember(Value = "SHQI")]
    [IsoId("_pfWGsVCEEe2KGNXAcFL5RA")]
    [Description(@"Underlying share quantity is invalid.")]
    UnderlyingShareQuantityInvalid,
    
    /// <summary>
    /// Underlying share quantity does not match original share quantity.
    /// Encoded/decoded by serializers as "UnderlyingShareQuantityMismatch".
    /// </summary>
    [EnumMember(Value = "SHQO")]
    [IsoId("_puOQMVCEEe2KGNXAcFL5RA")]
    [Description(@"Underlying share quantity does not match original share quantity.")]
    UnderlyingShareQuantityMismatch,
    
    /// <summary>
    /// Rejection reason is unknown.
    /// Encoded/decoded by serializers as "UnknownErrorCondition".
    /// </summary>
    [EnumMember(Value = "OTHR")]
    [IsoId("_p8_sAVCEEe2KGNXAcFL5RA")]
    [Description(@"Rejection reason is unknown.")]
    UnknownErrorCondition,
    
    /// <summary>
    /// Warrant subscription charge amount is not balancing.
    /// Encoded/decoded by serializers as "WarrantSubscriptionChargeAmountInvalid".
    /// </summary>
    [EnumMember(Value = "WARC")]
    [IsoId("_qb2LMVCEEe2KGNXAcFL5RA")]
    [Description(@"Warrant subscription charge amount is not balancing.")]
    WarrantSubscriptionChargeAmountInvalid,
    
    /// <summary>
    /// Withdrawal quantity exceeds the remaining quantity.
    /// Encoded/decoded by serializers as "WithdrawalQuantityExceedsRemainingQuantity".
    /// </summary>
    [EnumMember(Value = "WITQ")]
    [IsoId("_qpQVEVCEEe2KGNXAcFL5RA")]
    [Description(@"Withdrawal quantity exceeds the remaining quantity.")]
    WithdrawalQuantityExceedsRemainingQuantity,
    
    /// <summary>
    /// Withdrawal quantity is greater than VOI/protect quantity.
    /// Encoded/decoded by serializers as "WithdrawalQuantityGreaterThanProtectQuantity".
    /// </summary>
    [EnumMember(Value = "WITG")]
    [IsoId("_qzGNkVCEEe2KGNXAcFL5RA")]
    [Description(@"Withdrawal quantity is greater than VOI/protect quantity.")]
    WithdrawalQuantityGreaterThanProtectQuantity,
    
    /// <summary>
    /// Withdrawal transaction quantity cannot be zero.
    /// Encoded/decoded by serializers as "WithdrawalTransactionQuantityCannotBeZero".
    /// </summary>
    [EnumMember(Value = "WIT0")]
    [IsoId("_rBZIQVCEEe2KGNXAcFL5RA")]
    [Description(@"Withdrawal transaction quantity cannot be zero.")]
    WithdrawalTransactionQuantityCannotBeZero,
    
    /// <summary>
    /// Withdrawal transaction type is invalid.
    /// Encoded/decoded by serializers as "WithdrawalTransactionTypeInvalid".
    /// </summary>
    [EnumMember(Value = "WITI")]
    [IsoId("_rkJ3EVCEEe2KGNXAcFL5RA")]
    [Description(@"Withdrawal transaction type is invalid.")]
    WithdrawalTransactionTypeInvalid,
    
    /// <summary>
    /// Error in withdraw occurred.
    /// Encoded/decoded by serializers as "WithdrawError".
    /// </summary>
    [EnumMember(Value = "WITE")]
    [IsoId("_rznPYVCEEe2KGNXAcFL5RA")]
    [Description(@"Error in withdraw occurred.")]
    WithdrawError,
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class InstructionRejectionReason3CodeMetadataExtensions
{
    private static readonly InstructionRejectionReason3CodeDropdownSource _dropdownSource = new InstructionRejectionReason3CodeDropdownSource();

    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static IInstructionRejectionReason3CodeDropdownRow GetMetadata(this InstructionRejectionReason3Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


