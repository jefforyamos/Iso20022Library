//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for IntermediateSecurityDistributionType1Code.  ISO2002 ID# _aZ-Ch9p-Ed-ak6NoX_4Aeg_1639683801.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Specifies the type of intermediate security distribution.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_aZ-Ch9p-Ed-ak6NoX_4Aeg_1639683801")]
[Description(@"Specifies the type of intermediate security distribution.")]
[DerivedFrom(typeof(IntermediateSecurityDistributionTypeCode))]
public enum IntermediateSecurityDistributionType1Code
{
    /// <summary>
    /// Distribution of reverser rights.
    /// Encoded/decoded by serializers as "BIDS".
    /// </summary>
    [EnumMember(Value = "BIDS")]
    [IsoId("_aZ-CiNp-Ed-ak6NoX_4Aeg_1639683803")]
    [Description(@"Distribution of reverser rights.")]
    ReverseRights = IntermediateSecurityDistributionTypeCode.ReverseRights, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Distribution of bonus rights.
    /// Encoded/decoded by serializers as "BONU".
    /// </summary>
    [EnumMember(Value = "BONU")]
    [IsoId("_aaHMcNp-Ed-ak6NoX_4Aeg_1639683831")]
    [Description(@"Distribution of bonus rights.")]
    BonusRights = IntermediateSecurityDistributionTypeCode.BonusRights, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Distribution of dividend reinvestment securities.
    /// Encoded/decoded by serializers as "DRIP".
    /// </summary>
    [EnumMember(Value = "DRIP")]
    [IsoId("_aaHMcdp-Ed-ak6NoX_4Aeg_1639683832")]
    [Description(@"Distribution of dividend reinvestment securities.")]
    DividendReinvestment = IntermediateSecurityDistributionTypeCode.DividendReinvestment, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Distribution of cash to shareholders, in proportion to their equity holding. Ordinary dividends are recurring and regular. Shareholder must take cash and may be offered a choice of currency.
    /// Encoded/decoded by serializers as "DVCA".
    /// </summary>
    [EnumMember(Value = "DVCA")]
    [IsoId("_aaHMctp-Ed-ak6NoX_4Aeg_1639683862")]
    [Description(@"Distribution of cash to shareholders, in proportion to their equity holding. Ordinary dividends are recurring and regular. Shareholder must take cash and may be offered a choice of currency.")]
    CashDividend = IntermediateSecurityDistributionTypeCode.CashDividend, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Distribution of dividend option.
    /// Encoded/decoded by serializers as "DVOP".
    /// </summary>
    [EnumMember(Value = "DVOP")]
    [IsoId("_aaHMc9p-Ed-ak6NoX_4Aeg_1639683863")]
    [Description(@"Distribution of dividend option.")]
    DividendOption = IntermediateSecurityDistributionTypeCode.DividendOption, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Distribution of subscription rights.
    /// Encoded/decoded by serializers as "EXRI".
    /// </summary>
    [EnumMember(Value = "EXRI")]
    [IsoId("_aaHMdNp-Ed-ak6NoX_4Aeg_1639683864")]
    [Description(@"Distribution of subscription rights.")]
    SubscriptionRights = IntermediateSecurityDistributionTypeCode.SubscriptionRights, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Distribution of open offer rights.
    /// Encoded/decoded by serializers as "PRIO".
    /// </summary>
    [EnumMember(Value = "PRIO")]
    [IsoId("_aaHMddp-Ed-ak6NoX_4Aeg_1639683885")]
    [Description(@"Distribution of open offer rights.")]
    OpenOfferRights = IntermediateSecurityDistributionTypeCode.OpenOfferRights, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Dividend or interest paid in the form of scrip.
    /// Encoded/decoded by serializers as "DVSC".
    /// </summary>
    [EnumMember(Value = "DVSC")]
    [IsoId("_aaHMdtp-Ed-ak6NoX_4Aeg_1639683893")]
    [Description(@"Dividend or interest paid in the form of scrip.")]
    ScripDividendOrPayment = IntermediateSecurityDistributionTypeCode.ScripDividendOrPayment, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Dividend paid to shareholders in the form of shares of stock.
    /// Encoded/decoded by serializers as "DVSE".
    /// </summary>
    [EnumMember(Value = "DVSE")]
    [IsoId("_aaHMd9p-Ed-ak6NoX_4Aeg_1639683894")]
    [Description(@"Dividend paid to shareholders in the form of shares of stock.")]
    StockDividend = IntermediateSecurityDistributionTypeCode.StockDividend, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Interest payment distributed to holders of an interest bearing asset.
    /// Encoded/decoded by serializers as "INTR".
    /// </summary>
    [EnumMember(Value = "INTR")]
    [IsoId("_aaHMeNp-Ed-ak6NoX_4Aeg_1639684133")]
    [Description(@"Interest payment distributed to holders of an interest bearing asset.")]
    InterestPayment = IntermediateSecurityDistributionTypeCode.InterestPayment, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// A distribution of cash, assets or both.
    /// Encoded/decoded by serializers as "LIQU".
    /// </summary>
    [EnumMember(Value = "LIQU")]
    [IsoId("_aaHMedp-Ed-ak6NoX_4Aeg_1639684141")]
    [Description(@"A distribution of cash, assets or both.")]
    LiquidationDividendOrPayment = IntermediateSecurityDistributionTypeCode.LiquidationDividendOrPayment, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// A distribution of subsidiary stock to the shareholders.
    /// Encoded/decoded by serializers as "SOFF".
    /// </summary>
    [EnumMember(Value = "SOFF")]
    [IsoId("_aaQ9cNp-Ed-ak6NoX_4Aeg_1639684164")]
    [Description(@"A distribution of subsidiary stock to the shareholders.")]
    SpinOff = IntermediateSecurityDistributionTypeCode.SpinOff, // same ordinal as derivation source for type conversions
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class IntermediateSecurityDistributionType1CodeMetadataExtensions
{
    private static readonly IntermediateSecurityDistributionType1CodeDropdownSource _dropdownSource = new IntermediateSecurityDistributionType1CodeDropdownSource();
    
    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static IIntermediateSecurityDistributionType1CodeDropdownRow GetMetadata(this IntermediateSecurityDistributionType1Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


