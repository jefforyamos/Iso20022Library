//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for InvestorType2Code.  ISO2002 ID# _PP8k8NdbEeibyvRfU9vJ7w.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Specifies the type of investor.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_PP8k8NdbEeibyvRfU9vJ7w")]
[Description(@"Specifies the type of investor.")]
[DerivedFrom(typeof(InvestorTypeCode))]
public enum InvestorType2Code
{
    /// <summary>
    /// Investor is both professional per se and elective professional.
    /// Encoded/decoded by serializers as "BOT3".
    /// </summary>
    [EnumMember(Value = "BOT3")]
    [IsoId("_Rk308ddbEeibyvRfU9vJ7w")]
    [Description(@"Investor is both professional per se and elective professional.")]
    BothProfessionalPerSeAndElectiveProfessional = InvestorTypeCode.BothProfessionalPerSeAndElectiveProfessional, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Investor is an elective professional.
    /// Encoded/decoded by serializers as "EPRO".
    /// </summary>
    [EnumMember(Value = "EPRO")]
    [IsoId("_SH1YEddbEeibyvRfU9vJ7w")]
    [Description(@"Investor is an elective professional.")]
    ElectiveProfessional = InvestorTypeCode.ElectiveProfessional, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Investor is professional or professional per se.
    /// Encoded/decoded by serializers as "PRF2".
    /// </summary>
    [EnumMember(Value = "PRF2")]
    [IsoId("_TMkLgddbEeibyvRfU9vJ7w")]
    [Description(@"Investor is professional or professional per se.")]
    ProfessionalOrPerSe = InvestorTypeCode.ProfessionalOrPerSe, // same ordinal as derivation source for type conversions
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class InvestorType2CodeMetadataExtensions
{
    private static readonly InvestorType2CodeDropdownSource _dropdownSource = new InvestorType2CodeDropdownSource();
    
    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static IInvestorType2CodeDropdownRow GetMetadata(this InvestorType2Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


