//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for InvestorType4Code.  ISO2002 ID# _7VIwsLVMEeqkjqDuFVh1-A.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Specifies the type of investor.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_7VIwsLVMEeqkjqDuFVh1-A")]
[Description(@"Specifies the type of investor.")]
[DerivedFrom(typeof(InvestorTypeV2Code))]
public enum InvestorType4Code
{
    /// <summary>
    /// Investor is both professional per se and elective professional.
    /// Encoded/decoded by serializers as "BothProfessionalPerSeAndElectiveProfessional".
    /// </summary>
    [EnumMember(Value = "BOT3")]
    [IsoId("__1XaobVMEeqkjqDuFVh1-A")]
    [Description(@"Investor is both professional per se and elective professional.")]
    BothProfessionalPerSeAndElectiveProfessional,
    
    /// <summary>
    /// Investor is neither professional per se or elective professional.
    /// Encoded/decoded by serializers as "NotProfessionalPerSeElectiveProfessional".
    /// </summary>
    [EnumMember(Value = "NPRF")]
    [IsoId("_A9C0YbVNEeqkjqDuFVh1-A")]
    [Description(@"Investor is neither professional per se or elective professional.")]
    NotProfessionalPerSeElectiveProfessional,
    
    /// <summary>
    /// Investor is professional per se but not elective professional.
    /// Encoded/decoded by serializers as "ProfessionalPerSeNotElectiveProfessional".
    /// </summary>
    [EnumMember(Value = "PRF3")]
    [IsoId("_BkOJIbVNEeqkjqDuFVh1-A")]
    [Description(@"Investor is professional per se but not elective professional.")]
    ProfessionalPerSeNotElectiveProfessional,
    
    /// <summary>
    /// Investor is an elective professional but not professional per se.
    /// Encoded/decoded by serializers as "ElectiveProfessionalNotProfessionalPerSe".
    /// </summary>
    [EnumMember(Value = "PRF4")]
    [IsoId("_CeL3AbVNEeqkjqDuFVh1-A")]
    [Description(@"Investor is an elective professional but not professional per se.")]
    ElectiveProfessionalNotProfessionalPerSe,
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class InvestorType4CodeMetadataExtensions
{
    private static readonly InvestorType4CodeDropdownSource _dropdownSource = new InvestorType4CodeDropdownSource();

    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static IInvestorType4CodeDropdownRow GetMetadata(this InvestorType4Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


