//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for Operation1Code.  ISO2002 ID# _aO8eQ9p-Ed-ak6NoX_4Aeg_1634410135.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20022.Codesets;

/// <summary>
/// Indicates the relationship between two variables.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_aO8eQ9p-Ed-ak6NoX_4Aeg_1634410135")]
[Description(@"Indicates the relationship between two variables.")]
[DerivedFrom(typeof(OperationCode))]
public enum Operation1Code
{
    /// <summary>
    /// Indicates a range delimited by two variables.
    /// Encoded/decoded by serializers as "TILL".
    /// </summary>
    [EnumMember(Value = "TILL")]
    [IsoId("_aO8eRNp-Ed-ak6NoX_4Aeg_-2087974128")]
    [Description(@"Indicates a range delimited by two variables.")]
    Till = OperationCode.Till, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Indicates either of two variables is valid, but not both.
    /// Encoded/decoded by serializers as "ORRR".
    /// </summary>
    [EnumMember(Value = "ORRR")]
    [IsoId("_aO8eRdp-Ed-ak6NoX_4Aeg_-2087974093")]
    [Description(@"Indicates either of two variables is valid, but not both.")]
    Or = OperationCode.Or, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Indicates that only when both variables are given, the operation is valid.
    /// Encoded/decoded by serializers as "ANDD".
    /// </summary>
    [EnumMember(Value = "ANDD")]
    [IsoId("_aO8eRtp-Ed-ak6NoX_4Aeg_-2087974033")]
    [Description(@"Indicates that only when both variables are given, the operation is valid.")]
    And = OperationCode.And, // same ordinal as derivation source for type conversions
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class Operation1CodeMetadataExtensions
{
    private static readonly Operation1CodeDropdownSource _dropdownSource = new Operation1CodeDropdownSource();
    
    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static IOperation1CodeDropdownRow GetMetadata(this Operation1Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


