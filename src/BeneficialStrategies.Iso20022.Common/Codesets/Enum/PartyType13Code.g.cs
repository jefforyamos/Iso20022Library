//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for PartyType13Code.  ISO2002 ID# _otjDEIp8EeS3NqNpgnMh2w.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20022.Codesets;

/// <summary>
/// Identifies the entity which initially sets the authorisation response value.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_otjDEIp8EeS3NqNpgnMh2w")]
[Description(@"Identifies the entity which initially sets the authorisation response value.")]
[DerivedFrom(typeof(PartyTypeCode))]
public enum PartyType13Code
{
    /// <summary>
    /// Entity acquiring card transactions.
    /// Encoded/decoded by serializers as "ACQR".
    /// </summary>
    [EnumMember(Value = "ACQR")]
    [IsoId("_rR52MYp8EeS3NqNpgnMh2w")]
    [Description(@"Entity acquiring card transactions.")]
    Acquirer = PartyTypeCode.Acquirer, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Party that issues cards.
    /// Encoded/decoded by serializers as "CISS".
    /// </summary>
    [EnumMember(Value = "CISS")]
    [IsoId("_rlIUM4p8EeS3NqNpgnMh2w")]
    [Description(@"Party that issues cards.")]
    CardIssuer = PartyTypeCode.CardIssuer, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Party to whom the card issuer delegates to authorise card payment transactions.
    /// Encoded/decoded by serializers as "DLIS".
    /// </summary>
    [EnumMember(Value = "DLIS")]
    [IsoId("_sTWsI4p8EeS3NqNpgnMh2w")]
    [Description(@"Party to whom the card issuer delegates to authorise card payment transactions.")]
    DelegateIssuer = PartyTypeCode.DelegateIssuer, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Party acting on behalf of other parties to process or forward data to other parties.
    /// Encoded/decoded by serializers as "ITAG".
    /// </summary>
    [EnumMember(Value = "ITAG")]
    [IsoId("_stIeE4p8EeS3NqNpgnMh2w")]
    [Description(@"Party acting on behalf of other parties to process or forward data to other parties.")]
    IntermediaryAgent = PartyTypeCode.IntermediaryAgent, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Application on the terminal which has initiated the transaction.
    /// Encoded/decoded by serializers as "OTRM".
    /// </summary>
    [EnumMember(Value = "OTRM")]
    [IsoId("_tFbCQ4p8EeS3NqNpgnMh2w")]
    [Description(@"Application on the terminal which has initiated the transaction.")]
    OriginatingTerminal = PartyTypeCode.OriginatingTerminal, // same ordinal as derivation source for type conversions
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class PartyType13CodeMetadataExtensions
{
    private static readonly PartyType13CodeDropdownSource _dropdownSource = new PartyType13CodeDropdownSource();
    
    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static IPartyType13CodeDropdownRow GetMetadata(this PartyType13Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


