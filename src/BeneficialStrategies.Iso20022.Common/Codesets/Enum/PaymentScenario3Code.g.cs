//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for PaymentScenario3Code.  ISO2002 ID# _utCzoHYkEei7x9Ux0Cio1w.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Describes the payment scenario used for a payment transaction.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_utCzoHYkEei7x9Ux0Cio1w")]
[Description(@"Describes the payment scenario used for a payment transaction.")]
[DerivedFrom(typeof(PaymentScenarioCode))]
public enum PaymentScenario3Code
{
    /// <summary>
    /// Indicates cover payment(s).
    /// Encoded/decoded by serializers as "Cover".
    /// </summary>
    [EnumMember(Value = "COVE")]
    [IsoId("_v4nO4XYkEei7x9Ux0Cio1w")]
    [Description(@"Indicates cover payment(s).")]
    Cover,
    
    /// <summary>
    /// Indicates customer credit transfer(s) without cover.
    /// Encoded/decoded by serializers as "CustomerCreditTransferWithoutCover".
    /// </summary>
    [EnumMember(Value = "CCTW")]
    [IsoId("_wz-q8XYkEei7x9Ux0Cio1w")]
    [Description(@"Indicates customer credit transfer(s) without cover.")]
    CustomerCreditTransferWithoutCover,
    
    /// <summary>
    /// Indicates customer credit transfer(s) with cover.
    /// Encoded/decoded by serializers as "CustomerCreditTransferWithCover".
    /// </summary>
    [EnumMember(Value = "CCTC")]
    [IsoId("_xbZ3UXYkEei7x9Ux0Cio1w")]
    [Description(@"Indicates customer credit transfer(s) with cover.")]
    CustomerCreditTransferWithCover,
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class PaymentScenario3CodeMetadataExtensions
{
    private static readonly PaymentScenario3CodeDropdownSource _dropdownSource = new PaymentScenario3CodeDropdownSource();

    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static IPaymentScenario3CodeDropdownRow GetMetadata(this PaymentScenario3Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


