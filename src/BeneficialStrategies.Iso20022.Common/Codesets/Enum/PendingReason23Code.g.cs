//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for PendingReason23Code.  ISO2002 ID# _AL0OMRnzEeyroI8qKgB7Mg.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Specifies the reason why the instruction has a pending status.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_AL0OMRnzEeyroI8qKgB7Mg")]
[Description(@"Specifies the reason why the instruction has a pending status.")]
[DerivedFrom(typeof(PendingFailingReasonV2Code))]
public enum PendingReason23Code
{
    /// <summary>
    /// Instruction was received after the account servicer's deadline. Processed on best effort basis.
    /// Encoded/decoded by serializers as "AccountServicerDeadlineMissed".
    /// </summary>
    [EnumMember(Value = "ADEA")]
    [IsoId("_AL0OQBnzEeyroI8qKgB7Mg")]
    [Description(@"Instruction was received after the account servicer's deadline. Processed on best effort basis.")]
    AccountServicerDeadlineMissed,
    
    /// <summary>
    /// Other. See Narrative.
    /// Encoded/decoded by serializers as "Other".
    /// </summary>
    [EnumMember(Value = "OTHR")]
    [IsoId("_AL0OORnzEeyroI8qKgB7Mg")]
    [Description(@"Other. See Narrative.")]
    Other,
    
    /// <summary>
    /// Pending receipt of beneficiary owner details.
    /// Encoded/decoded by serializers as "PendingBeneficiaryOwnerDetails".
    /// </summary>
    [EnumMember(Value = "FULL")]
    [IsoId("_AL0ONxnzEeyroI8qKgB7Mg")]
    [Description(@"Pending receipt of beneficiary owner details.")]
    PendingBeneficiaryOwnerDetails,
    
    /// <summary>
    /// Awaiting receipt of adequate certification.
    /// Encoded/decoded by serializers as "MissingCertification".
    /// </summary>
    [EnumMember(Value = "MCER")]
    [IsoId("_AL0ONhnzEeyroI8qKgB7Mg")]
    [Description(@"Awaiting receipt of adequate certification.")]
    MissingCertification,
    
    /// <summary>
    /// Insufficient money in your account.
    /// Encoded/decoded by serializers as "InsufficientMoney".
    /// </summary>
    [EnumMember(Value = "MONY")]
    [IsoId("_AL0OOhnzEeyroI8qKgB7Mg")]
    [Description(@"Insufficient money in your account.")]
    InsufficientMoney,
    
    /// <summary>
    /// Insufficient financial instruments in your account.
    /// Encoded/decoded by serializers as "LackOfSecurities".
    /// </summary>
    [EnumMember(Value = "LACK")]
    [IsoId("_AL0OPhnzEeyroI8qKgB7Mg")]
    [Description(@"Insufficient financial instruments in your account.")]
    LackOfSecurities,
    
    /// <summary>
    /// Instruction was received after market deadline.
    /// Encoded/decoded by serializers as "MarketDeadlineMissed".
    /// </summary>
    [EnumMember(Value = "LATE")]
    [IsoId("_AL0ONBnzEeyroI8qKgB7Mg")]
    [Description(@"Instruction was received after market deadline.")]
    MarketDeadlineMissed,
    
    /// <summary>
    /// Quantity of financial instruments does not match.
    /// Encoded/decoded by serializers as "QuantityDisagreement".
    /// </summary>
    [EnumMember(Value = "DQUA")]
    [IsoId("_AL0OQRnzEeyroI8qKgB7Mg")]
    [Description(@"Quantity of financial instruments does not match.")]
    QuantityDisagreement,
    
    /// <summary>
    /// The instruction is pending receipt of securities, for example, from a purchase or loan.
    /// Encoded/decoded by serializers as "PendingReceipt".
    /// </summary>
    [EnumMember(Value = "PENR")]
    [IsoId("_AL0OMhnzEeyroI8qKgB7Mg")]
    [Description(@"The instruction is pending receipt of securities, for example, from a purchase or loan.")]
    PendingReceipt,
    
    /// <summary>
    /// Certificate number error.
    /// Encoded/decoded by serializers as "WrongCertificatesNumbers".
    /// </summary>
    [EnumMember(Value = "CERT")]
    [IsoId("_AL0OPRnzEeyroI8qKgB7Mg")]
    [Description(@"Certificate number error.")]
    WrongCertificatesNumbers,
    
    /// <summary>
    /// Unrecognised or invalid instructed cash amount.
    /// Encoded/decoded by serializers as "DisagreementOnCashAmount".
    /// </summary>
    [EnumMember(Value = "DQCS")]
    [IsoId("_AL0OOBnzEeyroI8qKgB7Mg")]
    [Description(@"Unrecognised or invalid instructed cash amount.")]
    DisagreementOnCashAmount,
    
    /// <summary>
    /// Tax rate provided is incorrect. It falls outside the acceptable values for that investment country.
    /// Encoded/decoded by serializers as "IncorrectTaxRate".
    /// </summary>
    [EnumMember(Value = "ITAX")]
    [IsoId("_AL0OOxnzEeyroI8qKgB7Mg")]
    [Description(@"Tax rate provided is incorrect. It falls outside the acceptable values for that investment country.")]
    IncorrectTaxRate,
    
    /// <summary>
    /// Tax rate is not consistent with the documentation in place.
    /// Encoded/decoded by serializers as "InconsistentTaxRate".
    /// </summary>
    [EnumMember(Value = "NTAX")]
    [IsoId("_AL0OMxnzEeyroI8qKgB7Mg")]
    [Description(@"Tax rate is not consistent with the documentation in place.")]
    InconsistentTaxRate,
    
    /// <summary>
    /// Tax rate is missing.
    /// Encoded/decoded by serializers as "MissingTaxRate".
    /// </summary>
    [EnumMember(Value = "MTAX")]
    [IsoId("_AL0OPxnzEeyroI8qKgB7Mg")]
    [Description(@"Tax rate is missing.")]
    MissingTaxRate,
    
    /// <summary>
    /// System is not available. Instruction is sent outside of business hours.
    /// Encoded/decoded by serializers as "SystemNotAvailable".
    /// </summary>
    [EnumMember(Value = "SNAV")]
    [IsoId("_AL0ONRnzEeyroI8qKgB7Mg")]
    [Description(@"System is not available. Instruction is sent outside of business hours.")]
    SystemNotAvailable,
    
    /// <summary>
    /// Instruction is submitted before instruction start date.
    /// Encoded/decoded by serializers as "BeforeInstructionPeriod".
    /// </summary>
    [EnumMember(Value = "BSTR")]
    [IsoId("_AL0OPBnzEeyroI8qKgB7Mg")]
    [Description(@"Instruction is submitted before instruction start date.")]
    BeforeInstructionPeriod,
    
    /// <summary>
    /// Required paperwork is invalid, incomplete or missing.
    /// Encoded/decoded by serializers as "InvalidPaperwork".
    /// </summary>
    [EnumMember(Value = "IPAW")]
    [IsoId("_FtREgRnzEeyroI8qKgB7Mg")]
    [Description(@"Required paperwork is invalid, incomplete or missing.")]
    InvalidPaperwork,
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class PendingReason23CodeMetadataExtensions
{
    private static readonly PendingReason23CodeDropdownSource _dropdownSource = new PendingReason23CodeDropdownSource();

    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static IPendingReason23CodeDropdownRow GetMetadata(this PendingReason23Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


