//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for ProcessedStatus6Code.  ISO2002 ID# _aKxI4tp-Ed-ak6NoX_4Aeg_983077435.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Specifies the processing status of a deactivation instruction.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_aKxI4tp-Ed-ak6NoX_4Aeg_983077435")]
[Description(@"Specifies the processing status of a deactivation instruction.")]
[DerivedFrom(typeof(CorporateActionProcessedStatusCode))]
public enum ProcessedStatus6Code
{
    /// <summary>
    /// The instruction/request has been received.
    /// Encoded/decoded by serializers as "Received".
    /// </summary>
    [EnumMember(Value = "RECE")]
    [IsoId("_aKxI49p-Ed-ak6NoX_4Aeg_-1149003943")]
    [Description(@"The instruction/request has been received.")]
    Received,
    
    /// <summary>
    /// Awaiting the deactivation date.
    /// Encoded/decoded by serializers as "WaitingDeactivationDate".
    /// </summary>
    [EnumMember(Value = "DEAC")]
    [IsoId("_aKxI5Np-Ed-ak6NoX_4Aeg_-1149003942")]
    [Description(@"Awaiting the deactivation date.")]
    WaitingDeactivationDate,
    
    /// <summary>
    /// The request has been completed.
    /// Encoded/decoded by serializers as "Completed".
    /// </summary>
    [EnumMember(Value = "COMP")]
    [IsoId("_aKxI5dp-Ed-ak6NoX_4Aeg_-1149003664")]
    [Description(@"The request has been completed.")]
    Completed,
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class ProcessedStatus6CodeMetadataExtensions
{
    private static readonly ProcessedStatus6CodeDropdownSource _dropdownSource = new ProcessedStatus6CodeDropdownSource();

    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static IProcessedStatus6CodeDropdownRow GetMetadata(this ProcessedStatus6Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


