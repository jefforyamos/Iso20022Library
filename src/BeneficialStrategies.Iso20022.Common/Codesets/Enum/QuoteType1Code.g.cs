//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for QuoteType1Code.  ISO2002 ID# _ZY2jwtp-Ed-ak6NoX_4Aeg_2060710435.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Identifies the type of quote. Can be either an indicative, a tradeable or a restricted tradeable quote.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_ZY2jwtp-Ed-ak6NoX_4Aeg_2060710435")]
[Description(@"Identifies the type of quote. Can be either an indicative, a tradeable or a restricted tradeable quote.")]
[DerivedFrom(typeof(QuoteTypeCode))]
public enum QuoteType1Code
{
    /// <summary>
    /// ??
    /// Encoded/decoded by serializers as "Indicative".
    /// </summary>
    [EnumMember(Value = "")]
    [IsoId("_ZY2jw9p-Ed-ak6NoX_4Aeg_2117046401")]
    [Description(@"??")]
    Indicative,
    
    /// <summary>
    /// ??
    /// Encoded/decoded by serializers as "Tradeable".
    /// </summary>
    [EnumMember(Value = "")]
    [IsoId("_ZY2jxNp-Ed-ak6NoX_4Aeg_2117046443")]
    [Description(@"??")]
    Tradeable,
    
    /// <summary>
    /// ??
    /// Encoded/decoded by serializers as "RestrictedTradeable".
    /// </summary>
    [EnumMember(Value = "")]
    [IsoId("_ZY2jxdp-Ed-ak6NoX_4Aeg_2117046678")]
    [Description(@"??")]
    RestrictedTradeable,
    
    /// <summary>
    /// ??
    /// Encoded/decoded by serializers as "Counter".
    /// </summary>
    [EnumMember(Value = "")]
    [IsoId("_ZY2jxtp-Ed-ak6NoX_4Aeg_2117046713")]
    [Description(@"??")]
    Counter,
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class QuoteType1CodeMetadataExtensions
{
    private static readonly QuoteType1CodeDropdownSource _dropdownSource = new QuoteType1CodeDropdownSource();

    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static IQuoteType1CodeDropdownRow GetMetadata(this QuoteType1Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


