//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for ReconciliationCode.  ISO2002 ID# _l44H4ISGEeW47-F5RGn37Q.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Specifies the process type used for the trade repository reconciliation.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_l44H4ISGEeW47-F5RGn37Q")]
[Description(@"Specifies the process type used for the trade repository reconciliation.")]
public enum ReconciliationCode
{
    /// <summary>
    /// Trade was not required to be submitted for reconciliation.
    /// Encoded/decoded by serializers as "NORE".
    /// </summary>
    [EnumMember(Value = "NORE")]
    [IsoId("_yTDwoISGEeW47-F5RGn37Q")]
    [Description(@"Trade was not required to be submitted for reconciliation.")]
    NotSubmittedToReconciliation,
    
    /// <summary>
    /// Trade repository has one side of the trade, knows that the other side is EEA counterparty and does not know which TR holds the other side of the trade.
    /// Encoded/decoded by serializers as "SSUN".
    /// </summary>
    [EnumMember(Value = "SSUN")]
    [IsoId("_8HHrsISGEeW47-F5RGn37Q")]
    [Description(@"Trade repository has one side of the trade, knows that the other side is EEA counterparty and does not know which TR holds the other side of the trade.")]
    SingleSidedEEAUnpaired,
    
    /// <summary>
    /// Trade repository has one side of the trade, knows which trade repository holds the other side of the trade, and either has already performed comparison of the reports, or is in the process of doing so.
    /// Encoded/decoded by serializers as "SSPA".
    /// </summary>
    [EnumMember(Value = "SSPA")]
    [IsoId("_NV0zYISHEeW47-F5RGn37Q")]
    [Description(@"Trade repository has one side of the trade, knows which trade repository holds the other side of the trade, and either has already performed comparison of the reports, or is in the process of doing so.")]
    SingleSidedEEAPaired,
    
    /// <summary>
    /// Trade repository has one side of the trade, knows which trade repository holds the other side of the trade, has already performed the comparison of the reports, and the result has been successful according to the specification of the inter-TR reconciliation process.
    /// Encoded/decoded by serializers as "SSMA".
    /// </summary>
    [EnumMember(Value = "SSMA")]
    [IsoId("_YAXDcISHEeW47-F5RGn37Q")]
    [Description(@"Trade repository has one side of the trade, knows which trade repository holds the other side of the trade, has already performed the comparison of the reports, and the result has been successful according to the specification of the inter-TR reconciliation process.")]
    SingleSidedEEAMatched,
    
    /// <summary>
    /// Trade repository has both sides of the trade reported but not all fields match.
    /// Encoded/decoded by serializers as "DSNM".
    /// </summary>
    [EnumMember(Value = "DSNM")]
    [IsoId("_dWNt0ISHEeW47-F5RGn37Q")]
    [Description(@"Trade repository has both sides of the trade reported but not all fields match.")]
    DualSidedNonMatched,
    
    /// <summary>
    /// Trade repository has both sides of the trade reported and all fields match.
    /// Encoded/decoded by serializers as "DSMA".
    /// </summary>
    [EnumMember(Value = "DSMA")]
    [IsoId("_jJ-cMISHEeW47-F5RGn37Q")]
    [Description(@"Trade repository has both sides of the trade reported and all fields match.")]
    DualSidedMatched,
    
    /// <summary>
    /// Trade repository has one side of the trade and knows that the other side does not have a reporting obligation.
    /// Encoded/decoded by serializers as "SSNE".
    /// </summary>
    [EnumMember(Value = "SSNE")]
    [IsoId("_xF8AwISHEeW47-F5RGn37Q")]
    [Description(@"Trade repository has one side of the trade and knows that the other side does not have a reporting obligation.")]
    SingleSidedNonEEA,
    
    /// <summary>
    /// Trade repository has one side of the trade, knows which trade repository holds the other side of the trade, has already performed the comparison of the reports, but fields are valuation reconciled only.
    /// Encoded/decoded by serializers as "SPRV".
    /// </summary>
    [EnumMember(Value = "SPRV")]
    [IsoId("_RbzzcE_7Ee2NHLtPG1y0Sw")]
    [Description(@"Trade repository has one side of the trade, knows which trade repository holds the other side of the trade, has already performed the comparison of the reports, but fields are valuation reconciled only.")]
    SingleSidedEEAPartiallyReconciledValuationReconciliationOnly,
    
    /// <summary>
    /// Trade repository has both sides of the trade reported but fields are valuation reconciled only.
    /// Encoded/decoded by serializers as "DPRV".
    /// </summary>
    [EnumMember(Value = "DPRV")]
    [IsoId("_4yoBwE_7Ee2NHLtPG1y0Sw")]
    [Description(@"Trade repository has both sides of the trade reported but fields are valuation reconciled only.")]
    DualSidedEEAPartiallyReconciledValuationReconciliationOnly,
    
    /// <summary>
    /// Trade repository has both sides of the trade reported but fields are not valuation reconciled.
    /// Encoded/decoded by serializers as "DPRW".
    /// </summary>
    [EnumMember(Value = "DPRW")]
    [IsoId("_9HN7cFBTEe2v8Nk6ybN7jA")]
    [Description(@"Trade repository has both sides of the trade reported but fields are not valuation reconciled.")]
    DualSidedEEAPartiallyReconciledNoValuationReconciliation,
    
    /// <summary>
    /// Trade repository has one side of the trade, knows which trade repository holds the other side of the trade, has already performed the comparison of the reports, but fields are not valuation reconciled.
    /// Encoded/decoded by serializers as "SPRW".
    /// </summary>
    [EnumMember(Value = "SPRW")]
    [IsoId("_UNq5oFBUEe2v8Nk6ybN7jA")]
    [Description(@"Trade repository has one side of the trade, knows which trade repository holds the other side of the trade, has already performed the comparison of the reports, but fields are not valuation reconciled.")]
    SingleSidedEEAPartiallyReconciledNoValuationReconciliation,
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class ReconciliationCodeMetadataExtensions
{
    private static readonly ReconciliationCodeDropdownSource _dropdownSource = new ReconciliationCodeDropdownSource();

    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static IReconciliationCodeDropdownRow GetMetadata(this ReconciliationCode code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


