//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for RegulatoryTradingCapacityCode.  ISO2002 ID# _CeQmoO8bEeSLA89yUYsVSw.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20022.Codesets;

/// <summary>
/// Specifies the regulatory trading capacity.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_CeQmoO8bEeSLA89yUYsVSw")]
[Description(@"Specifies the regulatory trading capacity.")]
[Derivations(typeof(RegulatoryTradingCapacity1Code))]
public enum RegulatoryTradingCapacityCode
{
    /// <summary>
    /// Transaction was carried out as a deal under own account.
    /// Encoded/decoded by serializers as "DEAL".
    /// </summary>
    [EnumMember(Value = "DEAL")]
    [IsoId("_P5TPcO8bEeSLA89yUYsVSw")]
    [Description(@"Transaction was carried out as a deal under own account.")]
    DealOnOwnAccount,
    
    /// <summary>
    /// Transaction was carried out as a matched principal trading.
    /// Encoded/decoded by serializers as "MTCH".
    /// </summary>
    [EnumMember(Value = "MTCH")]
    [IsoId("_ktFAYO8bEeSLA89yUYsVSw")]
    [Description(@"Transaction was carried out as a matched principal trading.")]
    MatchedPrincipal,
    
    /// <summary>
    /// Transaction was carried out as an agent.
    /// Encoded/decoded by serializers as "AOTC".
    /// </summary>
    [EnumMember(Value = "AOTC")]
    [IsoId("_wXAQ4O8bEeSLA89yUYsVSw")]
    [Description(@"Transaction was carried out as an agent.")]
    AnyOtherCapacity,
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class RegulatoryTradingCapacityCodeMetadataExtensions
{
    private static readonly RegulatoryTradingCapacityCodeDropdownSource _dropdownSource = new RegulatoryTradingCapacityCodeDropdownSource();
    
    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static IRegulatoryTradingCapacityCodeDropdownRow GetMetadata(this RegulatoryTradingCapacityCode code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


