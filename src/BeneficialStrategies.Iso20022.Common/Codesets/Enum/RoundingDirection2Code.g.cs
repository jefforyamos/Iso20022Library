//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for RoundingDirection2Code.  ISO2002 ID# _Y-LZ8dp-Ed-ak6NoX_4Aeg_114226731.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Specifies the rounding direction applied to nearest unit.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_Y-LZ8dp-Ed-ak6NoX_4Aeg_114226731")]
[Description(@"Specifies the rounding direction applied to nearest unit.")]
[DerivedFrom(typeof(RoundingDirectionCode))]
public enum RoundingDirection2Code
{
    /// <summary>
    /// Round up to the nearest whole number.
    /// Encoded/decoded by serializers as "RDUP".
    /// </summary>
    [EnumMember(Value = "RDUP")]
    [IsoId("_Y-LZ8tp-Ed-ak6NoX_4Aeg_498412566")]
    [Description(@"Round up to the nearest whole number.")]
    RoundUp = RoundingDirectionCode.RoundUp, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Round down to the nearest whole number.
    /// Encoded/decoded by serializers as "RDWN".
    /// </summary>
    [EnumMember(Value = "RDWN")]
    [IsoId("_Y-LZ89p-Ed-ak6NoX_4Aeg_498413939")]
    [Description(@"Round down to the nearest whole number.")]
    RoundDown = RoundingDirectionCode.RoundDown, // same ordinal as derivation source for type conversions
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class RoundingDirection2CodeMetadataExtensions
{
    private static readonly RoundingDirection2CodeDropdownSource _dropdownSource = new RoundingDirection2CodeDropdownSource();
    
    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static IRoundingDirection2CodeDropdownRow GetMetadata(this RoundingDirection2Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


