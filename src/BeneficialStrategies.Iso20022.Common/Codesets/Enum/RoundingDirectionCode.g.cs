//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for RoundingDirectionCode.  ISO2002 ID# _Y-LZ9Np-Ed-ak6NoX_4Aeg_404618713.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Specifies the rounding direction.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_Y-LZ9Np-Ed-ak6NoX_4Aeg_404618713")]
[Description(@"Specifies the rounding direction.")]
[Derivations(typeof(RoundingDirection1Code),typeof(RoundingDirection2Code))]
public enum RoundingDirectionCode
{
    /// <summary>
    /// Pre-allocate shares only if fully dealt.
    /// Encoded/decoded by serializers as "FULL".
    /// </summary>
    [EnumMember(Value = "FULL")]
    [IsoId("_Y-LZ9dp-Ed-ak6NoX_4Aeg_1751583430")]
    [Description(@"Pre-allocate shares only if fully dealt.")]
    Full,
    
    /// <summary>
    /// No fractional shares are allowed.
    /// Encoded/decoded by serializers as "NOFR".
    /// </summary>
    [EnumMember(Value = "NOFR")]
    [IsoId("_Y-LZ9tp-Ed-ak6NoX_4Aeg_1751583431")]
    [Description(@"No fractional shares are allowed.")]
    NoFraction,
    
    /// <summary>
    /// In case of a partial fill, pro-rate the allocations.
    /// Encoded/decoded by serializers as "PROR".
    /// </summary>
    [EnumMember(Value = "PROR")]
    [IsoId("_Y-LZ99p-Ed-ak6NoX_4Aeg_1751583432")]
    [Description(@"In case of a partial fill, pro-rate the allocations.")]
    ProRate,
    
    /// <summary>
    /// Round up to the nearest whole number.
    /// Encoded/decoded by serializers as "RDUP".
    /// </summary>
    [EnumMember(Value = "RDUP")]
    [IsoId("_Y-LZ-Np-Ed-ak6NoX_4Aeg_1751583433")]
    [Description(@"Round up to the nearest whole number.")]
    RoundUp,
    
    /// <summary>
    /// Round down to the nearest whole number.
    /// Encoded/decoded by serializers as "RDWN".
    /// </summary>
    [EnumMember(Value = "RDWN")]
    [IsoId("_Y-Uj4Np-Ed-ak6NoX_4Aeg_1751583434")]
    [Description(@"Round down to the nearest whole number.")]
    RoundDown,
    
    /// <summary>
    /// Round up or down to the nearest whole number.
    /// Encoded/decoded by serializers as "STAN".
    /// </summary>
    [EnumMember(Value = "STAN")]
    [IsoId("_Y-Uj4dp-Ed-ak6NoX_4Aeg_2066033829")]
    [Description(@"Round up or down to the nearest whole number.")]
    RoundToNearest,
    
    /// <summary>
    /// Do not round.
    /// Encoded/decoded by serializers as "DIST".
    /// </summary>
    [EnumMember(Value = "DIST")]
    [IsoId("_Y-Uj4tp-Ed-ak6NoX_4Aeg_2066033830")]
    [Description(@"Do not round.")]
    IssueFraction,
    
    /// <summary>
    /// Do not pro-rate; discuss first.
    /// Encoded/decoded by serializers as "TALK".
    /// </summary>
    [EnumMember(Value = "TALK")]
    [IsoId("_Y-Uj49p-Ed-ak6NoX_4Aeg_-1000435685")]
    [Description(@"Do not pro-rate; discuss first.")]
    DiscussFirst,
    
    /// <summary>
    /// Pre-allocate according to the amounts shown in a linked allocation instruction.
    /// Encoded/decoded by serializers as "SPEC".
    /// </summary>
    [EnumMember(Value = "SPEC")]
    [IsoId("_Y-Uj5Np-Ed-ak6NoX_4Aeg_979483854")]
    [Description(@"Pre-allocate according to the amounts shown in a linked allocation instruction.")]
    Specific,
    
    /// <summary>
    /// Indicates that if the fraction is greater than or equal to 0.5 of the value should be rounded up; otherwise rounded down.
    /// Encoded/decoded by serializers as "SSTD".
    /// </summary>
    [EnumMember(Value = "SSTD")]
    [IsoId("_Y-Uj5dp-Ed-ak6NoX_4Aeg_-1928673858")]
    [Description(@"Indicates that if the fraction is greater than or equal to 0.5 of the value should be rounded up; otherwise rounded down.")]
    Standard,
    
    /// <summary>
    /// Indicates that fractional value should be retained; no rounding.
    /// Encoded/decoded by serializers as "RETA".
    /// </summary>
    [EnumMember(Value = "RETA")]
    [IsoId("_Y-Uj5tp-Ed-ak6NoX_4Aeg_-1928673766")]
    [Description(@"Indicates that fractional value should be retained; no rounding.")]
    Retain,
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class RoundingDirectionCodeMetadataExtensions
{
    private static readonly RoundingDirectionCodeDropdownSource _dropdownSource = new RoundingDirectionCodeDropdownSource();
    
    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static IRoundingDirectionCodeDropdownRow GetMetadata(this RoundingDirectionCode code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


