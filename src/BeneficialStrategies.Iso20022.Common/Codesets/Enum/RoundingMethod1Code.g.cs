//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for RoundingMethod1Code.  ISO2002 ID# _Yf7Xstp-Ed-ak6NoX_4Aeg_385330264.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Defines how the rounding amount was applied in the calculation. For example, should the amount of collateral required be rounded up, down, to the closer integral multiple specified or not rounded.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_Yf7Xstp-Ed-ak6NoX_4Aeg_385330264")]
[Description(@"Defines how the rounding amount was applied in the calculation. For example, should the amount of collateral required be rounded up, down, to the closer integral multiple specified or not rounded.")]
[DerivedFrom(typeof(RoundingMethodCode))]
public enum RoundingMethod1Code
{
    /// <summary>
    /// Rounds the amount down.
    /// Encoded/decoded by serializers as "DRDW".
    /// </summary>
    [EnumMember(Value = "DRDW")]
    [IsoId("_Yf7Xs9p-Ed-ak6NoX_4Aeg_857438224")]
    [Description(@"Rounds the amount down.")]
    Down = RoundingMethodCode.Down, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Rounds the amount up.
    /// Encoded/decoded by serializers as "DRUP".
    /// </summary>
    [EnumMember(Value = "DRUP")]
    [IsoId("_Yf7XtNp-Ed-ak6NoX_4Aeg_-1995269424")]
    [Description(@"Rounds the amount up.")]
    Up = RoundingMethodCode.Up, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Do not round.
    /// Encoded/decoded by serializers as "NONE".
    /// </summary>
    [EnumMember(Value = "NONE")]
    [IsoId("_Yf7Xtdp-Ed-ak6NoX_4Aeg_718047814")]
    [Description(@"Do not round.")]
    None = RoundingMethodCode.None, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Rounds the amount to the closer integral multiple specified.
    /// Encoded/decoded by serializers as "CLSR".
    /// </summary>
    [EnumMember(Value = "CLSR")]
    [IsoId("_Yf7Xttp-Ed-ak6NoX_4Aeg_-1257761254")]
    [Description(@"Rounds the amount to the closer integral multiple specified.")]
    Closer = RoundingMethodCode.Closer, // same ordinal as derivation source for type conversions
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class RoundingMethod1CodeMetadataExtensions
{
    private static readonly RoundingMethod1CodeDropdownSource _dropdownSource = new RoundingMethod1CodeDropdownSource();
    
    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static IRoundingMethod1CodeDropdownRow GetMetadata(this RoundingMethod1Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


