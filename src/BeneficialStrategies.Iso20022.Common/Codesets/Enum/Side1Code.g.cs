//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for Side1Code.  ISO2002 ID# _ZO3hUNp-Ed-ak6NoX_4Aeg_336258183.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Indicates the side of the quote request, from the buy-side perspective.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_ZO3hUNp-Ed-ak6NoX_4Aeg_336258183")]
[Description(@"Indicates the side of the quote request, from the buy-side perspective.")]
[DerivedFrom(typeof(SideCode))]
public enum Side1Code
{
    /// <summary>
    /// Order is buy driven.
    /// Encoded/decoded by serializers as "Buy".
    /// </summary>
    [EnumMember(Value = "BUYI")]
    [IsoId("_ZO3hUdp-Ed-ak6NoX_4Aeg_336258192")]
    [Description(@"Order is buy driven.")]
    Buy,
    
    /// <summary>
    /// Order is sell driven.
    /// Encoded/decoded by serializers as "Sell".
    /// </summary>
    [EnumMember(Value = "SELL")]
    [IsoId("_ZO3hUtp-Ed-ak6NoX_4Aeg_336258193")]
    [Description(@"Order is sell driven.")]
    Sell,
    
    /// <summary>
    /// Indicates that the side refers to both buys and sells.
    /// Encoded/decoded by serializers as "TwoSided".
    /// </summary>
    [EnumMember(Value = "TWOS")]
    [IsoId("_ZO3hU9p-Ed-ak6NoX_4Aeg_336258194")]
    [Description(@"Indicates that the side refers to both buys and sells.")]
    TwoSided,
    
    /// <summary>
    /// A round-lot market order to buy minus is an order to buy a stated amount of a stock provided that its price is: |- not higher than the last sale if the last sale was a minus or zero minus tick and|- not higher than the last sale minus the minimum fractional change in the stock if the last sale was a plus or zero plus tick.|A limit price order to buy minus also states the highest price at which it can be executed.
    /// Encoded/decoded by serializers as "BuyMinus".
    /// </summary>
    [EnumMember(Value = "BUMI")]
    [IsoId("_ZO3hVNp-Ed-ak6NoX_4Aeg_953165368")]
    [Description(@"A round-lot market order to buy minus is an order to buy a stated amount of a stock provided that its price is: |- not higher than the last sale if the last sale was a minus or zero minus tick and|- not higher than the last sale minus the minimum fractional change in the stock if the last sale was a plus or zero plus tick.|A limit price order to buy minus also states the highest price at which it can be executed.")]
    BuyMinus,
    
    /// <summary>
    /// A round-lot market order to sell plus is an order to sell a stated amount of a stock provided that its price is: |- not lower than the last sale if the last sale was a plus or zero plus tick and|- not lower than the last sale minus the minimum fractional change in the stock if the last sale was a minus or zero minus tick.|A limit-price order to sell plus also states the lowest price at which it can be executed.
    /// Encoded/decoded by serializers as "SellPlus".
    /// </summary>
    [EnumMember(Value = "SEPL")]
    [IsoId("_ZO3hVdp-Ed-ak6NoX_4Aeg_953165771")]
    [Description(@"A round-lot market order to sell plus is an order to sell a stated amount of a stock provided that its price is: |- not lower than the last sale if the last sale was a plus or zero plus tick and|- not lower than the last sale minus the minimum fractional change in the stock if the last sale was a minus or zero minus tick.|A limit-price order to sell plus also states the lowest price at which it can be executed.")]
    SellPlus,
    
    /// <summary>
    /// An order to sell a security that the seller does not own; a sale effected by delivering a security borrowed by, or for the account of, the seller. Can only be executed on a plus or zero plus tick.
    /// Encoded/decoded by serializers as "SellShort".
    /// </summary>
    [EnumMember(Value = "SESH")]
    [IsoId("_ZO3hVtp-Ed-ak6NoX_4Aeg_953165891")]
    [Description(@"An order to sell a security that the seller does not own; a sale effected by delivering a security borrowed by, or for the account of, the seller. Can only be executed on a plus or zero plus tick.")]
    SellShort,
    
    /// <summary>
    /// Short sale exempt from short-sale rules.
    /// Encoded/decoded by serializers as "SellShortExempt".
    /// </summary>
    [EnumMember(Value = "SSEX")]
    [IsoId("_ZO3hV9p-Ed-ak6NoX_4Aeg_953166228")]
    [Description(@"Short sale exempt from short-sale rules.")]
    SellShortExempt,
    
    /// <summary>
    /// Identifies an order for which a broker wishes to take the other side and cross with the client.
    /// Encoded/decoded by serializers as "Cross".
    /// </summary>
    [EnumMember(Value = "CROS")]
    [IsoId("_ZO3hWNp-Ed-ak6NoX_4Aeg_2013366401")]
    [Description(@"Identifies an order for which a broker wishes to take the other side and cross with the client.")]
    Cross,
    
    /// <summary>
    /// Identifies a type of order for which a broker wants to cross with the client in the case a client wants to establish a short position, and sends a Sell Short order to the broker. Many exchanges have tick rules needing to be enforced, and the order getting converted from Sell Short to Cross (instead of Cross Short) could result in an illegal short sell.
    /// Encoded/decoded by serializers as "CrossShort".
    /// </summary>
    [EnumMember(Value = "CRSH")]
    [IsoId("_ZO3hWdp-Ed-ak6NoX_4Aeg_2013366805")]
    [Description(@"Identifies a type of order for which a broker wants to cross with the client in the case a client wants to establish a short position, and sends a Sell Short order to the broker. Many exchanges have tick rules needing to be enforced, and the order getting converted from Sell Short to Cross (instead of Cross Short) could result in an illegal short sell.")]
    CrossShort,
    
    /// <summary>
    /// Identifies a type of order for which a broker wants to cross with the client in the case a client wants to establish a short position and is exempt from the uptick restriction. Used as audit trail on exchanges.
    /// Encoded/decoded by serializers as "CrossShortExempt".
    /// </summary>
    [EnumMember(Value = "CSHE")]
    [IsoId("_ZPArQNp-Ed-ak6NoX_4Aeg_2013366943")]
    [Description(@"Identifies a type of order for which a broker wants to cross with the client in the case a client wants to establish a short position and is exempt from the uptick restriction. Used as audit trail on exchanges.")]
    CrossShortExempt,
    
    /// <summary>
    /// Indicates, in the case of a multileg instrument,that the sides of the legs are the same as defined at the creation of the multileg instrument.
    /// Encoded/decoded by serializers as "AsDefined".
    /// </summary>
    [EnumMember(Value = "DEFI")]
    [IsoId("_ZPArQdp-Ed-ak6NoX_4Aeg_2013367073")]
    [Description(@"Indicates, in the case of a multileg instrument,that the sides of the legs are the same as defined at the creation of the multileg instrument.")]
    AsDefined,
    
    /// <summary>
    /// Indicates, in the case of a multileg instrument,that the sides of the legs are the opposite of their definition at the creation of the multileg instrument.
    /// Encoded/decoded by serializers as "Opposite".
    /// </summary>
    [EnumMember(Value = "OPPO")]
    [IsoId("_ZPArQtp-Ed-ak6NoX_4Aeg_2013367427")]
    [Description(@"Indicates, in the case of a multileg instrument,that the sides of the legs are the opposite of their definition at the creation of the multileg instrument.")]
    Opposite,
    
    /// <summary>
    /// The side of the indication of interest is not disclosed.
    /// Encoded/decoded by serializers as "Undisclosed".
    /// </summary>
    [EnumMember(Value = "UNDI")]
    [IsoId("_ZPArQ9p-Ed-ak6NoX_4Aeg_2013367778")]
    [Description(@"The side of the indication of interest is not disclosed.")]
    Undisclosed,
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class Side1CodeMetadataExtensions
{
    private static readonly Side1CodeDropdownSource _dropdownSource = new Side1CodeDropdownSource();

    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static ISide1CodeDropdownRow GetMetadata(this Side1Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


