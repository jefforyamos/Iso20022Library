//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for StoredValueAccountTypeCode.  ISO2002 ID# _gjAHYNtcEeipuvJHTHIw9A.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Type of stored value account.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_gjAHYNtcEeipuvJHTHIw9A")]
[Description(@"Type of stored value account.")]
public enum StoredValueAccountTypeCode
{
    /// <summary>
    /// Payment mean issued by retailers or banks as a substitute to a non-monetary gift. Usually, this Stored Value item is used only once.
    /// </summary>
    [EnumMember(Value = "GIFT")]
    [IsoId("_kZ4SUNtcEeipuvJHTHIw9A")]
    [Description(@"Payment mean issued by retailers or banks as a substitute to a non-monetary gift. Usually, this Stored Value item is used only once.")]
    GIFT,
    
    /// <summary>
    /// Stored value instrument used to pay telephone services (e.g. card or identifier).
    /// </summary>
    [EnumMember(Value = "PHON")]
    [IsoId("_oPTrwNtcEeipuvJHTHIw9A")]
    [Description(@"Stored value instrument used to pay telephone services (e.g. card or identifier).")]
    PHON,
    
    /// <summary>
    /// Other non listed stored value instrument.
    /// </summary>
    [EnumMember(Value = "OTHR")]
    [IsoId("_q_yPUNtcEeipuvJHTHIw9A")]
    [Description(@"Other non listed stored value instrument.")]
    OTHR,
    
    /// <summary>
    /// Certificate to be given to a customer. Usually one shot voucher.
    /// </summary>
    [EnumMember(Value = "GCER")]
    [IsoId("_AmJTwNtdEeipuvJHTHIw9A")]
    [Description(@"Certificate to be given to a customer. Usually one shot voucher.")]
    GCER,
    
    /// <summary>
    /// Stored value account hold on the chip of a smart card. 
    /// </summary>
    [EnumMember(Value = "CARD")]
    [IsoId("_C7YFwNtdEeipuvJHTHIw9A")]
    [Description(@"Stored value account hold on the chip of a smart card. ")]
    CARD,
    
    /// <summary>
    /// Voucher that can be used online once or in several times.
    /// </summary>
    [EnumMember(Value = "OLVC")]
    [IsoId("_FytfQNtdEeipuvJHTHIw9A")]
    [Description(@"Voucher that can be used online once or in several times.")]
    OLVC,
    
    /// <summary>
    /// Car wash specific account.
    /// </summary>
    [EnumMember(Value = "CWVC")]
    [IsoId("_IomHQNtdEeipuvJHTHIw9A")]
    [Description(@"Car wash specific account.")]
    CWVC,
    
    /// <summary>
    /// Meal and check voucher for restaurants.
    /// </summary>
    [EnumMember(Value = "MLVC")]
    [IsoId("_LqE7QNtdEeipuvJHTHIw9A")]
    [Description(@"Meal and check voucher for restaurants.")]
    MLVC,
    
    /// <summary>
    /// Prepaid account open with a merchant or big retailers.
    /// </summary>
    [EnumMember(Value = "MERC")]
    [IsoId("_OGLKQNtdEeipuvJHTHIw9A")]
    [Description(@"Prepaid account open with a merchant or big retailers.")]
    MERC,
    
    /// <summary>
    /// Travel prepaid account.
    /// </summary>
    [EnumMember(Value = "TRVL")]
    [IsoId("_RhJcUNtdEeipuvJHTHIw9A")]
    [Description(@"Travel prepaid account.")]
    TRVL,
    
    /// <summary>
    /// Account supporting e-money issued by an electronic money issuer.
    /// </summary>
    [EnumMember(Value = "ELMY")]
    [IsoId("_VKEDwNtdEeipuvJHTHIw9A")]
    [Description(@"Account supporting e-money issued by an electronic money issuer.")]
    ELMY,
    
    /// <summary>
    /// Prepaid account managed by a financial institution for low income customers.
    /// </summary>
    [EnumMember(Value = "BNKA")]
    [IsoId("_hcWp4NtfEeipuvJHTHIw9A")]
    [Description(@"Prepaid account managed by a financial institution for low income customers.")]
    BNKA,
    
    /// <summary>
    /// Specific prepaid account for companies or professionals expenses.
    /// </summary>
    [EnumMember(Value = "CPYA")]
    [IsoId("_lCYVYNtfEeipuvJHTHIw9A")]
    [Description(@"Specific prepaid account for companies or professionals expenses.")]
    CPYA,
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class StoredValueAccountTypeCodeMetadataExtensions
{
    private static readonly StoredValueAccountTypeCodeDropdownSource _dropdownSource = new StoredValueAccountTypeCodeDropdownSource();

    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static IStoredValueAccountTypeCodeDropdownRow GetMetadata(this StoredValueAccountTypeCode code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


