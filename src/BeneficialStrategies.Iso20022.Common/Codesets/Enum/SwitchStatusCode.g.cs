//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for SwitchStatusCode.  ISO2002 ID# _1fAkkBE2EeafpqhYGpTDnw.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Specifies the status of a given account switch.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_1fAkkBE2EeafpqhYGpTDnw")]
[Description(@"Specifies the status of a given account switch.")]
[Derivations(typeof(SwitchStatus1Code))]
// External derivations that should be provided by the proper interface are: 
public enum SwitchStatusCode
{
    /// <summary>
    /// Account switch is terminated. 
    /// 
    /// Usage: Terminated status should be used when the account switch service receives and validates a terminate switch request.
    /// Encoded/decoded by serializers as "TMTN".
    /// </summary>
    [EnumMember(Value = "TMTN")]
    [IsoId("_A8UVYBE3EeafpqhYGpTDnw")]
    [Description(@"Account switch is terminated.   Usage: Terminated status should be used when the account switch service receives and validates a terminate switch request.")]
    Termination,
    
    /// <summary>
    /// Information is requested for the account switch. 
    /// 
    /// Usage: Requested status should be used when the account switch service receives and validates an information request.
    /// Encoded/decoded by serializers as "REQU".
    /// </summary>
    [EnumMember(Value = "REQU")]
    [IsoId("_FQSE8BE3EeafpqhYGpTDnw")]
    [Description(@"Information is requested for the account switch.   Usage: Requested status should be used when the account switch service receives and validates an information request.")]
    Requested,
    
    /// <summary>
    /// Account switch is rejected. 
    /// 
    /// Usage: Rejected status should be used when account switch service receives and validates an information response request rejecting the account switch.
    /// Encoded/decoded by serializers as "REJT".
    /// </summary>
    [EnumMember(Value = "REJT")]
    [IsoId("_JyqrABE3EeafpqhYGpTDnw")]
    [Description(@"Account switch is rejected.   Usage: Rejected status should be used when account switch service receives and validates an information response request rejecting the account switch.")]
    Rejected,
    
    /// <summary>
    /// Redirection ended at the end of the redirection period. 
    /// 
    /// Usage: Indicates the cessation of account redirection by a particular service.
    /// Encoded/decoded by serializers as "REDE".
    /// </summary>
    [EnumMember(Value = "REDE")]
    [IsoId("_MpyCEBE3EeafpqhYGpTDnw")]
    [Description(@"Redirection ended at the end of the redirection period.   Usage: Indicates the cessation of account redirection by a particular service.")]
    RedirectionEnded,
    
    /// <summary>
    /// Request for redirection. 
    /// 
    /// Usage: Redirection status should be used when the account switch service receives and validates the first redirection request.
    /// Encoded/decoded by serializers as "REDT".
    /// </summary>
    [EnumMember(Value = "REDT")]
    [IsoId("_PpO1wBE3EeafpqhYGpTDnw")]
    [Description(@"Request for redirection.   Usage: Redirection status should be used when the account switch service receives and validates the first redirection request.")]
    Redirection,
    
    /// <summary>
    /// Account switch is completed.
    /// 
    /// Usage: Completed status should be used when account switch service receives and validates a notify account switch complete request.
    /// Encoded/decoded by serializers as "COMP".
    /// </summary>
    [EnumMember(Value = "COMP")]
    [IsoId("_R2gloBE3EeafpqhYGpTDnw")]
    [Description(@"Account switch is completed.  Usage: Completed status should be used when account switch service receives and validates a notify account switch complete request.")]
    Completed,
    
    /// <summary>
    /// Balance transfer responded.
    /// 
    /// Usage: Balance transfer responded staus should be used when the account switch service receives and validates an acknowledge balance transfer request.
    /// Encoded/decoded by serializers as "BTRS".
    /// </summary>
    [EnumMember(Value = "BTRS")]
    [IsoId("_Ybv0QBE3EeafpqhYGpTDnw")]
    [Description(@"Balance transfer responded.  Usage: Balance transfer responded staus should be used when the account switch service receives and validates an acknowledge balance transfer request.")]
    BalanceTransferResponse,
    
    /// <summary>
    /// Account balance transfer is requested.
    /// 
    /// Usage: Balance transfer requested status should be used when account switch service receives and validates a request balance transfer request.
    /// Encoded/decoded by serializers as "BTRQ".
    /// </summary>
    [EnumMember(Value = "BTRQ")]
    [IsoId("_cTBn0BE3EeafpqhYGpTDnw")]
    [Description(@"Account balance transfer is requested.  Usage: Balance transfer requested status should be used when account switch service receives and validates a request balance transfer request.")]
    BalanceTransferRequested,
    
    /// <summary>
    /// Account switch is accepted.
    /// 
    /// Usage: Accepted status should be used when account switch service receives and validates an information response request accepting the switch.
    /// Encoded/decoded by serializers as "ACPT".
    /// </summary>
    [EnumMember(Value = "ACPT")]
    [IsoId("_kXGL8BE3EeafpqhYGpTDnw")]
    [Description(@"Account switch is accepted.  Usage: Accepted status should be used when account switch service receives and validates an information response request accepting the switch.")]
    Accepted,
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class SwitchStatusCodeMetadataExtensions
{
    private static readonly SwitchStatusCodeDropdownSource _dropdownSource = new SwitchStatusCodeDropdownSource();

    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static ISwitchStatusCodeDropdownRow GetMetadata(this SwitchStatusCode code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


