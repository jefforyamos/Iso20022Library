//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for TaxType14Code.  ISO2002 ID# _WOfgktp-Ed-ak6NoX_4Aeg_1871984453.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Specifies the type of tax.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_WOfgktp-Ed-ak6NoX_4Aeg_1871984453")]
[Description(@"Specifies the type of tax.")]
[DerivedFrom(typeof(TaxTypeCode))]
public enum TaxType14Code
{
    /// <summary>
    /// Tax is a national tax.
    /// Encoded/decoded by serializers as "NationalTax".
    /// </summary>
    [EnumMember(Value = "NATI")]
    [IsoId("_WOfgk9p-Ed-ak6NoX_4Aeg_1871984484")]
    [Description(@"Tax is a national tax.")]
    NationalTax,
    
    /// <summary>
    /// Tax is on income deducted at source, which the paying agent is legally obliged to deduct from its payments of interest on deposits and other proceeds of a financial instrument.
    /// Encoded/decoded by serializers as "WithholdingTax".
    /// </summary>
    [EnumMember(Value = "WITH")]
    [IsoId("_WOfglNp-Ed-ak6NoX_4Aeg_1871984731")]
    [Description(@"Tax is on income deducted at source, which the paying agent is legally obliged to deduct from its payments of interest on deposits and other proceeds of a financial instrument.")]
    WithholdingTax,
    
    /// <summary>
    /// Tax is on certain documents and transactions.
    /// Encoded/decoded by serializers as "StampDuty".
    /// </summary>
    [EnumMember(Value = "STAM")]
    [IsoId("_WOfgldp-Ed-ak6NoX_4Aeg_1871984763")]
    [Description(@"Tax is on certain documents and transactions.")]
    StampDuty,
    
    /// <summary>
    /// Tax that is levied on goods and services purchased by customers, and is added to the retail price.
    /// Encoded/decoded by serializers as "ConsumptionTax".
    /// </summary>
    [EnumMember(Value = "COAX")]
    [IsoId("_WOfgltp-Ed-ak6NoX_4Aeg_1871984825")]
    [Description(@"Tax that is levied on goods and services purchased by customers, and is added to the retail price.")]
    ConsumptionTax,
    
    /// <summary>
    /// Tax withheld at source in the framework of the European Directive on taxation of savings in the form of interest payments.
    /// Encoded/decoded by serializers as "EUTaxRetention".
    /// </summary>
    [EnumMember(Value = "EUTR")]
    [IsoId("_WOfgl9p-Ed-ak6NoX_4Aeg_1871984854")]
    [Description(@"Tax withheld at source in the framework of the European Directive on taxation of savings in the form of interest payments.")]
    EUTaxRetention,
    
    /// <summary>
    /// Share-related profit. This is a tax specific to the German market. The share-related-profit gives the fund the opportunity to pass on to the institutional investor redeeming fund units certain tax-free income from equity. The calculation method is based on the new Investment Tax Act (Investmentsteuergesetz).
    /// Encoded/decoded by serializers as "Aktiengewinn2".
    /// </summary>
    [EnumMember(Value = "AKT2")]
    [IsoId("_WOfgmNp-Ed-ak6NoX_4Aeg_1871984885")]
    [Description(@"Share-related profit. This is a tax specific to the German market. The share-related-profit gives the fund the opportunity to pass on to the institutional investor redeeming fund units certain tax-free income from equity. The calculation method is based on the new Investment Tax Act (Investmentsteuergesetz).")]
    Aktiengewinn2,
    
    /// <summary>
    /// Zwischengewinn.
    /// Encoded/decoded by serializers as "Zwischengewinn".
    /// </summary>
    [EnumMember(Value = "ZWIS")]
    [IsoId("_WOfgmdp-Ed-ak6NoX_4Aeg_1871984886")]
    [Description(@"Zwischengewinn.")]
    Zwischengewinn,
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class TaxType14CodeMetadataExtensions
{
    private static readonly TaxType14CodeDropdownSource _dropdownSource = new TaxType14CodeDropdownSource();

    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static ITaxType14CodeDropdownRow GetMetadata(this TaxType14Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


