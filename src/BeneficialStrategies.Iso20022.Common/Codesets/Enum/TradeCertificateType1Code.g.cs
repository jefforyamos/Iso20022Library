//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for TradeCertificateType1Code.  ISO2002 ID# _YmCmyNp-Ed-ak6NoX_4Aeg_-427114470.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Specifies the type of trade certificate.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_YmCmyNp-Ed-ak6NoX_4Aeg_-427114470")]
[Description(@"Specifies the type of trade certificate.")]
[DerivedFrom(typeof(TradeCertificateTypeCode))]
public enum TradeCertificateType1Code
{
    /// <summary>
    /// Certificate of analysis.
    /// Encoded/decoded by serializers as "Analysis".
    /// </summary>
    [EnumMember(Value = "ANLY")]
    [IsoId("_YmLwsNp-Ed-ak6NoX_4Aeg_133463751")]
    [Description(@"Certificate of analysis.")]
    Analysis,
    
    /// <summary>
    /// Certificate of quality.
    /// Encoded/decoded by serializers as "Quality".
    /// </summary>
    [EnumMember(Value = "QUAL")]
    [IsoId("_YmLwsdp-Ed-ak6NoX_4Aeg_171327058")]
    [Description(@"Certificate of quality.")]
    Quality,
    
    /// <summary>
    /// Certificate of quantity.
    /// Encoded/decoded by serializers as "Quantity".
    /// </summary>
    [EnumMember(Value = "QUAN")]
    [IsoId("_YmLwstp-Ed-ak6NoX_4Aeg_199955222")]
    [Description(@"Certificate of quantity.")]
    Quantity,
    
    /// <summary>
    /// Certificate of weight.
    /// Encoded/decoded by serializers as "Weight".
    /// </summary>
    [EnumMember(Value = "WEIG")]
    [IsoId("_YmLws9p-Ed-ak6NoX_4Aeg_476088181")]
    [Description(@"Certificate of weight.")]
    Weight,
    
    /// <summary>
    /// Certificate of origin.
    /// Encoded/decoded by serializers as "Origin".
    /// </summary>
    [EnumMember(Value = "ORIG")]
    [IsoId("_YmLwtNp-Ed-ak6NoX_4Aeg_489018208")]
    [Description(@"Certificate of origin.")]
    Origin,
    
    /// <summary>
    /// Certificate of health.
    /// Encoded/decoded by serializers as "Health".
    /// </summary>
    [EnumMember(Value = "HEAL")]
    [IsoId("_YmLwtdp-Ed-ak6NoX_4Aeg_501024056")]
    [Description(@"Certificate of health.")]
    Health,
    
    /// <summary>
    /// Phytosanitary certificate.
    /// Encoded/decoded by serializers as "Phytosanitary".
    /// </summary>
    [EnumMember(Value = "PHYT")]
    [IsoId("_YmLwttp-Ed-ak6NoX_4Aeg_504719603")]
    [Description(@"Phytosanitary certificate.")]
    Phytosanitary,
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class TradeCertificateType1CodeMetadataExtensions
{
    private static readonly TradeCertificateType1CodeDropdownSource _dropdownSource = new TradeCertificateType1CodeDropdownSource();

    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static ITradeCertificateType1CodeDropdownRow GetMetadata(this TradeCertificateType1Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


