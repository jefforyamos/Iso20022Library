//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for TradePosting1Code.  ISO2002 ID# _-fsj16MOEeCojJW5vEuTEQ_-1075208421.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Specifies the trade is maintained as a separate individual position in the clearing account, or not.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_-fsj16MOEeCojJW5vEuTEQ_-1075208421")]
[Description(@"Specifies the trade is maintained as a separate individual position in the clearing account, or not.")]
[DerivedFrom(typeof(TradePostingCode))]
public enum TradePosting1Code
{
    /// <summary>
    /// Trade is maintained as a separate individual position in the clearing account.
    /// Encoded/decoded by serializers as "GROS".
    /// </summary>
    [EnumMember(Value = "GROS")]
    [IsoId("_-fsj2KMOEeCojJW5vEuTEQ_142944546")]
    [Description(@"Trade is maintained as a separate individual position in the clearing account.")]
    Gross = TradePostingCode.Gross, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Trade is maintained as a net position in the clearing account.
    /// Encoded/decoded by serializers as "NETT".
    /// </summary>
    [EnumMember(Value = "NETT")]
    [IsoId("_-fsj2aMOEeCojJW5vEuTEQ_1610093309")]
    [Description(@"Trade is maintained as a net position in the clearing account.")]
    Net = TradePostingCode.Net, // same ordinal as derivation source for type conversions
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class TradePosting1CodeMetadataExtensions
{
    private static readonly TradePosting1CodeDropdownSource _dropdownSource = new TradePosting1CodeDropdownSource();
    
    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static ITradePosting1CodeDropdownRow GetMetadata(this TradePosting1Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


