//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for Trading1MethodCode.  ISO2002 ID# _YqgQAtp-Ed-ak6NoX_4Aeg_-258608744.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Specifies the method used for the negotiation and execution of the trade.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_YqgQAtp-Ed-ak6NoX_4Aeg_-258608744")]
[Description(@"Specifies the method used for the negotiation and execution of the trade.")]
[DerivedFrom(typeof(TradingMethodCode))]
public enum Trading1MethodCode
{
    /// <summary>
    /// Trade executed through an electronic trading system.
    /// Encoded/decoded by serializers as "ELEC".
    /// </summary>
    [EnumMember(Value = "ELEC")]
    [IsoId("_YqgQA9p-Ed-ak6NoX_4Aeg_2750610")]
    [Description(@"Trade executed through an electronic trading system.")]
    Electronic = TradingMethodCode.Electronic, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Trade executed over the phone.
    /// Encoded/decoded by serializers as "PHON".
    /// </summary>
    [EnumMember(Value = "PHON")]
    [IsoId("_YqgQBNp-Ed-ak6NoX_4Aeg_32300524")]
    [Description(@"Trade executed over the phone.")]
    Phone = TradingMethodCode.Phone, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Trade executed through a broker.
    /// Encoded/decoded by serializers as "BROK".
    /// </summary>
    [EnumMember(Value = "BROK")]
    [IsoId("_YqgQBdp-Ed-ak6NoX_4Aeg_48002593")]
    [Description(@"Trade executed through a broker.")]
    Broker = TradingMethodCode.Broker, // same ordinal as derivation source for type conversions
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class Trading1MethodCodeMetadataExtensions
{
    private static readonly Trading1MethodCodeDropdownSource _dropdownSource = new Trading1MethodCodeDropdownSource();
    
    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static ITrading1MethodCodeDropdownRow GetMetadata(this Trading1MethodCode code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


