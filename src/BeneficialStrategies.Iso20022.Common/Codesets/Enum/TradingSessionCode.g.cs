//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for TradingSessionCode.  ISO2002 ID# _YrGs9Np-Ed-ak6NoX_4Aeg_-1913582483.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Indicates the factors that are/were applied in the event of pre-allocation.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_YrGs9Np-Ed-ak6NoX_4Aeg_-1913582483")]
[Description(@"Indicates the factors that are/were applied in the event of pre-allocation.")]
[Derivations(typeof(TradingSession1Code))]
// External derivations that should be provided by the proper interface are: 
public enum TradingSessionCode
{
    /// <summary>
    /// Orders that are traded in regularly occuring auctions: orders are accumulated and executed on basis of defined algorithms.
    /// Encoded/decoded by serializers as "AUCT".
    /// </summary>
    [EnumMember(Value = "AUCT")]
    [IsoId("_YrGs9dp-Ed-ak6NoX_4Aeg_-1134133596")]
    [Description(@"Orders that are traded in regularly occuring auctions: orders are accumulated and executed on basis of defined algorithms.")]
    Auction,
    
    /// <summary>
    /// Trading process where orders are executed directly against each others as they hit the marketplace.
    /// Encoded/decoded by serializers as "CONT".
    /// </summary>
    [EnumMember(Value = "CONT")]
    [IsoId("_YrGs9tp-Ed-ak6NoX_4Aeg_-610494837")]
    [Description(@"Trading process where orders are executed directly against each others as they hit the marketplace.")]
    Continuous,
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class TradingSessionCodeMetadataExtensions
{
    private static readonly TradingSessionCodeDropdownSource _dropdownSource = new TradingSessionCodeDropdownSource();

    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static ITradingSessionCodeDropdownRow GetMetadata(this TradingSessionCode code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


