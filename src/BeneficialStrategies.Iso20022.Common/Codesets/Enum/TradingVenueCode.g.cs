//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for TradingVenueCode.  ISO2002 ID# _8UfE0F0fEeWErPfQ7BYx8A.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Specifies the type of a trading venue.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_8UfE0F0fEeWErPfQ7BYx8A")]
[Description(@"Specifies the type of a trading venue.")]
public enum TradingVenueCode
{
    /// <summary>
    /// Organization that has the legally delegated or invested authority, capacity, or power to perform a designated function.
    /// </summary>
    [EnumMember(Value = "NACA")]
    [IsoId("_CuUUsF0gEeWErPfQ7BYx8A")]
    [Description(@"Organization that has the legally delegated or invested authority, capacity, or power to perform a designated function.")]
    NACA,
    
    /// <summary>
    /// Person authorised under the provisions established in the regulation to provide the service of publishing trade reports on behalf of investment firms.
    /// </summary>
    [EnumMember(Value = "APPA")]
    [IsoId("_Grk0cF0gEeWErPfQ7BYx8A")]
    [Description(@"Person authorised under the provisions established in the regulation to provide the service of publishing trade reports on behalf of investment firms.")]
    APPA,
    
    /// <summary>
    /// Investment firm which, on an organised, frequent systematic and substantial basis, deals on own account when executing client orders outside a regulated market, an multilateral trading facility or an organised trading facility without operating a multilateral system.
    /// </summary>
    [EnumMember(Value = "SINT")]
    [IsoId("_N8YIkF0gEeWErPfQ7BYx8A")]
    [Description(@"Investment firm which, on an organised, frequent systematic and substantial basis, deals on own account when executing client orders outside a regulated market, an multilateral trading facility or an organised trading facility without operating a multilateral system.")]
    SINT,
    
    /// <summary>
    /// Multilateral system in which multiple third-party buying and selling trading interests in financial instruments.
    /// </summary>
    [EnumMember(Value = "TMIC")]
    [IsoId("_P_gd8F0gEeWErPfQ7BYx8A")]
    [Description(@"Multilateral system in which multiple third-party buying and selling trading interests in financial instruments.")]
    TMIC,
    
    /// <summary>
    /// Multilateral system which brings together multiple third-party buying and selling interests in financial instruments in a way that results in a contract.
    /// </summary>
    [EnumMember(Value = "MLTF")]
    [IsoId("_zKS-gHweEeWa36CuR-uOCw")]
    [Description(@"Multilateral system which brings together multiple third-party buying and selling interests in financial instruments in a way that results in a contract.")]
    MLTF,
    
    /// <summary>
    /// Multilateral system which is not a regulated market or multilateral trading facility in which multiple third-party buying and selling interests in bonds, structured finance products, emission allowances or derivatives are able to interact in a way that results in a contract.
    /// </summary>
    [EnumMember(Value = "OTFS")]
    [IsoId("_5mY4MHweEeWa36CuR-uOCw")]
    [Description(@"Multilateral system which is not a regulated market or multilateral trading facility in which multiple third-party buying and selling interests in bonds, structured finance products, emission allowances or derivatives are able to interact in a way that results in a contract.")]
    OTFS,
    
    /// <summary>
    /// Provider which will consolidate post-trade information into a continuous electronic data stream and make it publicly available as close to real time as technologically possible on a reasonable commercial basis and free of charge after 15 minutes.
    /// </summary>
    [EnumMember(Value = "CTPS")]
    [IsoId("_GkRD4HwfEeWa36CuR-uOCw")]
    [Description(@"Provider which will consolidate post-trade information into a continuous electronic data stream and make it publicly available as close to real time as technologically possible on a reasonable commercial basis and free of charge after 15 minutes.")]
    CTPS,
    
    /// <summary>
    /// Market on which financial instruments can be traded according to rules defined by the stock exchange.
    /// </summary>
    [EnumMember(Value = "RMKT")]
    [IsoId("_cdvSYcUtEeWuycXh3snGrg")]
    [Description(@"Market on which financial instruments can be traded according to rules defined by the stock exchange.")]
    RMKT,
    
    /// <summary>
    /// Market on which financial instruments can be traded according to rules defined by the stock exchange but accessible to qualified participant according to the current regulation.
    /// </summary>
    [EnumMember(Value = "RMQI")]
    [IsoId("_PdwPMH5WEemTJKg7hOVtNQ")]
    [Description(@"Market on which financial instruments can be traded according to rules defined by the stock exchange but accessible to qualified participant according to the current regulation.")]
    RMQI,
    
    /// <summary>
    /// Specific multilateral system which is a smaller and medium-sized enterprises Growth market and which brings together multiple third-party buying and selling interests in financial instruments in a way that results in a contract.
    /// </summary>
    [EnumMember(Value = "MSGM")]
    [IsoId("_bk180H5WEemTJKg7hOVtNQ")]
    [Description(@"Specific multilateral system which is a smaller and medium-sized enterprises Growth market and which brings together multiple third-party buying and selling interests in financial instruments in a way that results in a contract.")]
    MSGM,
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class TradingVenueCodeMetadataExtensions
{
    private static readonly TradingVenueCodeDropdownSource _dropdownSource = new TradingVenueCodeDropdownSource();

    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static ITradingVenueCodeDropdownRow GetMetadata(this TradingVenueCode code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


