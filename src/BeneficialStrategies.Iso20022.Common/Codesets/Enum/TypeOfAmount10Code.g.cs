//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for TypeOfAmount10Code.  ISO2002 ID# _gDqkkFKOEeeHVODnW-1ONQ.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20022.Codesets;

/// <summary>
/// Type or class of amount.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_gDqkkFKOEeeHVODnW-1ONQ")]
[Description(@"Type or class of amount.")]
[DerivedFrom(typeof(TypeOfAmountCode))]
public enum TypeOfAmount10Code
{
    /// <summary>
    /// Interchange fee.
    /// Encoded/decoded by serializers as "INTC".
    /// </summary>
    [EnumMember(Value = "INTC")]
    [IsoId("_jvU-AVKOEeeHVODnW-1ONQ")]
    [Description(@"Interchange fee.")]
    InterchangeFee = TypeOfAmountCode.InterchangeFee, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Processing fees.
    /// Encoded/decoded by serializers as "FEEP".
    /// </summary>
    [EnumMember(Value = "FEEP")]
    [IsoId("_oXifQVKOEeeHVODnW-1ONQ")]
    [Description(@"Processing fees.")]
    ProcessingFees = TypeOfAmountCode.ProcessingFees, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Other type of amount defined at national level.
    /// Encoded/decoded by serializers as "OTHN".
    /// </summary>
    [EnumMember(Value = "OTHN")]
    [IsoId("_pN11IVKOEeeHVODnW-1ONQ")]
    [Description(@"Other type of amount defined at national level.")]
    OtherNational = TypeOfAmountCode.OtherNational, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Other type of amount defined at private level.
    /// Encoded/decoded by serializers as "OTHP".
    /// </summary>
    [EnumMember(Value = "OTHP")]
    [IsoId("_pR2ycVKOEeeHVODnW-1ONQ")]
    [Description(@"Other type of amount defined at private level.")]
    OtherPrivate = TypeOfAmountCode.OtherPrivate, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// International service assessment fees.
    /// Encoded/decoded by serializers as "FEEA".
    /// </summary>
    [EnumMember(Value = "FEEA")]
    [IsoId("_rf7I4X03Eem0U9m89kippg")]
    [Description(@"International service assessment fees.")]
    InternationalServiceAssessmentFees = TypeOfAmountCode.InternationalServiceAssessmentFees, // same ordinal as derivation source for type conversions
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class TypeOfAmount10CodeMetadataExtensions
{
    private static readonly TypeOfAmount10CodeDropdownSource _dropdownSource = new TypeOfAmount10CodeDropdownSource();
    
    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static ITypeOfAmount10CodeDropdownRow GetMetadata(this TypeOfAmount10Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


