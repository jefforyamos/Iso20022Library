//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for TypeOfAmount6Code.  ISO2002 ID# _WQhuYHs3EeSTS7uHCe8FPQ.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Type or class of amount.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_WQhuYHs3EeSTS7uHCe8FPQ")]
[Description(@"Type or class of amount.")]
[DerivedFrom(typeof(TypeOfAmountCode))]
public enum TypeOfAmount6Code
{
    /// <summary>
    /// Commission that the issuer will charge to the cardholder, which should be shown and accepted by the cardholder before the money is disbursed.
    /// Encoded/decoded by serializers as "ATMCommissionFee".
    /// </summary>
    [EnumMember(Value = "ATMF")]
    [IsoId("_ch5l0Xs3EeSTS7uHCe8FPQ")]
    [Description(@"Commission that the issuer will charge to the cardholder, which should be shown and accepted by the cardholder before the money is disbursed.")]
    ATMCommissionFee,
    
    /// <summary>
    /// Transaction amount that has been authorised.
    /// Encoded/decoded by serializers as "AuthorisedAmount".
    /// </summary>
    [EnumMember(Value = "AMTH")]
    [IsoId("_crbVQ3s3EeSTS7uHCe8FPQ")]
    [Description(@"Transaction amount that has been authorised.")]
    AuthorisedAmount,
    
    /// <summary>
    /// Remaining allowed amount for this type of transaction with this card, after the transaction, until the end of the card limit period.
    /// Encoded/decoded by serializers as "CardRemainingBalance".
    /// </summary>
    [EnumMember(Value = "CRDB")]
    [IsoId("_dpya83s3EeSTS7uHCe8FPQ")]
    [Description(@"Remaining allowed amount for this type of transaction with this card, after the transaction, until the end of the card limit period.")]
    CardRemainingBalance,
    
    /// <summary>
    /// Discount, rebate or voucher, related to loyalty programs. This amount is counted as a negative amount.
    /// Encoded/decoded by serializers as "Discount".
    /// </summary>
    [EnumMember(Value = "DCNT")]
    [IsoId("_euupw3s3EeSTS7uHCe8FPQ")]
    [Description(@"Discount, rebate or voucher, related to loyalty programs. This amount is counted as a negative amount.")]
    Discount,
    
    /// <summary>
    /// Fees.
    /// Encoded/decoded by serializers as "Fees".
    /// </summary>
    [EnumMember(Value = "FEES")]
    [IsoId("_e8LP43s3EeSTS7uHCe8FPQ")]
    [Description(@"Fees.")]
    Fees,
    
    /// <summary>
    /// Maximum amount allowed for the transaction in the transaction amount currency if the transaction amount of the request was declined.
    /// Encoded/decoded by serializers as "MaximumAllowedAmount".
    /// </summary>
    [EnumMember(Value = "AMTX")]
    [IsoId("_fJJ783s3EeSTS7uHCe8FPQ")]
    [Description(@"Maximum amount allowed for the transaction in the transaction amount currency if the transaction amount of the request was declined.")]
    MaximumAllowedAmount,
    
    /// <summary>
    /// Minimum amount allowed in the TransactionAmount currency if the transaction amount of the request was declined.
    /// Encoded/decoded by serializers as "MinimumAllowedAmount".
    /// </summary>
    [EnumMember(Value = "AMTN")]
    [IsoId("_fP3n83s3EeSTS7uHCe8FPQ")]
    [Description(@"Minimum amount allowed in the TransactionAmount currency if the transaction amount of the request was declined.")]
    MinimumAllowedAmount,
    
    /// <summary>
    /// Transaction amount that has been requested to be authorised.
    /// Encoded/decoded by serializers as "RequestedAmount".
    /// </summary>
    [EnumMember(Value = "AMTQ")]
    [IsoId("_greqU3s3EeSTS7uHCe8FPQ")]
    [Description(@"Transaction amount that has been requested to be authorised.")]
    RequestedAmount,
    
    /// <summary>
    /// Extra fee for a purchase or a withdrawal.
    /// Encoded/decoded by serializers as "Surcharge".
    /// </summary>
    [EnumMember(Value = "SRCH")]
    [IsoId("_g34Hk3s3EeSTS7uHCe8FPQ")]
    [Description(@"Extra fee for a purchase or a withdrawal.")]
    Surcharge,
    
    /// <summary>
    /// Value added tax amount.
    /// Encoded/decoded by serializers as "ValueAddedTax".
    /// </summary>
    [EnumMember(Value = "VATX")]
    [IsoId("_hFQcQ3s3EeSTS7uHCe8FPQ")]
    [Description(@"Value added tax amount.")]
    ValueAddedTax,
    
    /// <summary>
    /// Commission from the card issuer.
    /// Encoded/decoded by serializers as "IssuerCommission".
    /// </summary>
    [EnumMember(Value = "COMI")]
    [IsoId("_UJEOkYN6EeSNofOeou9G3A")]
    [Description(@"Commission from the card issuer.")]
    IssuerCommission,
    
    /// <summary>
    /// Fees amount from the card issuer.
    /// Encoded/decoded by serializers as "IssuerFees".
    /// </summary>
    [EnumMember(Value = "FEEI")]
    [IsoId("_UUHA8YN6EeSNofOeou9G3A")]
    [Description(@"Fees amount from the card issuer.")]
    IssuerFees,
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class TypeOfAmount6CodeMetadataExtensions
{
    private static readonly TypeOfAmount6CodeDropdownSource _dropdownSource = new TypeOfAmount6CodeDropdownSource();

    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static ITypeOfAmount6CodeDropdownRow GetMetadata(this TypeOfAmount6Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


