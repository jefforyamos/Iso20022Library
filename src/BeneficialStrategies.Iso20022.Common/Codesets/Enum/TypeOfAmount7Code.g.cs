//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for TypeOfAmount7Code.  ISO2002 ID# _JO5DMIN-EeSNofOeou9G3A.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Type or class of amount.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_JO5DMIN-EeSNofOeou9G3A")]
[Description(@"Type or class of amount.")]
[DerivedFrom(typeof(TypeOfAmountCode))]
public enum TypeOfAmount7Code
{
    /// <summary>
    /// Fees.
    /// Encoded/decoded by serializers as "FEES".
    /// </summary>
    [EnumMember(Value = "FEES")]
    [IsoId("_NBM3MYN-EeSNofOeou9G3A")]
    [Description(@"Fees.")]
    Fees = TypeOfAmountCode.Fees, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Fees amount from the card issuer.
    /// Encoded/decoded by serializers as "FEEI".
    /// </summary>
    [EnumMember(Value = "FEEI")]
    [IsoId("_NWACgYN-EeSNofOeou9G3A")]
    [Description(@"Fees amount from the card issuer.")]
    IssuerFees = TypeOfAmountCode.IssuerFees, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Interchange fees.
    /// Encoded/decoded by serializers as "FEEH".
    /// </summary>
    [EnumMember(Value = "FEEH")]
    [IsoId("_gi3gAYN-EeSNofOeou9G3A")]
    [Description(@"Interchange fees.")]
    InterchangeFees = TypeOfAmountCode.InterchangeFees, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Processing fees.
    /// Encoded/decoded by serializers as "FEEP".
    /// </summary>
    [EnumMember(Value = "FEEP")]
    [IsoId("_nk6mcYN-EeSNofOeou9G3A")]
    [Description(@"Processing fees.")]
    ProcessingFees = TypeOfAmountCode.ProcessingFees, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// International service assessment fees.
    /// Encoded/decoded by serializers as "FEEA".
    /// </summary>
    [EnumMember(Value = "FEEA")]
    [IsoId("_63UEMYN-EeSNofOeou9G3A")]
    [Description(@"International service assessment fees.")]
    InternationalServiceAssessmentFees = TypeOfAmountCode.InternationalServiceAssessmentFees, // same ordinal as derivation source for type conversions
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class TypeOfAmount7CodeMetadataExtensions
{
    private static readonly TypeOfAmount7CodeDropdownSource _dropdownSource = new TypeOfAmount7CodeDropdownSource();
    
    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static ITypeOfAmount7CodeDropdownRow GetMetadata(this TypeOfAmount7Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


