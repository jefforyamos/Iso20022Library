//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for UnitOfMeasure9Code.  ISO2002 ID# _aSoaEPE_Eee_LsXdoqzkWg.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20222.Common;

/// <summary>
/// Identifies the unit of measure by means of a code. The code is taken from UN/ECE Recommendation 20.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_aSoaEPE_Eee_LsXdoqzkWg")]
[Description(@"Identifies the unit of measure by means of a code. The code is taken from UN/ECE Recommendation 20.")]
[DerivedFrom(typeof(UnitOfMeasureCode))]
public enum UnitOfMeasure9Code
{
    /// <summary>
    /// Code for a bag.
    /// Encoded/decoded by serializers as "Bag".
    /// </summary>
    [EnumMember(Value = "BAGG")]
    [IsoId("_TPn04fFAEee_LsXdoqzkWg")]
    [Description(@"Code for a bag.")]
    Bag,
    
    /// <summary>
    /// Code for a bale.
    /// Encoded/decoded by serializers as "Bale".
    /// </summary>
    [EnumMember(Value = "BALE")]
    [IsoId("_X4ox8fFBEee_LsXdoqzkWg")]
    [Description(@"Code for a bale.")]
    Bale,
    
    /// <summary>
    /// Code for a bottle.
    /// Encoded/decoded by serializers as "Bottle".
    /// </summary>
    [EnumMember(Value = "BOTL")]
    [IsoId("_hNVQcfFBEee_LsXdoqzkWg")]
    [Description(@"Code for a bottle.")]
    Bottle,
    
    /// <summary>
    /// Code for a box.
    /// Encoded/decoded by serializers as "Box".
    /// </summary>
    [EnumMember(Value = "BOXX")]
    [IsoId("_oNrGsfFBEee_LsXdoqzkWg")]
    [Description(@"Code for a box.")]
    Box,
    
    /// <summary>
    /// Code for a carton.
    /// Encoded/decoded by serializers as "Carton".
    /// </summary>
    [EnumMember(Value = "CRTN")]
    [IsoId("_vPLakfFBEee_LsXdoqzkWg")]
    [Description(@"Code for a carton.")]
    Carton,
    
    /// <summary>
    /// Unit of volume that is equal to one hundredth of a litre.
    /// Encoded/decoded by serializers as "Centilitre".
    /// </summary>
    [EnumMember(Value = "CELI")]
    [IsoId("_wtYd8fFBEee_LsXdoqzkWg")]
    [Description(@"Unit of volume that is equal to one hundredth of a litre.")]
    Centilitre,
    
    /// <summary>
    /// Unit of measure that is equal to one hundredth of a metre.
    /// Encoded/decoded by serializers as "Centimetre".
    /// </summary>
    [EnumMember(Value = "CMET")]
    [IsoId("_wzY_UfFBEee_LsXdoqzkWg")]
    [Description(@"Unit of measure that is equal to one hundredth of a metre.")]
    Centimetre,
    
    /// <summary>
    /// Code for a container.
    /// Encoded/decoded by serializers as "Container".
    /// </summary>
    [EnumMember(Value = "CNTR")]
    [IsoId("_B0nEofFCEee_LsXdoqzkWg")]
    [Description(@"Code for a container.")]
    Container,
    
    /// <summary>
    /// Code for a crate.
    /// Encoded/decoded by serializers as "Crate".
    /// </summary>
    [EnumMember(Value = "CRAT")]
    [IsoId("_6owrgfFNEee_LsXdoqzkWg")]
    [Description(@"Code for a crate.")]
    Crate,
    
    /// <summary>
    /// Measure of a volume, one inch by one inch by one inch.
    /// Encoded/decoded by serializers as "CubicInch".
    /// </summary>
    [EnumMember(Value = "CBIN")]
    [IsoId("_LgZ-EfFOEee_LsXdoqzkWg")]
    [Description(@"Measure of a volume, one inch by one inch by one inch.")]
    CubicInch,
    
    /// <summary>
    /// Unit of volume that is equal to one meter in length, breadth and height or also equal to 1000 liters.
    /// Encoded/decoded by serializers as "CubicMeters".
    /// </summary>
    [EnumMember(Value = "CBME")]
    [IsoId("_M_ytMfFOEee_LsXdoqzkWg")]
    [Description(@"Unit of volume that is equal to one meter in length, breadth and height or also equal to 1000 liters.")]
    CubicMeters,
    
    /// <summary>
    /// Unit of volume that is equal to one thousandth of a litre.
    /// Encoded/decoded by serializers as "CubicMillimetre".
    /// </summary>
    [EnumMember(Value = "CBML")]
    [IsoId("_vL4jEfFOEee_LsXdoqzkWg")]
    [Description(@"Unit of volume that is equal to one thousandth of a litre.")]
    CubicMillimetre,
    
    /// <summary>
    /// Standard length of cloth, wallpaper, as an item for sale or amount of a substance.
    /// Encoded/decoded by serializers as "Piece".
    /// </summary>
    [EnumMember(Value = "PIEC")]
    [IsoId("_2qAhgfFOEee_LsXdoqzkWg")]
    [Description(@"Standard length of cloth, wallpaper, as an item for sale or amount of a substance.")]
    Piece,
    
    /// <summary>
    /// Unit of length equal to 1/3 yard.
    /// Encoded/decoded by serializers as "Foot".
    /// </summary>
    [EnumMember(Value = "FOOT")]
    [IsoId("_9lCZ8fFOEee_LsXdoqzkWg")]
    [Description(@"Unit of length equal to 1/3 yard.")]
    Foot,
    
    /// <summary>
    /// Unit of volume equal to 2, 841 306 centilitre.
    /// Encoded/decoded by serializers as "GBFuildOunce".
    /// </summary>
    [EnumMember(Value = "GBFO")]
    [IsoId("_R0lccfFPEee_LsXdoqzkWg")]
    [Description(@"Unit of volume equal to 2, 841 306 centilitre.")]
    GBFuildOunce,
    
    /// <summary>
    /// Unit of volume that is equal to 8 pints.
    /// Encoded/decoded by serializers as "GBGallon".
    /// </summary>
    [EnumMember(Value = "GBGA")]
    [IsoId("_TT1BofFPEee_LsXdoqzkWg")]
    [Description(@"Unit of volume that is equal to 8 pints.")]
    GBGallon,
    
    /// <summary>
    /// Unit of volume that is equal to 568 cubic centimetres.
    /// Encoded/decoded by serializers as "GBPint".
    /// </summary>
    [EnumMember(Value = "GBPI")]
    [IsoId("_UQooIfFPEee_LsXdoqzkWg")]
    [Description(@"Unit of volume that is equal to 568 cubic centimetres.")]
    GBPint,
    
    /// <summary>
    /// Unit of volume that is equal to 2 pints.
    /// Encoded/decoded by serializers as "GBQuart".
    /// </summary>
    [EnumMember(Value = "GBQA")]
    [IsoId("_W3hx4fFPEee_LsXdoqzkWg")]
    [Description(@"Unit of volume that is equal to 2 pints.")]
    GBQuart,
    
    /// <summary>
    /// Measure of weight, in Britain 2240 lb (long ton).
    /// Encoded/decoded by serializers as "GBTon".
    /// </summary>
    [EnumMember(Value = "GBTN")]
    [IsoId("_ie754fFPEee_LsXdoqzkWg")]
    [Description(@"Measure of weight, in Britain 2240 lb (long ton).")]
    GBTon,
    
    /// <summary>
    /// Unit of measure that is equal to a 1, 000th of a kilo.
    /// Encoded/decoded by serializers as "Gram".
    /// </summary>
    [EnumMember(Value = "GRAM")]
    [IsoId("_kWlYAfFPEee_LsXdoqzkWg")]
    [Description(@"Unit of measure that is equal to a 1, 000th of a kilo.")]
    Gram,
    
    /// <summary>
    /// Measure of length equal to 2.54 cm.
    /// Encoded/decoded by serializers as "Inch".
    /// </summary>
    [EnumMember(Value = "INCH")]
    [IsoId("_lil4IfFPEee_LsXdoqzkWg")]
    [Description(@"Measure of length equal to 2.54 cm.")]
    Inch,
    
    /// <summary>
    /// Basic unit of mass in the SI system, 1000 grams.
    /// Encoded/decoded by serializers as "Kilogram".
    /// </summary>
    [EnumMember(Value = "KILO")]
    [IsoId("_m7lEUfFPEee_LsXdoqzkWg")]
    [Description(@"Basic unit of mass in the SI system, 1000 grams.")]
    Kilogram,
    
    /// <summary>
    /// Unit of measure that is equal to 1, 000 meters.
    /// Encoded/decoded by serializers as "Kilometre".
    /// </summary>
    [EnumMember(Value = "KMET")]
    [IsoId("_nCDfwfFPEee_LsXdoqzkWg")]
    [Description(@"Unit of measure that is equal to 1, 000 meters.")]
    Kilometre,
    
    /// <summary>
    /// Unit of volume that is equal to a thousand cubic centimetres.
    /// Encoded/decoded by serializers as "Litre".
    /// </summary>
    [EnumMember(Value = "LITR")]
    [IsoId("_omqtIfFPEee_LsXdoqzkWg")]
    [Description(@"Unit of volume that is equal to a thousand cubic centimetres.")]
    Litre,
    
    /// <summary>
    /// Unit of length in the metric system, equal to 39.37 inches.
    /// Encoded/decoded by serializers as "Metre".
    /// </summary>
    [EnumMember(Value = "METR")]
    [IsoId("_pDAq4fFPEee_LsXdoqzkWg")]
    [Description(@"Unit of length in the metric system, equal to 39.37 inches.")]
    Metre,
    
    /// <summary>
    /// Unit of mass equal to 1000 kilograms; equivalent to approximately 2,204.6 pounds, 1.102 short tons (US) or 0.984 long tons (imperial).
    /// Encoded/decoded by serializers as "MetricTons".
    /// </summary>
    [EnumMember(Value = "TONE")]
    [IsoId("_pHoFIfFPEee_LsXdoqzkWg")]
    [Description(@"Unit of mass equal to 1000 kilograms; equivalent to approximately 2,204.6 pounds, 1.102 short tons (US) or 0.984 long tons (imperial).")]
    MetricTons,
    
    /// <summary>
    /// Unit of length equal to 1, 760 yards.
    /// Encoded/decoded by serializers as "Mile".
    /// </summary>
    [EnumMember(Value = "MILE")]
    [IsoId("_qSTIgfFPEee_LsXdoqzkWg")]
    [Description(@"Unit of length equal to 1, 760 yards.")]
    Mile,
    
    /// <summary>
    /// Unit of measure that is a thousandth of one metre.
    /// Encoded/decoded by serializers as "Millimetre".
    /// </summary>
    [EnumMember(Value = "MMET")]
    [IsoId("_qvy80fFPEee_LsXdoqzkWg")]
    [Description(@"Unit of measure that is a thousandth of one metre.")]
    Millimetre,
    
    /// <summary>
    /// Unit of volume that is equal to one thousandth of a litre.
    /// Encoded/decoded by serializers as "MilliLitre".
    /// </summary>
    [EnumMember(Value = "MILI")]
    [IsoId("_sR624fFPEee_LsXdoqzkWg")]
    [Description(@"Unit of volume that is equal to one thousandth of a litre.")]
    MilliLitre,
    
    /// <summary>
    /// Unit of weight equal to 0.454 kilograms.
    /// Encoded/decoded by serializers as "Pound".
    /// </summary>
    [EnumMember(Value = "PUND")]
    [IsoId("_z6B3wfFPEee_LsXdoqzkWg")]
    [Description(@"Unit of weight equal to 0.454 kilograms.")]
    Pound,
    
    /// <summary>
    /// Unit of weight equal to a sixteenth of a pound.
    /// Encoded/decoded by serializers as "USOunce".
    /// </summary>
    [EnumMember(Value = "USOU")]
    [IsoId("_3YJkcfFPEee_LsXdoqzkWg")]
    [Description(@"Unit of weight equal to a sixteenth of a pound.")]
    USOunce,
    
    /// <summary>
    /// Measure of a surface, one centimetre by one centimetre.
    /// Encoded/decoded by serializers as "SquareCentimetre".
    /// </summary>
    [EnumMember(Value = "SCMT")]
    [IsoId("_-SjKwfFPEee_LsXdoqzkWg")]
    [Description(@"Measure of a surface, one centimetre by one centimetre.")]
    SquareCentimetre,
    
    /// <summary>
    /// Measure of a surface, one foot by one foot.
    /// Encoded/decoded by serializers as "SquareFoot".
    /// </summary>
    [EnumMember(Value = "SQFO")]
    [IsoId("__O0lwfFPEee_LsXdoqzkWg")]
    [Description(@"Measure of a surface, one foot by one foot.")]
    SquareFoot,
    
    /// <summary>
    /// Measure of a surface, one inch by one inch.
    /// Encoded/decoded by serializers as "SquareInch".
    /// </summary>
    [EnumMember(Value = "SQIN")]
    [IsoId("__TGBwfFPEee_LsXdoqzkWg")]
    [Description(@"Measure of a surface, one inch by one inch.")]
    SquareInch,
    
    /// <summary>
    /// Measure of a surface, one kilometre by one kilometre.
    /// Encoded/decoded by serializers as "SquareKilometre".
    /// </summary>
    [EnumMember(Value = "SQKI")]
    [IsoId("_ATMz4fFQEee_LsXdoqzkWg")]
    [Description(@"Measure of a surface, one kilometre by one kilometre.")]
    SquareKilometre,
    
    /// <summary>
    /// Measure of a surface, one metre by one metre.
    /// Encoded/decoded by serializers as "SquareMetre".
    /// </summary>
    [EnumMember(Value = "SMET")]
    [IsoId("_AXYwUfFQEee_LsXdoqzkWg")]
    [Description(@"Measure of a surface, one metre by one metre.")]
    SquareMetre,
    
    /// <summary>
    /// Measure of a surface, one mile by one mile.
    /// Encoded/decoded by serializers as "SquareMile".
    /// </summary>
    [EnumMember(Value = "SQMI")]
    [IsoId("_BcNqYfFQEee_LsXdoqzkWg")]
    [Description(@"Measure of a surface, one mile by one mile.")]
    SquareMile,
    
    /// <summary>
    /// Measure of a surface, one millimetre by one millimetre.
    /// Encoded/decoded by serializers as "SquareMillimetre".
    /// </summary>
    [EnumMember(Value = "SMIL")]
    [IsoId("_Bh_iQfFQEee_LsXdoqzkWg")]
    [Description(@"Measure of a surface, one millimetre by one millimetre.")]
    SquareMillimetre,
    
    /// <summary>
    /// Measure of a surface, one yard by one yard.
    /// Encoded/decoded by serializers as "SquareYard".
    /// </summary>
    [EnumMember(Value = "SQYA")]
    [IsoId("_Bm86wfFQEee_LsXdoqzkWg")]
    [Description(@"Measure of a surface, one yard by one yard.")]
    SquareYard,
    
    /// <summary>
    /// Unit of volume equal to 158, 9873 litre.
    /// Encoded/decoded by serializers as "USBarrel".
    /// </summary>
    [EnumMember(Value = "USBA")]
    [IsoId("_QJiacfFQEee_LsXdoqzkWg")]
    [Description(@"Unit of volume equal to 158, 9873 litre.")]
    USBarrel,
    
    /// <summary>
    /// Unit of volume equal to 2, 957353 centilitre.
    /// Encoded/decoded by serializers as "USFluidOunce".
    /// </summary>
    [EnumMember(Value = "USFO")]
    [IsoId("_bO_r8fFQEee_LsXdoqzkWg")]
    [Description(@"Unit of volume equal to 2, 957353 centilitre.")]
    USFluidOunce,
    
    /// <summary>
    /// Unit of volume that is equal to 8 pints.
    /// Encoded/decoded by serializers as "USGallon".
    /// </summary>
    [EnumMember(Value = "USGA")]
    [IsoId("_cfuUAfFQEee_LsXdoqzkWg")]
    [Description(@"Unit of volume that is equal to 8 pints.")]
    USGallon,
    
    /// <summary>
    /// Unit of volume that is equal to 473 cubic centimetres.
    /// Encoded/decoded by serializers as "USPint".
    /// </summary>
    [EnumMember(Value = "USPI")]
    [IsoId("_dSFlEfFQEee_LsXdoqzkWg")]
    [Description(@"Unit of volume that is equal to 473 cubic centimetres.")]
    USPint,
    
    /// <summary>
    /// Unit of volume that is equal to 2 pints.
    /// Encoded/decoded by serializers as "USQuart".
    /// </summary>
    [EnumMember(Value = "USQA")]
    [IsoId("_ddSIcfFQEee_LsXdoqzkWg")]
    [Description(@"Unit of volume that is equal to 2 pints.")]
    USQuart,
    
    /// <summary>
    /// Measure of weight, in the US 2000 lb (short ton).
    /// Encoded/decoded by serializers as "USTon".
    /// </summary>
    [EnumMember(Value = "USTN")]
    [IsoId("_or7LIfFQEee_LsXdoqzkWg")]
    [Description(@"Measure of weight, in the US 2000 lb (short ton).")]
    USTon,
    
    /// <summary>
    /// Unit of length equal to 3 feet or 0.9144 metre.
    /// Encoded/decoded by serializers as "Yard".
    /// </summary>
    [EnumMember(Value = "YARD")]
    [IsoId("_pwHMAfFQEee_LsXdoqzkWg")]
    [Description(@"Unit of length equal to 3 feet or 0.9144 metre.")]
    Yard,
    
    /// <summary>
    /// Unit of weight equal to a sixteenth of a pound.
    /// Encoded/decoded by serializers as "GBOunce".
    /// </summary>
    [EnumMember(Value = "GBOU")]
    [IsoId("_3waeAfFQEee_LsXdoqzkWg")]
    [Description(@"Unit of weight equal to a sixteenth of a pound.")]
    GBOunce,
    
    /// <summary>
    /// Unit of measure equal to 4, 840 square yards.
    /// Encoded/decoded by serializers as "Acre".
    /// </summary>
    [EnumMember(Value = "ACRE")]
    [IsoId("_Phd4YfFREee_LsXdoqzkWg")]
    [Description(@"Unit of measure equal to 4, 840 square yards.")]
    Acre,
    
    /// <summary>
    /// Unit of measure equal to a 100 square meters.
    /// Encoded/decoded by serializers as "Are".
    /// </summary>
    [EnumMember(Value = "ARES")]
    [IsoId("_QL8YwfFREee_LsXdoqzkWg")]
    [Description(@"Unit of measure equal to a 100 square meters.")]
    Are,
    
    /// <summary>
    /// Unit of measure that is equal to 10, 000 square meters.
    /// Encoded/decoded by serializers as "Hectare".
    /// </summary>
    [EnumMember(Value = "HECT")]
    [IsoId("_Yyq-AfFREee_LsXdoqzkWg")]
    [Description(@"Unit of measure that is equal to 10, 000 square meters.")]
    Hectare,
    
}


/// <summary>
/// Provides access to the metadata associated with a specific enum.
/// </summary>
public static class UnitOfMeasure9CodeMetadataExtensions
{
    private static readonly UnitOfMeasure9CodeDropdownSource _dropdownSource = new UnitOfMeasure9CodeDropdownSource();

    /// <summary>
    /// Returns the metadata associated with this enum value.
    /// </summary>
    public static IUnitOfMeasure9CodeDropdownRow GetMetadata(this UnitOfMeasure9Code code)
    {
        return _dropdownSource.Lookup(code) ;
    }
}


