//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for SequenceType2Code.  ISO2002 ID# _ZKPgB9p-Ed-ak6NoX_4Aeg_868377274.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20022.Codesets;

/// <summary>
/// Specifies whether a once off transaction is covered or whether recurring transactions are covered.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_ZKPgB9p-Ed-ak6NoX_4Aeg_868377274")]
[Description(@"Specifies whether a once off transaction is covered or whether recurring transactions are covered.")]
[DerivedFrom(typeof(SequenceTypeCode))]
public enum SequenceType2Code
{
    /// <summary>
    /// Direct debit instruction where the debtor's authorisation is used for regular direct debit transactions initiated by the creditor.
    /// Encoded/decoded by serializers as "RCUR".
    /// </summary>
    [EnumMember(Value = "RCUR")]
    [IsoId("_ZKPgCNp-Ed-ak6NoX_4Aeg_868377522")]
    [Description(@"Direct debit instruction where the debtor's authorisation is used for regular direct debit transactions initiated by the creditor.")]
    Recurring = SequenceTypeCode.Recurring, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Direct debit instruction where the debtor's authorisation is used to initiate one single direct debit transaction.
    /// Encoded/decoded by serializers as "OOFF".
    /// </summary>
    [EnumMember(Value = "OOFF")]
    [IsoId("_ZKZRANp-Ed-ak6NoX_4Aeg_868377553")]
    [Description(@"Direct debit instruction where the debtor's authorisation is used to initiate one single direct debit transaction.")]
    OneOff = SequenceTypeCode.OneOff, // same ordinal as derivation source for type conversions
    
}
