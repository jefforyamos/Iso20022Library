//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by CodesetEnumGenerator for ThresholdBasis1Code.  ISO2002 ID# _IRxt4BuOEeyhRdHRjakS2w.
// Copyright 2024 Jeff Ward, Beneficial Strategies. Usage subject to license of enclosing library.
//

using System.Reflection;
using System.Runtime.Serialization;

namespace BeneficialStrategies.Iso20022.Codesets;

/// <summary>
/// Nature of the quantity used as a basis to set a threshold for voting on resolutions at general meetings.
/// </summary>
[DataContract]
[Serializable]
[IsoId("_IRxt4BuOEeyhRdHRjakS2w")]
[Description(@"Nature of the quantity used as a basis to set a threshold for voting on resolutions at general meetings.")]
[DerivedFrom(typeof(ThresholdBasisCode))]
public enum ThresholdBasis1Code
{
    /// <summary>
    /// Basis is the total number of shares issued.
    /// Encoded/decoded by serializers as &quot;ALSH&quot;.
    /// </summary>
    [EnumMember(Value = "ALSH")]
    [IsoId("_KOf5QRuOEeyhRdHRjakS2w")]
    [Description(@"Basis is the total number of shares issued.")]
    AllIssuedShares = ThresholdBasisCode.AllIssuedShares, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Basis is the total number of shares represented at the meeting by attendees. 
    /// Encoded/decoded by serializers as &quot;ALSM&quot;.
    /// </summary>
    [EnumMember(Value = "ALSM")]
    [IsoId("_KUwSQRuOEeyhRdHRjakS2w")]
    [Description(@"Basis is the total number of shares represented at the meeting by attendees. ")]
    AllSharesRepresentedAtMeeting = ThresholdBasisCode.AllSharesRepresentedAtMeeting, // same ordinal as derivation source for type conversions
    
    /// <summary>
    /// Basis is the total number of vote cast for a resolution.
    /// Encoded/decoded by serializers as &quot;ALVO&quot;.
    /// </summary>
    [EnumMember(Value = "ALVO")]
    [IsoId("_KbArQRuOEeyhRdHRjakS2w")]
    [Description(@"Basis is the total number of vote cast for a resolution.")]
    AllVoteCast = ThresholdBasisCode.AllVoteCast, // same ordinal as derivation source for type conversions
    
}
