//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for ATMAccountStatement1.  ISO2002 ID# _1dwnkIq7EeSHjtO_wHA7PQ.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Statement information of an account.
/// </summary>
public partial record ATMAccountStatement1
     : IIsoXmlSerilizable<ATMAccountStatement1>
{
    #nullable enable
    
    /// <summary>
    /// Unique identifier of the account, as assigned by the account servicer.
    /// </summary>
    public required AccountIdentification31Choice_ AccountIdentifier { get; init; } 
    /// <summary>
    /// Name of the account, as assigned by the account servicing institution, in agreement with the account owner in order to provide an additional means of identification of the account.
    /// Usage: The account name is different from the account owner name. The account name is used in certain user communities to provide a means of identifying the account, in addition to the account owner's identity and the account number.
    /// </summary>
    public IsoMax70Text? AccountName { get; init; } 
    /// <summary>
    /// Statement information.
    /// </summary>
    public ATMAccountStatement2? AccountStatement { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "AcctIdr", xmlNamespace );
        AccountIdentifier.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (AccountName is IsoMax70Text AccountNameValue)
        {
            writer.WriteStartElement(null, "AcctNm", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax70Text(AccountNameValue)); // data type Max70Text System.String
            writer.WriteEndElement();
        }
        if (AccountStatement is ATMAccountStatement2 AccountStatementValue)
        {
            writer.WriteStartElement(null, "AcctStmt", xmlNamespace );
            AccountStatementValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static ATMAccountStatement1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
