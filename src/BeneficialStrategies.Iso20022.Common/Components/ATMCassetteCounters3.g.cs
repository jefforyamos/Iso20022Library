//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for ATMCassetteCounters3.  ISO2002 ID# _k0cdIa4MEeWZgJQOa6iKCQ.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Xml.Linq;

#if NET6_0_OR_GREATER // C# 10 
#else
using System.DateOnly=System.DateTime; // So data types will degrade gracefully
using System.TimeOnly=System.DateTime; // Same with this data type
#endif
namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// ATM cassette counter per unit value or globally.
/// </summary>
[IsoId("_k0cdIa4MEeWZgJQOa6iKCQ")]
[DisplayName("ATM Cassette Counters")]
#if DECLARE_SERIALIZABLE
[Serializable]
#endif
#if DECLARE_DATACONTRACT
[DataContract]
#endif
public partial record ATMCassetteCounters3
{
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    // No constructor needed for NET8 and above.
    #else
    /// <summary>
    /// Constructs a ATMCassetteCounters3 instance using the members the ISO20022 deems required.
    /// It is higly recommended that you update to .NET 8 or above so you can use required initialization syntax instead
    /// </summary>
    public ATMCassetteCounters3( System.UInt64 reqCurrentNumber )
    {
        CurrentNumber = reqCurrentNumber;
    }
    #endif
    #nullable enable
    
    /// <summary>
    /// Amount of one media unit, if the media type is valued.
    /// </summary>
    [IsoId("_lAXZQa4MEeWZgJQOa6iKCQ")]
    [DisplayName("Unit Value")]
    #if DECLARE_DATACONTRACT
    [DataMember(Name="UnitVal")]
    #endif
    [IsoXmlTag("UnitVal")]
    [IsoSimpleType(IsoSimpleType.ImpliedCurrencyAndAmount)]
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public IsoImpliedCurrencyAndAmount? UnitValue { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public System.Decimal? UnitValue { get; init; } 
    #else
    public System.Decimal? UnitValue { get; set; } 
    #endif
    
    /// <summary>
    /// Currency of the media, if the media type is valued and different from the currency of the requested amount.
    /// </summary>
    [IsoId("_lAXZQ64MEeWZgJQOa6iKCQ")]
    [DisplayName("Currency")]
    #if DECLARE_DATACONTRACT
    [DataMember(Name="Ccy")]
    #endif
    [IsoXmlTag("Ccy")]
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public ActiveCurrencyCode? Currency { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public string? Currency { get; init; } 
    #else
    public string? Currency { get; set; } 
    #endif
    
    /// <summary>
    /// Category of media items.
    /// </summary>
    [IsoId("_lAXZRa4MEeWZgJQOa6iKCQ")]
    [DisplayName("Media Category")]
    #if DECLARE_DATACONTRACT
    [DataMember(Name="MdiaCtgy")]
    #endif
    [IsoXmlTag("MdiaCtgy")]
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public ATMMediaType3Code? MediaCategory { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public ATMMediaType3Code? MediaCategory { get; init; } 
    #else
    public ATMMediaType3Code? MediaCategory { get; set; } 
    #endif
    
    /// <summary>
    /// Current number of media present in the cassette.
    /// </summary>
    [IsoId("_lAXZSa4MEeWZgJQOa6iKCQ")]
    [DisplayName("Current Number")]
    #if DECLARE_DATACONTRACT
    [DataMember(Name="CurNb")]
    #endif
    [IsoXmlTag("CurNb")]
    [IsoSimpleType(IsoSimpleType.Number)]
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public required IsoNumber CurrentNumber { get; init; } 
    #elif NET7_0_OR_GREATER // C# 11 Records, required members
    public required System.UInt64 CurrentNumber { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public System.UInt64 CurrentNumber { get; init; } 
    #else
    public System.UInt64 CurrentNumber { get; set; } 
    #endif
    
    /// <summary>
    /// Current amount in the cassette.
    /// </summary>
    [IsoId("_lAXZS64MEeWZgJQOa6iKCQ")]
    [DisplayName("Current Amount")]
    #if DECLARE_DATACONTRACT
    [DataMember(Name="CurAmt")]
    #endif
    [IsoXmlTag("CurAmt")]
    [IsoSimpleType(IsoSimpleType.ImpliedCurrencyAndAmount)]
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public IsoImpliedCurrencyAndAmount? CurrentAmount { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public System.Decimal? CurrentAmount { get; init; } 
    #else
    public System.Decimal? CurrentAmount { get; set; } 
    #endif
    
    /// <summary>
    /// Counters of media inside the cassette.
    /// </summary>
    [IsoId("_lAXZR64MEeWZgJQOa6iKCQ")]
    [DisplayName("Flow Totals")]
    #if DECLARE_DATACONTRACT
    [DataMember(Name="FlowTtls")]
    #endif
    [IsoXmlTag("FlowTtls")]
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public ATMCassetteCounters4? FlowTotals { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public ATMCassetteCounters4? FlowTotals { get; init; } 
    #else
    public ATMCassetteCounters4? FlowTotals { get; set; } 
    #endif
    
    
    #nullable disable
    
}
