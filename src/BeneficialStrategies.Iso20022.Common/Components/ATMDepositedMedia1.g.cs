//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for ATMDepositedMedia1.  ISO2002 ID# _jeG9UK4BEeWL1uap3dNhCQ.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Xml.Linq;

#if NET6_0_OR_GREATER // C# 10 
#else
using System.DateOnly=System.DateTime; // So data types will degrade gracefully
using System.TimeOnly=System.DateTime; // Same with this data type
#endif
namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Deposited media put in the safe.
/// </summary>
[IsoId("_jeG9UK4BEeWL1uap3dNhCQ")]
#if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
[DisplayName("ATM Deposited Media")]
#endif
#if DECLARE_SERIALIZABLE
[Serializable]
#endif
#if DECLARE_DATACONTRACT
[DataContract]
#endif
public partial record ATMDepositedMedia1
{
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    // No constructor needed for NET8 and above.
    #else
    /// <summary>
    /// Constructs a ATMDepositedMedia1 instance using the members the ISO20022 deems required.
    /// It is higly recommended that you update to .NET 8 or above so you can use required initialization syntax instead
    /// </summary>
    public ATMDepositedMedia1( ATMMediaType2Code reqMediaType )
    {
        MediaType = reqMediaType;
    }
    #endif
    #nullable enable
    
    /// <summary>
    /// Link to the account for multi-account deposit.
    /// </summary>
    [IsoId("_tkpvgK4BEeWL1uap3dNhCQ")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Account Sequence Number")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public IsoNumber? AccountSequenceNumber { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public System.UInt64? AccountSequenceNumber { get; init; } 
    #else
    public System.UInt64? AccountSequenceNumber { get; set; } 
    #endif
    
    /// <summary>
    /// Type of deposited media.
    /// </summary>
    [IsoId("_cTRR0K4CEeWL1uap3dNhCQ")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Media Type")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public required ATMMediaType2Code MediaType { get; init; } 
    #elif NET7_0_OR_GREATER // C# 11 Records, required members
    public ATMMediaType2Code MediaType { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public ATMMediaType2Code MediaType { get; init; } 
    #else
    public ATMMediaType2Code MediaType { get; set; } 
    #endif
    
    /// <summary>
    /// Category of deposited media items.
    /// </summary>
    [IsoId("_1FGMsK4CEeWL1uap3dNhCQ")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Media Category")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public ATMMediaType3Code? MediaCategory { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public ATMMediaType3Code? MediaCategory { get; init; } 
    #else
    public ATMMediaType3Code? MediaCategory { get; set; } 
    #endif
    
    /// <summary>
    /// Media item that are deposited.
    /// </summary>
    [IsoId("_l3I_UK4DEeWL1uap3dNhCQ")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Media Items")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    public ATMDepositedMedia2? MediaItems { get; init;  } // Warning: Don't know multiplicity.
    // ID for the above is _l3I_UK4DEeWL1uap3dNhCQ
    
    
    #nullable disable
    
}
