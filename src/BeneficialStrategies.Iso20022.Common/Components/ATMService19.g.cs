//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for ATMService19.  ISO2002 ID# _zjuCEa4ZEeW_TaP-ygI0SQ.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Service allowed on the account.
/// </summary>
public partial record ATMService19
     : IIsoXmlSerilizable<ATMService19>
{
    #nullable enable
    
    /// <summary>
    /// Describes the type of inquiry selected by the customer or the ATM.
    /// </summary>
    public required ATMServiceType8Code ServiceType { get; init; } 
    /// <summary>
    /// Variant of the service.
    /// </summary>
    public ATMService18? ServiceVariant { get; init; } 
    /// <summary>
    /// Limits of amounts.
    /// </summary>
    public ATMTransactionAmounts6? Limits { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "SvcTp", xmlNamespace );
        writer.WriteValue(ServiceType.ToString()); // Enum value
        writer.WriteEndElement();
        if (ServiceVariant is ATMService18 ServiceVariantValue)
        {
            writer.WriteStartElement(null, "SvcVarnt", xmlNamespace );
            ServiceVariantValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (Limits is ATMTransactionAmounts6 LimitsValue)
        {
            writer.WriteStartElement(null, "Lmts", xmlNamespace );
            LimitsValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static ATMService19 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
