//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for ATMWithdrawalRequest1.  ISO2002 ID# _U0PCoIn1EeS9F4Qrq_eaVA.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Information related to the request of a withdrawal from an ATM.
/// </summary>
public partial record ATMWithdrawalRequest1
     : IIsoXmlSerilizable<ATMWithdrawalRequest1>
{
    #nullable enable
    
    /// <summary>
    /// Environment of the withdrawal transaction.
    /// </summary>
    public required ATMEnvironment1 Environment { get; init; } 
    /// <summary>
    /// Context in which the transaction is performed.
    /// </summary>
    public required ATMContext1 Context { get; init; } 
    /// <summary>
    /// Withdrawal transaction for which the authorisation is requested.
    /// </summary>
    public required ATMTransaction1 Transaction { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Envt", xmlNamespace );
        Environment.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "Cntxt", xmlNamespace );
        Context.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "Tx", xmlNamespace );
        Transaction.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
    }
    public static ATMWithdrawalRequest1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
