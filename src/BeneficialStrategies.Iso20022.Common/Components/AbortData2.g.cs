//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for AbortData2.  ISO2002 ID# _Ck5osQuIEeqYM5yH99IYQw.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Body of the Abort Request message.
/// </summary>
public partial record AbortData2
     : IIsoXmlSerilizable<AbortData2>
{
    #nullable enable
    
    /// <summary>
    /// Message identifier.
    /// </summary>
    public required IsoMax35Text ExchangeIdentification { get; init; } 
    /// <summary>
    /// Reason of aborting a transaction.
    /// </summary>
    public required IsoMax140Text AbortReason { get; init; } 
    /// <summary>
    /// To display an abort message to the Customer.
    /// </summary>
    public ActionMessage7? DisplayOutput { get; init; } 
    /// <summary>
    /// Outcome of the transaction at the acceptor.
    /// </summary>
    public IsoTrueFalseIndicator? TransactionSuccess { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "XchgId", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax35Text(ExchangeIdentification)); // data type Max35Text System.String
        writer.WriteEndElement();
        writer.WriteStartElement(null, "AbrtRsn", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax140Text(AbortReason)); // data type Max140Text System.String
        writer.WriteEndElement();
        if (DisplayOutput is ActionMessage7 DisplayOutputValue)
        {
            writer.WriteStartElement(null, "DispOutpt", xmlNamespace );
            DisplayOutputValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (TransactionSuccess is IsoTrueFalseIndicator TransactionSuccessValue)
        {
            writer.WriteStartElement(null, "TxSucss", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoTrueFalseIndicator(TransactionSuccessValue)); // data type TrueFalseIndicator System.String
            writer.WriteEndElement();
        }
    }
    public static AbortData2 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
