//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for AccountContract3.  ISO2002 ID# _UkPlQ9p-Ed-ak6NoX_4Aeg_1731275671.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Specifies target and actual dates dates related to account opening and closing.
/// </summary>
public partial record AccountContract3
     : IIsoXmlSerilizable<AccountContract3>
{
    #nullable enable
    
    /// <summary>
    /// Date on which the account and related basic services are expected to be operational for the account owner.
    /// </summary>
    public IsoISODate? TargetGoLiveDate { get; init; } 
    /// <summary>
    /// Date on which the account and related services are expected to cease to be operational for the account owner.
    /// </summary>
    public IsoISODate? TargetClosingDate { get; init; } 
    /// <summary>
    /// Date on which the account and related basic services are effectively operational for the account owner.
    /// </summary>
    public IsoISODate? GoLiveDate { get; init; } 
    /// <summary>
    /// Date on which the account and related services cease effectively to be operational for the account owner.
    /// </summary>
    public IsoISODate? ClosingDate { get; init; } 
    /// <summary>
    /// Indicator that the account opening/maintenance/closing process needs to be treated urgently, that is, sooner than the terms established by the service level agreed between the account holder customer and the account servicing institution.
    /// </summary>
    public IsoYesNoIndicator? UrgencyFlag { get; init; } 
    /// <summary>
    /// Indicates removal of the account. After removal, an account will not appear anymore in reports.
    /// </summary>
    public IsoYesNoIndicator? RemovalIndicator { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (TargetGoLiveDate is IsoISODate TargetGoLiveDateValue)
        {
            writer.WriteStartElement(null, "TrgtGoLiveDt", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoISODate(TargetGoLiveDateValue)); // data type ISODate System.DateOnly
            writer.WriteEndElement();
        }
        if (TargetClosingDate is IsoISODate TargetClosingDateValue)
        {
            writer.WriteStartElement(null, "TrgtClsgDt", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoISODate(TargetClosingDateValue)); // data type ISODate System.DateOnly
            writer.WriteEndElement();
        }
        if (GoLiveDate is IsoISODate GoLiveDateValue)
        {
            writer.WriteStartElement(null, "GoLiveDt", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoISODate(GoLiveDateValue)); // data type ISODate System.DateOnly
            writer.WriteEndElement();
        }
        if (ClosingDate is IsoISODate ClosingDateValue)
        {
            writer.WriteStartElement(null, "ClsgDt", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoISODate(ClosingDateValue)); // data type ISODate System.DateOnly
            writer.WriteEndElement();
        }
        if (UrgencyFlag is IsoYesNoIndicator UrgencyFlagValue)
        {
            writer.WriteStartElement(null, "UrgcyFlg", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoYesNoIndicator(UrgencyFlagValue)); // data type YesNoIndicator System.String
            writer.WriteEndElement();
        }
        if (RemovalIndicator is IsoYesNoIndicator RemovalIndicatorValue)
        {
            writer.WriteStartElement(null, "RmvlInd", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoYesNoIndicator(RemovalIndicatorValue)); // data type YesNoIndicator System.String
            writer.WriteEndElement();
        }
    }
    public static AccountContract3 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
