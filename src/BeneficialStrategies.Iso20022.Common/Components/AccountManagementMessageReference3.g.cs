//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for AccountManagementMessageReference3.  ISO2002 ID# _dJFMsSFeEeW9XJWqfgXIIA.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Information about the references of an account management instruction message.
/// </summary>
public partial record AccountManagementMessageReference3
     : IIsoXmlSerilizable<AccountManagementMessageReference3>
{
    #nullable enable
    
    /// <summary>
    /// Reference to a linked message.
    /// </summary>
    public LinkedMessage3Choice_? LinkedReference { get; init; } 
    /// <summary>
    /// Specifies if the status request refers to an earlier account opening or modification instruction message.
    /// </summary>
    public required AccountManagementType1Code StatusRequestType { get; init; } 
    /// <summary>
    /// Unique and unambiguous identifier of the account opening or account modification instruction at application level.
    /// </summary>
    public IsoMax35Text? AccountApplicationIdentification { get; init; } 
    /// <summary>
    /// Account to which the account opening is related.
    /// </summary>
    public IsoMax35Text? ExistingAccountIdentification { get; init; } 
    /// <summary>
    /// Account information for which the status of an account management instruction is requested.
    /// </summary>
    public InvestmentAccount53? InvestmentAccount { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (LinkedReference is LinkedMessage3Choice_ LinkedReferenceValue)
        {
            writer.WriteStartElement(null, "LkdRef", xmlNamespace );
            LinkedReferenceValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        writer.WriteStartElement(null, "StsReqTp", xmlNamespace );
        writer.WriteValue(StatusRequestType.ToString()); // Enum value
        writer.WriteEndElement();
        if (AccountApplicationIdentification is IsoMax35Text AccountApplicationIdentificationValue)
        {
            writer.WriteStartElement(null, "AcctApplId", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(AccountApplicationIdentificationValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
        if (ExistingAccountIdentification is IsoMax35Text ExistingAccountIdentificationValue)
        {
            writer.WriteStartElement(null, "ExstgAcctId", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(ExistingAccountIdentificationValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
        if (InvestmentAccount is InvestmentAccount53 InvestmentAccountValue)
        {
            writer.WriteStartElement(null, "InvstmtAcct", xmlNamespace );
            InvestmentAccountValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static AccountManagementMessageReference3 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
