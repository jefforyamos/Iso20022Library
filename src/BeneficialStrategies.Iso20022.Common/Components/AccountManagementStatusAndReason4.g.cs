//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for AccountManagementStatusAndReason4.  ISO2002 ID# _pxVPYSGaEeWKAaDJcYGKLw.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Status information.
/// </summary>
public partial record AccountManagementStatusAndReason4
     : IIsoXmlSerilizable<AccountManagementStatusAndReason4>
{
    #nullable enable
    
    /// <summary>
    /// Status of the account opening instruction or account modification instruction.
    /// </summary>
    public required Status20Choice_ Status { get; init; } 
    /// <summary>
    /// Unique and unambiguous identifier of the account opening or modification instruction at application level.
    /// </summary>
    public IsoMax35Text? AccountApplicationIdentification { get; init; } 
    /// <summary>
    /// Account to which the account opening is related.
    /// </summary>
    public IsoMax35Text? ExistingAccountIdentification { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Sts", xmlNamespace );
        Status.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (AccountApplicationIdentification is IsoMax35Text AccountApplicationIdentificationValue)
        {
            writer.WriteStartElement(null, "AcctApplId", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(AccountApplicationIdentificationValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
        if (ExistingAccountIdentification is IsoMax35Text ExistingAccountIdentificationValue)
        {
            writer.WriteStartElement(null, "ExstgAcctId", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(ExistingAccountIdentificationValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
    }
    public static AccountManagementStatusAndReason4 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
