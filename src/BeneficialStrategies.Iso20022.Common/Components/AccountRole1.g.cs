//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for AccountRole1.  ISO2002 ID# _l5A6kC_9EeOKib24wnHaFg.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Specifies the party and owner type.
/// </summary>
public partial record AccountRole1
     : IIsoXmlSerilizable<AccountRole1>
{
    #nullable enable
    
    /// <summary>
    /// Account owner/user identification and contact information.
    /// </summary>
    public required PartyIdentification41 Party { get; init; } 
    /// <summary>
    /// Defines account owners/users relation to the account.
    /// </summary>
    public required OwnerType1 OwnerType { get; init; } 
    /// <summary>
    /// Start date related to the role.
    /// </summary>
    public IsoISODate? StartDate { get; init; } 
    /// <summary>
    /// End date related to the role.
    /// </summary>
    public IsoISODate? EndDate { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Pty", xmlNamespace );
        Party.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "OwnrTp", xmlNamespace );
        OwnerType.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (StartDate is IsoISODate StartDateValue)
        {
            writer.WriteStartElement(null, "StartDt", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoISODate(StartDateValue)); // data type ISODate System.DateOnly
            writer.WriteEndElement();
        }
        if (EndDate is IsoISODate EndDateValue)
        {
            writer.WriteStartElement(null, "EndDt", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoISODate(EndDateValue)); // data type ISODate System.DateOnly
            writer.WriteEndElement();
        }
    }
    public static AccountRole1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
