//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for AcquirerProtocolParameters1.  ISO2002 ID# _KsqnwH1DEeCF8NjrBemJWQ_748699006.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Acceptor parameters dedicated to the acquirer protocol.
/// </summary>
[DataContract]
[XmlType]
public partial record AcquirerProtocolParameters1
{
    #nullable enable
    
    /// <summary>
    /// Identification of the acquirer using this protocol.
    /// </summary>
    [DataMember]
    public ValueList<GenericIdentification32> AcquirerIdentification { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Identification of the payment application, user of the acquirer protocol.
    /// </summary>
    [DataMember]
    public ValueList<IsoMax35Text> ApplicationIdentification { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Acquirer host configuration.
    /// </summary>
    [DataMember]
    public ValueList<AcquirerHostConfiguration1> Host { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Acquirer protocol parameters of transactions performing an online authorisation.
    /// </summary>
    [DataMember]
    public AcquirerProtocolParameters2? OnLineTransaction { get; init; } 
    /// <summary>
    /// Acquirer protocol parameters of transactions performing an offline authorisation.
    /// </summary>
    [DataMember]
    public AcquirerProtocolParameters2? OffLineTransaction { get; init; } 
    /// <summary>
    /// Configuration parameters of reconciliation exchanges.
    /// </summary>
    [DataMember]
    public ExchangeConfiguration1? ReconciliationExchange { get; init; } 
    /// <summary>
    /// Indicates the reconciliation period is assigned by the acquirer instead of the acceptor.
    /// </summary>
    [DataMember]
    public IsoTrueFalseIndicator? ReconciliationByAcquirer { get; init; } 
    /// <summary>
    /// Indicates the reconciliation total amounts are computed per currency.
    /// </summary>
    [DataMember]
    public IsoTrueFalseIndicator? TotalsPerCurrency { get; init; } 
    /// <summary>
    /// Types of transaction to include in the batch.
    /// </summary>
    [DataMember]
    public ValueList<BatchTransactionType1Code> BatchTransferContent { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Configuration of a message item.
    /// </summary>
    [DataMember]
    public ValueList<MessageItemCondition1> MessageItem { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Indicator to require protection of sensitive card data in messages.
    /// </summary>
    [DataMember]
    public required IsoTrueFalseIndicator ProtectCardData { get; init; } 
    
    #nullable disable
}
