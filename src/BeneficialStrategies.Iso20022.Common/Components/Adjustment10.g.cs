//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for Adjustment10.  ISO2002 ID# _TMwPmPJ0EeiJn9rM2Znz2w.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Describes each adjustment made to the original price.
/// </summary>
[DataContract]
[XmlType]
public partial record Adjustment10
{
    #nullable enable
    
    /// <summary>
    /// Type of adjustment.
    /// </summary>
    [DataMember]
    public IsoMax35Text? Type { get; init; } 
    /// <summary>
    /// Additional information to specify the type of adjustment.
    /// </summary>
    [DataMember]
    public IsoMax35Text? AdditionalType { get; init; } 
    /// <summary>
    /// Description of the adjustment.
    /// </summary>
    [DataMember]
    public IsoMax70Text? Description { get; init; } 
    /// <summary>
    /// Reason for the adjustment.
    /// </summary>
    [DataMember]
    public IsoMax35Text? Reason { get; init; } 
    /// <summary>
    /// Identifies when the item is eligible or prohibited from a discount or adjustment.
    /// </summary>
    [DataMember]
    public IsoTrueFalseIndicator? PromotionEligibility { get; init; } 
    /// <summary>
    /// Promotion or adjustment code.
    /// </summary>
    [DataMember]
    public IsoMax35Text? PromotionCode { get; init; } 
    /// <summary>
    /// May contain coupon number, discount code, etc.
    /// </summary>
    [DataMember]
    public IsoMax35Text? PromotionCouponNumber { get; init; } 
    /// <summary>
    /// Identifies the quantity of the item that is adjusted (can be less than the total quantity of the item being purchased).
    /// </summary>
    [DataMember]
    public IsoDecimalNumber? Quantity { get; init; } 
    /// <summary>
    /// Contains the adjusted unit price (does not include tax).
    /// </summary>
    [DataMember]
    public IsoImpliedCurrencyAndAmount? UnitPrice { get; init; } 
    /// <summary>
    /// Contains the percentage value of the discount (when applicable).
    /// </summary>
    [DataMember]
    public IsoPercentageRate? Percentage { get; init; } 
    /// <summary>
    /// Contains amount of the adjustment, exclusive of tax.
    /// </summary>
    [DataMember]
    public IsoImpliedCurrencyAndAmount? AdjustmentAmount { get; init; } 
    /// <summary>
    /// Indicates whether or not tax was calculated on the original amount of the transaction. 
    /// Note that false (or not present) indicates applicable taxes are based on adjusted amount.
    /// </summary>
    [DataMember]
    public IsoTrueFalseIndicator? TaxCalculatedOnOriginalAmount { get; init; } 
    
    #nullable disable
}
