//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for AlternatePartyIdentification9.  ISO2002 ID# _chc-7ZKQEeWHWpTQn1FFVg.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Alternate identification for a party using an identification type, a country code and a text field.
/// </summary>
public partial record AlternatePartyIdentification9
     : IIsoXmlSerilizable<AlternatePartyIdentification9>
{
    #nullable enable
    
    /// <summary>
    /// Specifies the type of alternate identification of the party identified.
    /// </summary>
    public required IdentificationType44Choice_ IdentificationType { get; init; } 
    /// <summary>
    /// Country in which a person resides (the place of a person's home). In the case of a company, it is the country from which the affairs of that company are directed.
    /// </summary>
    public required CountryCode Country { get; init; } 
    /// <summary>
    /// Alternate identification for a party.
    /// </summary>
    public required IsoRestrictedFINXMax30Text AlternateIdentification { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "IdTp", xmlNamespace );
        IdentificationType.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "Ctry", xmlNamespace );
        writer.WriteValue(Country.ToString()); // Enum value
        writer.WriteEndElement();
        writer.WriteStartElement(null, "AltrnId", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoRestrictedFINXMax30Text(AlternateIdentification)); // data type RestrictedFINXMax30Text System.String
        writer.WriteEndElement();
    }
    public static AlternatePartyIdentification9 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
