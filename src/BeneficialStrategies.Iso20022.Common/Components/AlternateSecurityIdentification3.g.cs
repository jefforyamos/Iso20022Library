//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for AlternateSecurityIdentification3.  ISO2002 ID# _SlI0Q9p-Ed-ak6NoX_4Aeg_735400890.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Proprietary or domestic identification scheme that uniquely identifies a security.
/// </summary>
public partial record AlternateSecurityIdentification3
     : IIsoXmlSerilizable<AlternateSecurityIdentification3>
{
    #nullable enable
    
    /// <summary>
    /// Unique and unambiguous identifier of a security.
    /// </summary>
    public required IsoMax70Text Identification { get; init; } 
    /// <summary>
    /// Country of the proprietary identification scheme.
    /// </summary>
    public required CountryCode DomesticIdentificationSource { get; init; } 
    /// <summary>
    /// Entity that issues the proprietary identification.
    /// </summary>
    public required IsoMax35Text ProprietaryIdentificationSource { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Id", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax70Text(Identification)); // data type Max70Text System.String
        writer.WriteEndElement();
        writer.WriteStartElement(null, "DmstIdSrc", xmlNamespace );
        writer.WriteValue(DomesticIdentificationSource.ToString()); // Enum value
        writer.WriteEndElement();
        writer.WriteStartElement(null, "PrtryIdSrc", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax35Text(ProprietaryIdentificationSource)); // data type Max35Text System.String
        writer.WriteEndElement();
    }
    public static AlternateSecurityIdentification3 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
