//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for AmountAndCurrencyExchange2.  ISO2002 ID# _SVf1xNp-Ed-ak6NoX_4Aeg_1205555994.
//

using BeneficialStrategies.Iso20022.Choices;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Set of elements providing information on the original amount and currency information.
/// </summary>
public partial record AmountAndCurrencyExchange2
{
    #nullable enable
    
    /// <summary>
    /// Identifies the amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party and provides currency exchange info in case the instructed amount and/or currency is/are different from the entry amount and/or currency.
    /// </summary>
    public AmountAndCurrencyExchangeDetails1? InstructedAmount { get; init; } 
    /// <summary>
    /// Amount of the underlying transaction.
    /// </summary>
    public AmountAndCurrencyExchangeDetails1? TransactionAmount { get; init; } 
    /// <summary>
    /// Identifies the countervalue amount and provides currency exchange information. Either the counter amount quoted in an FX deal, or the result of the currency information applied to an instructed amount, before deduction of charges.
    /// </summary>
    public AmountAndCurrencyExchangeDetails1? CounterValueAmount { get; init; } 
    /// <summary>
    /// Information on the amount of money, based on terms of corporate action event and balance of underlying securities, entitled to/from the account owner.||Amount of money, based on terms of corporate action event and balance of underlying securities, entitled to/from the account owner.|In those situations, this amount may alternatively be called entitled amount.
    /// </summary>
    public AmountAndCurrencyExchangeDetails1? AnnouncedPostingAmount { get; init; } 
    /// <summary>
    /// Provides proprietary amount information.
    /// </summary>
    public AmountAndCurrencyExchangeDetails2? ProprietaryAmount { get; init;  } // Warning: Don't know multiplicity.
    
    #nullable disable
}
