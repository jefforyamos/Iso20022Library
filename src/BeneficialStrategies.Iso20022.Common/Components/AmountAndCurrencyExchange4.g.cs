//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for AmountAndCurrencyExchange4.  ISO2002 ID# _l5QfsQ5rEe2xs7BqO31w6w.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Set of elements used to provide information on the original amount.
/// </summary>
public partial record AmountAndCurrencyExchange4
{
    #nullable enable
    
    /// <summary>
    /// Identifies the amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party and provides currency exchange information in case the instructed amount and/or currency is/are different from the entry amount and/or currency.
    /// </summary>
    public AmountAndCurrencyExchangeDetails5? InstructedAmount { get; init; } 
    /// <summary>
    /// Amount of the underlying transaction.
    /// </summary>
    public AmountAndCurrencyExchangeDetails5? TransactionAmount { get; init; } 
    /// <summary>
    /// Set of elements used to provide the countervalue amount and currency exchange information. |Usage: This can be either the counter amount quoted in an FX deal, or the result of the currency information applied to an instructed amount, before deduction of charges.
    /// </summary>
    public AmountAndCurrencyExchangeDetails5? CounterValueAmount { get; init; } 
    /// <summary>
    /// Amount of money, based on terms of corporate action event and balance of underlying securities, entitled to/from the account owner.|In some situations, this amount may alternatively be called entitled amount.
    /// </summary>
    public AmountAndCurrencyExchangeDetails5? AnnouncedPostingAmount { get; init; } 
    /// <summary>
    /// Set of elements used to provide information on the original amount and currency exchange.
    /// </summary>
    public AmountAndCurrencyExchangeDetails6? ProprietaryAmount { get; init;  } // Warning: Don't know multiplicity.
    
    #nullable disable
}
