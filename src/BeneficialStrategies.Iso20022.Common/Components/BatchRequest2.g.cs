//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for BatchRequest2.  ISO2002 ID# _kiglgQxrEeqdx6buGpCCQw.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Data to request a Batch service.
/// </summary>
public partial record BatchRequest2
     : IIsoXmlSerilizable<BatchRequest2>
{
    #nullable enable
    
    /// <summary>
    /// Flag to remove all the transactions.
    /// </summary>
    public IsoTrueFalseIndicator? RemoveAllFlag { get; init; } 
    /// <summary>
    /// Content of the Batch Request message.
    /// </summary>
    public TransactionToPerform2Choice_? TransactionToPerform { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (RemoveAllFlag is IsoTrueFalseIndicator RemoveAllFlagValue)
        {
            writer.WriteStartElement(null, "RmvAllFlg", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoTrueFalseIndicator(RemoveAllFlagValue)); // data type TrueFalseIndicator System.String
            writer.WriteEndElement();
        }
        if (TransactionToPerform is TransactionToPerform2Choice_ TransactionToPerformValue)
        {
            writer.WriteStartElement(null, "TxToPrfrm", xmlNamespace );
            TransactionToPerformValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static BatchRequest2 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
