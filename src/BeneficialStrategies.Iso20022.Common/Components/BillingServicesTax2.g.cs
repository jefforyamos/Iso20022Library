//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for BillingServicesTax2.  ISO2002 ID# _6RcRcJqlEeGSON8vddiWzQ_-480249725.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Provides for regional taxes on the service.
/// </summary>
public partial record BillingServicesTax2
     : IIsoXmlSerilizable<BillingServicesTax2>
{
    #nullable enable
    
    /// <summary>
    /// Identification number of the specific region tax used to calculate the tax.
    /// </summary>
    public required IsoMax35Text Number { get; init; } 
    /// <summary>
    /// Name used to describe the tax (such as the national value added tax).
    /// </summary>
    public IsoMax40Text? Description { get; init; } 
    /// <summary>
    /// Rate used to calculate the tax.
    /// </summary>
    public required IsoDecimalNumber Rate { get; init; } 
    /// <summary>
    /// Amount of the tax obligation expressed in the tax region's pricing currency.
    /// </summary>
    public required AmountAndDirection34 PricingAmount { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Nb", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax35Text(Number)); // data type Max35Text System.String
        writer.WriteEndElement();
        if (Description is IsoMax40Text DescriptionValue)
        {
            writer.WriteStartElement(null, "Desc", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax40Text(DescriptionValue)); // data type Max40Text System.String
            writer.WriteEndElement();
        }
        writer.WriteStartElement(null, "Rate", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoDecimalNumber(Rate)); // data type DecimalNumber System.UInt64
        writer.WriteEndElement();
        writer.WriteStartElement(null, "PricgAmt", xmlNamespace );
        PricingAmount.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
    }
    public static BillingServicesTax2 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
