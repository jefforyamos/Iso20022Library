//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for BlockChainAddressWallet9.  ISO2002 ID# _HdKMsUfFEey6Is2iMqV8fg.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Digital account where digital assets or digital tokens can be stored and where an entry is made.
/// </summary>
public partial record BlockChainAddressWallet9
     : IIsoXmlSerilizable<BlockChainAddressWallet9>
{
    #nullable enable
    
    /// <summary>
    /// Unambiguous identification for the account between the account owner and the account servicer.”.
    /// </summary>
    public required IsoRestrictedFINXMax140Text Identification { get; init; } 
    /// <summary>
    /// Specifies the type of securities account.
    /// </summary>
    public PurposeCode8Choice_? Type { get; init; } 
    /// <summary>
    /// Description of the account.
    /// </summary>
    public IsoRestrictedFINXMax70Text? Name { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Id", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoRestrictedFINXMax140Text(Identification)); // data type RestrictedFINXMax140Text System.String
        writer.WriteEndElement();
        if (Type is PurposeCode8Choice_ TypeValue)
        {
            writer.WriteStartElement(null, "Tp", xmlNamespace );
            TypeValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (Name is IsoRestrictedFINXMax70Text NameValue)
        {
            writer.WriteStartElement(null, "Nm", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoRestrictedFINXMax70Text(NameValue)); // data type RestrictedFINXMax70Text System.String
            writer.WriteEndElement();
        }
    }
    public static BlockChainAddressWallet9 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
