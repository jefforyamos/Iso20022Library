//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CancelledStatus1.  ISO2002 ID# _UwnNXNp-Ed-ak6NoX_4Aeg_-1540666967.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Status is cancelled.
/// </summary>
public partial record CancelledStatus1
     : IIsoXmlSerilizable<CancelledStatus1>
{
    #nullable enable
    
    /// <summary>
    /// Indicates that there is no reason available or to report.
    /// </summary>
    public required NoReasonCode NoReason { get; init; } 
    /// <summary>
    /// Reason for a cancelled status in the report.
    /// </summary>
    public required CancelledStatusReason1 Reason { get; init; } 
    /// <summary>
    /// Proprietary identification of a reason for a cancelled status in the report.
    /// </summary>
    public required GenericIdentification1 DataSourceScheme { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "NoRsn", xmlNamespace );
        writer.WriteValue(NoReason.ToString()); // Enum value
        writer.WriteEndElement();
        writer.WriteStartElement(null, "Rsn", xmlNamespace );
        Reason.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "DataSrcSchme", xmlNamespace );
        DataSourceScheme.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
    }
    public static CancelledStatus1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
