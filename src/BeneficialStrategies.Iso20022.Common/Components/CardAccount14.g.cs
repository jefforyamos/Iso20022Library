//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CardAccount14.  ISO2002 ID# _FT8w4dmqEeeN3v2fup_Shw.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Way to identify a customer account or a relationship to its account affected for the transaction.
/// </summary>
[DataContract]
[XmlType]
public partial record CardAccount14
{
    #nullable enable
    
    /// <summary>
    /// Method used by the cardholder and the terminal for the choice of the account.
    /// </summary>
    [DataMember]
    public AccountChoiceMethod1Code? SelectionMethod { get; init; } 
    /// <summary>
    /// Type of cardholder account used for the transaction.
    /// </summary>
    [DataMember]
    public CardAccountType3Code? SelectedAccountType { get; init; } 
    /// <summary>
    /// Name of the account, as assigned by the account servicing institution, in agreement with the account owner in order to provide an additional means of identification of the account.
    /// Usage: The account name is different from the account owner name. The account name is used in certain user communities to provide a means of identifying the account, in addition to the account owner's identity and the account number.
    /// </summary>
    [DataMember]
    public IsoMax70Text? AccountName { get; init; } 
    /// <summary>
    /// Party that legally owns the account.
    /// </summary>
    [DataMember]
    public NameAndAddress3? AccountOwner { get; init; } 
    /// <summary>
    /// Identification of the currency in which the account is held.
    /// </summary>
    [DataMember]
    public ActiveCurrencyCode? Currency { get; init; } 
    /// <summary>
    /// Unique identifier of the account, as assigned by the account servicer.
    /// </summary>
    [DataMember]
    public AccountIdentification39Choice_? AccountIdentifier { get; init; } 
    /// <summary>
    /// Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account.
    /// </summary>
    [DataMember]
    public PartyIdentification72Choice_? Servicer { get; init; } 
    
    #nullable disable
}
