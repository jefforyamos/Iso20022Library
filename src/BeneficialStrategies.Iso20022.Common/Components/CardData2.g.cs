//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CardData2.  ISO2002 ID# _77QEcVaJEeeFltjJxERUxw.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Non-protected sensitive data associated with the card or payment token performing the transaction.
/// </summary>
public partial record CardData2
     : IIsoXmlSerilizable<CardData2>
{
    #nullable enable
    
    /// <summary>
    /// Primary Account Number (PAN) of the card or a surrogate of the PAN such as a payment token.
    /// ISO 8583 bit 2
    /// </summary>
    public IsoMax19NumericText? PAN { get; init; } 
    /// <summary>
    /// Distinguishes between instances of the same payment card.
    /// ISO 8583 bit 23
    /// </summary>
    public IsoMin2Max3NumericText? CardSequenceNumber { get; init; } 
    /// <summary>
    /// Unique non-financial reference assigned to a given PAN. May be used to link the transaction activity to that PAN.
    /// ISO 8583:87 bit 56 (TLV tag 01/dataset 71)
    /// ISO 8583:93 bit 112 (TLV tag 01/dataset 71)
    /// ISO 8583:2003 bit 51 (TLV tag 01/dataset 71)
    /// </summary>
    public IsoMax35Text? PaymentAccountReference { get; init; } 
    /// <summary>
    /// Identifies the card portfolio. 
    /// </summary>
    public IsoMax35Text? CardPortfolioIdentifier { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (PAN is IsoMax19NumericText PANValue)
        {
            writer.WriteStartElement(null, "PAN", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax19NumericText(PANValue)); // data type Max19NumericText System.String
            writer.WriteEndElement();
        }
        if (CardSequenceNumber is IsoMin2Max3NumericText CardSequenceNumberValue)
        {
            writer.WriteStartElement(null, "CardSeqNb", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMin2Max3NumericText(CardSequenceNumberValue)); // data type Min2Max3NumericText System.String
            writer.WriteEndElement();
        }
        if (PaymentAccountReference is IsoMax35Text PaymentAccountReferenceValue)
        {
            writer.WriteStartElement(null, "PmtAcctRef", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(PaymentAccountReferenceValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
        if (CardPortfolioIdentifier is IsoMax35Text CardPortfolioIdentifierValue)
        {
            writer.WriteStartElement(null, "CardPrtflIdr", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(CardPortfolioIdentifierValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
    }
    public static CardData2 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
