//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CardPaymentToken1.  ISO2002 ID# __GUTcGkgEeSTIuB9A-QJ6g.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Payment token information.
/// </summary>
public partial record CardPaymentToken1
     : IIsoXmlSerilizable<CardPaymentToken1>
{
    #nullable enable
    
    /// <summary>
    /// Additional token payment information.
    /// </summary>
    public IsoMax35Text? TokenCharacteristic { get; init; } 
    /// <summary>
    /// Identifier of a token provider requestor.
    /// </summary>
    public PaymentTokenIdentifiers1? TokenRequestor { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (TokenCharacteristic is IsoMax35Text TokenCharacteristicValue)
        {
            writer.WriteStartElement(null, "TknChrtc", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(TokenCharacteristicValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
        if (TokenRequestor is PaymentTokenIdentifiers1 TokenRequestorValue)
        {
            writer.WriteStartElement(null, "TknRqstr", xmlNamespace );
            TokenRequestorValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static CardPaymentToken1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
