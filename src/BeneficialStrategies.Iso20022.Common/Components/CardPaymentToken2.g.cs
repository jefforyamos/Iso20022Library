//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CardPaymentToken2.  ISO2002 ID# _LTwEMWkiEeSTIuB9A-QJ6g.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Payment token information.
/// </summary>
public partial record CardPaymentToken2
     : IIsoXmlSerilizable<CardPaymentToken2>
{
    #nullable enable
    
    /// <summary>
    /// Additional token payment information.
    /// </summary>
    public IsoMax35Text? TokenCharacteristic { get; init; } 
    /// <summary>
    /// Level of confidence resulting of the identification and authentication of the cardholder performed and the entity that performed it.
    /// </summary>
    public IsoNumber? TokenAssuranceLevel { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (TokenCharacteristic is IsoMax35Text TokenCharacteristicValue)
        {
            writer.WriteStartElement(null, "TknChrtc", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(TokenCharacteristicValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
        if (TokenAssuranceLevel is IsoNumber TokenAssuranceLevelValue)
        {
            writer.WriteStartElement(null, "TknAssrncLvl", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoNumber(TokenAssuranceLevelValue)); // data type Number System.UInt64
            writer.WriteEndElement();
        }
    }
    public static CardPaymentToken2 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
