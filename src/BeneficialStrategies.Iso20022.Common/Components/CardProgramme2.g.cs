//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CardProgramme2.  ISO2002 ID# _h6JQ4SuBEeyg-aG5nXcnfg.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Card programme or brand related to the transaction.
/// </summary>
public partial record CardProgramme2
     : IIsoXmlSerilizable<CardProgramme2>
{
    #nullable enable
    
    /// <summary>
    /// Card programme or brand proposed for the transaction.
    /// </summary>
    public CardProgrammeMode2? CardProgrammeProposed { get; init; } 
    /// <summary>
    /// Card programme or brand actually applied to the transaction.
    /// ISO 8583:87 bit 24
    /// </summary>
    public CardProgrammeMode3? CardProgrammeApplied { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (CardProgrammeProposed is CardProgrammeMode2 CardProgrammeProposedValue)
        {
            writer.WriteStartElement(null, "CardPrgrmmPropsd", xmlNamespace );
            CardProgrammeProposedValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (CardProgrammeApplied is CardProgrammeMode3 CardProgrammeAppliedValue)
        {
            writer.WriteStartElement(null, "CardPrgrmmApld", xmlNamespace );
            CardProgrammeAppliedValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static CardProgramme2 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
