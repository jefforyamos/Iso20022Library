//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CardSecurityInformation1.  ISO2002 ID# _SqR5xAEcEeCQm6a_G2yO_w_383431093.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Card security code (CSC) associated with the card performing the transaction.
/// </summary>
public partial record CardSecurityInformation1
     : IIsoXmlSerilizable<CardSecurityInformation1>
{
    #nullable enable
    
    /// <summary>
    /// Card security code (CSC) management associated with the transaction.
    /// </summary>
    public required CSCManagement1Code CSCManagement { get; init; } 
    /// <summary>
    /// Card security code (CSC).
    /// </summary>
    public IsoMin3Max4NumericText? CSCValue { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "CSCMgmt", xmlNamespace );
        writer.WriteValue(CSCManagement.ToString()); // Enum value
        writer.WriteEndElement();
        if (CSCValue is IsoMin3Max4NumericText CSCValueValue)
        {
            writer.WriteStartElement(null, "CSCVal", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMin3Max4NumericText(CSCValueValue)); // data type Min3Max4NumericText System.String
            writer.WriteEndElement();
        }
    }
    public static CardSecurityInformation1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
