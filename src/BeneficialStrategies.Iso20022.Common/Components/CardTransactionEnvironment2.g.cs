//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CardTransactionEnvironment2.  ISO2002 ID# _ZeCrQXuPEeSVeNXcmBQ4hQ.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Environment of the transaction.
/// </summary>
public partial record CardTransactionEnvironment2
     : IIsoXmlSerilizable<CardTransactionEnvironment2>
{
    #nullable enable
    
    /// <summary>
    /// Acquirer identification of the transaction.
    /// </summary>
    public required IsoMax35Text AcquirerIdentification { get; init; } 
    /// <summary>
    /// Identification of the interconnected card scheme from which the response is coming.
    /// </summary>
    public IsoMax35Text? CardSchemeIdentification { get; init; } 
    /// <summary>
    /// Identification of the card acceptor performing the transaction.
    /// </summary>
    public IsoMax35Text? AcceptorIdentification { get; init; } 
    /// <summary>
    /// Identification of the card terminal performing the transaction.
    /// </summary>
    public IsoMax35Text? TerminalIdentification { get; init; } 
    /// <summary>
    /// Card performing the transaction.
    /// </summary>
    public required PaymentCard13 Card { get; init; } 
    /// <summary>
    /// Payment token information.
    /// </summary>
    public CardPaymentToken2? PaymentToken { get; init; } 
    /// <summary>
    /// Postal address for delivery of goods or services.
    /// </summary>
    public PostalAddress18? ShippingAddress { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "AcqrrId", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax35Text(AcquirerIdentification)); // data type Max35Text System.String
        writer.WriteEndElement();
        if (CardSchemeIdentification is IsoMax35Text CardSchemeIdentificationValue)
        {
            writer.WriteStartElement(null, "CardSchmeId", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(CardSchemeIdentificationValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
        if (AcceptorIdentification is IsoMax35Text AcceptorIdentificationValue)
        {
            writer.WriteStartElement(null, "AccptrId", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(AcceptorIdentificationValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
        if (TerminalIdentification is IsoMax35Text TerminalIdentificationValue)
        {
            writer.WriteStartElement(null, "TermnlId", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(TerminalIdentificationValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
        writer.WriteStartElement(null, "Card", xmlNamespace );
        Card.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (PaymentToken is CardPaymentToken2 PaymentTokenValue)
        {
            writer.WriteStartElement(null, "PmtTkn", xmlNamespace );
            PaymentTokenValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (ShippingAddress is PostalAddress18 ShippingAddressValue)
        {
            writer.WriteStartElement(null, "ShppgAdr", xmlNamespace );
            ShippingAddressValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static CardTransactionEnvironment2 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
