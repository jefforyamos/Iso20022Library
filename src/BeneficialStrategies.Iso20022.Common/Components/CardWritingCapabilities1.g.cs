//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CardWritingCapabilities1.  ISO2002 ID# _BQxRQTEvEeyjbpgZW6G1Fg.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Card writing capability of the terminal performing the transaction.
/// </summary>
public partial record CardWritingCapabilities1
     : IIsoXmlSerilizable<CardWritingCapabilities1>
{
    #nullable enable
    
    /// <summary>
    /// Card writing capability of the terminal performing the transaction.
    /// </summary>
    public required CardDataWriting1Code Capability { get; init; } 
    /// <summary>
    /// Other types of card data writing capabilities.
    /// </summary>
    public IsoMax35Text? OtherCapability { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Cpblty", xmlNamespace );
        writer.WriteValue(Capability.ToString()); // Enum value
        writer.WriteEndElement();
        if (OtherCapability is IsoMax35Text OtherCapabilityValue)
        {
            writer.WriteStartElement(null, "OthrCpblty", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(OtherCapabilityValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
    }
    public static CardWritingCapabilities1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
