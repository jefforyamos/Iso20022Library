//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for Cardholder1.  ISO2002 ID# _SqIIywEcEeCQm6a_G2yO_w_1845614557.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Data related to the cardholder.
/// </summary>
public partial record Cardholder1
     : IIsoXmlSerilizable<Cardholder1>
{
    #nullable enable
    
    /// <summary>
    /// Identification of the cardholder involved in a transaction.
    /// </summary>
    public CardholderIdentification1? Identification { get; init; } 
    /// <summary>
    /// Cardholder name associated with the card.
    /// </summary>
    public IsoMax45Text? Name { get; init; } 
    /// <summary>
    /// Language selected for the cardholder interface during the transaction.
    /// </summary>
    public ISO2ALanguageCode? Language { get; init; } 
    /// <summary>
    /// Data related to the authentication of the cardholder.
    /// </summary>
    public CardholderAuthentication1? Authentication { get; init; } 
    /// <summary>
    /// Numeric characters of the cardholder's address for verification.
    /// </summary>
    public AddressVerification1? AddressVerification { get; init; } 
    /// <summary>
    /// Identifies personal data related to the cardholder.
    /// </summary>
    public IsoMax70Text? PersonalData { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (Identification is CardholderIdentification1 IdentificationValue)
        {
            writer.WriteStartElement(null, "Id", xmlNamespace );
            IdentificationValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (Name is IsoMax45Text NameValue)
        {
            writer.WriteStartElement(null, "Nm", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax45Text(NameValue)); // data type Max45Text System.String
            writer.WriteEndElement();
        }
        if (Language is ISO2ALanguageCode LanguageValue)
        {
            writer.WriteStartElement(null, "Lang", xmlNamespace );
            writer.WriteValue(LanguageValue.ToString()); // Enum value
            writer.WriteEndElement();
        }
        if (Authentication is CardholderAuthentication1 AuthenticationValue)
        {
            writer.WriteStartElement(null, "Authntcn", xmlNamespace );
            AuthenticationValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (AddressVerification is AddressVerification1 AddressVerificationValue)
        {
            writer.WriteStartElement(null, "AdrVrfctn", xmlNamespace );
            AddressVerificationValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (PersonalData is IsoMax70Text PersonalDataValue)
        {
            writer.WriteStartElement(null, "PrsnlData", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax70Text(PersonalDataValue)); // data type Max70Text System.String
            writer.WriteEndElement();
        }
    }
    public static Cardholder1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
