//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CardholderAuthentication5.  ISO2002 ID# _kpi3wS_yEeO4w-IWHJMI9g.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Data related to the authentication of the cardholder.
/// </summary>
public partial record CardholderAuthentication5
     : IIsoXmlSerilizable<CardholderAuthentication5>
{
    #nullable enable
    
    /// <summary>
    /// Method used to authenticate a cardholder.
    /// </summary>
    public required AuthenticationMethod2Code AuthenticationMethod { get; init; } 
    /// <summary>
    /// Entity or object in charge of verifying the cardholder authenticity.
    /// </summary>
    public AuthenticationEntity1Code? AuthenticationEntity { get; init; } 
    /// <summary>
    /// Value used to authenticate the cardholder.
    /// </summary>
    public IsoMax40Text? AuthenticationValue { get; init; } 
    /// <summary>
    /// Encrypted personal identification number (PIN) and related information.
    /// </summary>
    public OnLinePIN3? CardholderOnLinePIN { get; init; } 
    /// <summary>
    /// Identifies in electronic commerce transactions whether customer authentication is supported and data is available.
    /// </summary>
    public IsoMax35Text? AuthenticationCollectionIndicator { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "AuthntcnMtd", xmlNamespace );
        writer.WriteValue(AuthenticationMethod.ToString()); // Enum value
        writer.WriteEndElement();
        if (AuthenticationEntity is AuthenticationEntity1Code AuthenticationEntityValue)
        {
            writer.WriteStartElement(null, "AuthntcnNtty", xmlNamespace );
            writer.WriteValue(AuthenticationEntityValue.ToString()); // Enum value
            writer.WriteEndElement();
        }
        if (AuthenticationValue is IsoMax40Text AuthenticationValueValue)
        {
            writer.WriteStartElement(null, "AuthntcnVal", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax40Text(AuthenticationValueValue)); // data type Max40Text System.String
            writer.WriteEndElement();
        }
        if (CardholderOnLinePIN is OnLinePIN3 CardholderOnLinePINValue)
        {
            writer.WriteStartElement(null, "CrdhldrOnLinePIN", xmlNamespace );
            CardholderOnLinePINValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (AuthenticationCollectionIndicator is IsoMax35Text AuthenticationCollectionIndicatorValue)
        {
            writer.WriteStartElement(null, "AuthntcnColltnInd", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(AuthenticationCollectionIndicatorValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
    }
    public static CardholderAuthentication5 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
