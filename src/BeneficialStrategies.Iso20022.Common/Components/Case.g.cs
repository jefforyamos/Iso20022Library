//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for Case.  ISO2002 ID# _SpAnotp-Ed-ak6NoX_4Aeg_136183535.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Information identifying a case.
/// </summary>
public partial record Case
     : IIsoXmlSerilizable<Case>
{
    #nullable enable
    
    /// <summary>
    /// Unique id assigned by the case creator.
    /// </summary>
    public required IsoMax35Text Identification { get; init; } 
    /// <summary>
    /// Party that created the case.
    /// </summary>
    public required IsoAnyBICIdentifier Creator { get; init; } 
    /// <summary>
    /// Set to yes if the case was closed and needs to be re-opened.
    /// </summary>
    public IsoYesNoIndicator? ReopenCaseIndication { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Id", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax35Text(Identification)); // data type Max35Text System.String
        writer.WriteEndElement();
        writer.WriteStartElement(null, "Cretr", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoAnyBICIdentifier(Creator)); // data type AnyBICIdentifier System.String
        writer.WriteEndElement();
        if (ReopenCaseIndication is IsoYesNoIndicator ReopenCaseIndicationValue)
        {
            writer.WriteStartElement(null, "ReopCaseIndctn", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoYesNoIndicator(ReopenCaseIndicationValue)); // data type YesNoIndicator System.String
            writer.WriteEndElement();
        }
    }
    public static Case Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
