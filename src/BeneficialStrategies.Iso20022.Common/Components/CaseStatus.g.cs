//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CaseStatus.  ISO2002 ID# _VJDih9p-Ed-ak6NoX_4Aeg_964129193.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Defines the status of an investigation case.
/// </summary>
public partial record CaseStatus
     : IIsoXmlSerilizable<CaseStatus>
{
    #nullable enable
    
    /// <summary>
    /// Date and time of the status.
    /// </summary>
    public required IsoISODateTime DateTime { get; init; } 
    /// <summary>
    /// Status of the case.
    /// </summary>
    public required CaseStatus1Code Value { get; init; } 
    /// <summary>
    /// Status of the investigation.
    /// </summary>
    public InvestigationExecutionConfirmation1Code? InvestigationStatus { get; init; } 
    /// <summary>
    /// Free text justification of the status.
    /// </summary>
    public IsoMax140Text? Reason { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "DtTm", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoISODateTime(DateTime)); // data type ISODateTime System.DateTime
        writer.WriteEndElement();
        writer.WriteStartElement(null, "CaseSts", xmlNamespace );
        writer.WriteValue(Value.ToString()); // Enum value
        writer.WriteEndElement();
        if (InvestigationStatus is InvestigationExecutionConfirmation1Code InvestigationStatusValue)
        {
            writer.WriteStartElement(null, "InvstgtnSts", xmlNamespace );
            writer.WriteValue(InvestigationStatusValue.ToString()); // Enum value
            writer.WriteEndElement();
        }
        if (Reason is IsoMax140Text ReasonValue)
        {
            writer.WriteStartElement(null, "Rsn", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax140Text(ReasonValue)); // data type Max140Text System.String
            writer.WriteEndElement();
        }
    }
    public static CaseStatus Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
