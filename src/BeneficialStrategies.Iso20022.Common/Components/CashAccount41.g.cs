//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CashAccount41.  ISO2002 ID# _a99FF9cZEeqRFcf2R4bPBw.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Provides the details to identify an account.
/// </summary>
[DataContract]
[XmlType]
public partial record CashAccount41
{
    #nullable enable
    
    /// <summary>
    /// Unique and unambiguous identification for the account between the account owner and the account servicer.
    /// </summary>
    [DataMember]
    public AccountIdentification4Choice_? Identification { get; init; } 
    /// <summary>
    /// Specifies the nature, or use of the account.
    /// </summary>
    [DataMember]
    public CashAccountType2Choice_? Type { get; init; } 
    /// <summary>
    /// Identification of the currency in which the account is held.
    /// </summary>
    [DataMember]
    public ActiveOrHistoricCurrencyCode? Currency { get; init; } 
    /// <summary>
    /// Name of the account, as assigned by the account servicing institution, in agreement with the account owner in order to provide an additional means of identification of the account.||Usage: The account name is different from the account owner name. The account name is used in certain user communities to provide a means of identifying the account, in addition to the account owner's identity and the account number.
    /// </summary>
    [DataMember]
    public IsoMax70Text? Name { get; init; } 
    /// <summary>
    /// Specifies an alternate assumed name for the identification of the account. 
    /// </summary>
    [DataMember]
    public ProxyAccountIdentification1? Proxy { get; init; } 
    /// <summary>
    /// Party that legally owns the account.
    /// </summary>
    [DataMember]
    public PartyIdentification135? Owner { get; init; } 
    /// <summary>
    /// Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account.
    /// </summary>
    [DataMember]
    public BranchAndFinancialInstitutionIdentification6? Servicer { get; init; } 
    
    #nullable disable
}
