//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CashOption60.  ISO2002 ID# _skzEd83wEee5nJBZsW8MFQ.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Provides information about the cash option.
/// </summary>
[DataContract]
[XmlType]
public partial record CashOption60
{
    #nullable enable
    
    /// <summary>
    /// Indicates whether the value is a debit or credit.
    /// </summary>
    [DataMember]
    public required CreditDebitCode CreditDebitIndicator { get; init; } 
    /// <summary>
    /// Indicates whether the cash payment occurs or will occur in advance of receipt of proceeds from the issuer and based on a contractual agreement established with the account servicer or upon receipt of proceeds from the issuer.
    /// </summary>
    [DataMember]
    public Payment1Code? ContractualPaymentIndicator { get; init; } 
    /// <summary>
    /// Proceeds are taxable according to the information provided by the issuer / offeror.
    /// </summary>
    [DataMember]
    public IssuerOfferorTaxabilityIndicator1Choice_? IssuerOfferorTaxabilityIndicator { get; init; } 
    /// <summary>
    /// Specifies the type of income.|The lists of income type codes to be used, are available on the SMPG website at www.smpg.info.
    /// </summary>
    [DataMember]
    public GenericIdentification47? IncomeType { get; init; } 
    /// <summary>
    /// Specifies the basis for the reduced rate of withholding.
    /// </summary>
    [DataMember]
    public ValueList<GenericIdentification47> ExemptionType { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Indicates the country from which the income originates.
    /// </summary>
    [DataMember]
    public CountryCode? CountryOfIncomeSource { get; init; } 
    /// <summary>
    /// Choice between a cash account, a charges account or a tax account.
    /// </summary>
    [DataMember]
    public Account9Choice_? Account { get; init; } 
    /// <summary>
    /// Provides information about cash parties.
    /// </summary>
    [DataMember]
    public CashParties29? CashParties { get; init; } 
    /// <summary>
    /// Provides information about the amounts related to a cash movement.
    /// </summary>
    [DataMember]
    public required CorporateActionAmounts45 AmountDetails { get; init; } 
    /// <summary>
    /// Provides information about the dates related to a cash movement.
    /// </summary>
    [DataMember]
    public required CorporateActionDate65 DateDetails { get; init; } 
    /// <summary>
    /// Exchange rate between the amount and the resulting amount.
    /// </summary>
    [DataMember]
    public ForeignExchangeTerms27? ForeignExchangeDetails { get; init; } 
    /// <summary>
    /// Provides information about the tax voucher related to a cash movement.
    /// </summary>
    [DataMember]
    public TaxVoucher5? TaxVoucherDetails { get; init; } 
    /// <summary>
    /// Provides information about the corporate action option.
    /// </summary>
    [DataMember]
    public RateDetails33? RateAndAmountDetails { get; init; } 
    /// <summary>
    /// Provides information about the prices related to a corporate action option.
    /// </summary>
    [DataMember]
    public PriceDetails24? PriceDetails { get; init; } 
    
    #nullable disable
}
