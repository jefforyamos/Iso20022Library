//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CertificateIssuer1.  ISO2002 ID# _Sw--vQEcEeCQm6a_G2yO_w_152932975.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Xml.Linq;

#if NET6_0_OR_GREATER // C# 10 
#else
using System.DateOnly=System.DateTime; // So data types will degrade gracefully
using System.TimeOnly=System.DateTime; // Same with this data type
#endif
namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Certificate issuer name (see X.509).
/// </summary>
[IsoId("_Sw--vQEcEeCQm6a_G2yO_w_152932975")]
#if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
[DisplayName("Certificate Issuer")]
#endif
#if DECLARE_SERIALIZABLE
[Serializable]
#endif
#if DECLARE_DATACONTRACT
[DataContract]
#endif
public partial record CertificateIssuer1
{
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    // No constructor needed for NET8 and above.
    #else
    // No constructor needed for < NET8 because this type has no required members.
    #endif
    #nullable enable
    
    /// <summary>
    /// Relative distinguished name inside a X.509 certificate.
    /// </summary>
    [IsoId("_SxIvsAEcEeCQm6a_G2yO_w_1329577257")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Relative Distinguished Name")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    public RelativeDistinguishedName1? RelativeDistinguishedName { get; init;  } // Warning: Don't know multiplicity.
    // ID for the above is _SxIvsAEcEeCQm6a_G2yO_w_1329577257
    
    
    #nullable disable
    
}
