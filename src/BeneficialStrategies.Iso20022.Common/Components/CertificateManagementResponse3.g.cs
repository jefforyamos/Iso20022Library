//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CertificateManagementResponse3.  ISO2002 ID# _Zacc8XI0Ee299ZbWCkdR_w.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Information related to the result of the certificate management request.
/// </summary>
public partial record CertificateManagementResponse3
{
    #nullable enable
    
    /// <summary>
    /// Identification of the terminal or system using the certificate management service.
    /// </summary>
    public required GenericIdentification176 POIIdentification { get; init; } 
    /// <summary>
    /// Identification of the TM or the MTM providing the Certificate Authority service.
    /// </summary>
    public GenericIdentification176? TMIdentification { get; init; } 
    /// <summary>
    /// Requested certificate management service.
    /// </summary>
    public required CardPaymentServiceType10Code CertificateService { get; init; } 
    /// <summary>
    /// Outcome of the certificate service processing.
    /// </summary>
    public required ResponseType6 Result { get; init; } 
    /// <summary>
    /// Identification of the security profile, for creation, renewal or revocation of certificate.
    /// </summary>
    public IsoMax35Text? SecurityProfile { get; init; } 
    /// <summary>
    /// Challenge value sends by the POI to be received back in a message response.
    /// </summary>
    public required IsoMax140Binary POIChallengeValue { get; init; } 
    /// <summary>
    /// Date and Time of the TMS.
    /// </summary>
    public required IsoISODateTime TMSDateTime { get; init; } 
    /// <summary>
    /// Created or renewed certificate. The certificate is ASN.1/DER encoded.
    /// </summary>
    public IsoMax3000Binary? ClientCertificate { get; init; } 
    /// <summary>
    /// Certificate of the client certificate path, from the CA (Certificate Authority) certificate, to the root certificate, for renewal or revocation of certificate.
    /// </summary>
    public IsoMax10KBinary[] ClientCertificatePath { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Certificate of the server certificate path, from the CA (Certificate Authority) certificate, to the root certificate, for renewal or revocation of certificate.
    /// </summary>
    public IsoMax10KBinary[] ServerCertificatePath { get; init; } = []; // Warning: Don't know multiplicity.
    
    #nullable disable
}
