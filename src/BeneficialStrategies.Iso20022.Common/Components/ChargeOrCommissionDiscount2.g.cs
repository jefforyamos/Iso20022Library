//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for ChargeOrCommissionDiscount2.  ISO2002 ID# _CXqF4YjMEeeqaMoyJI1HbA.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Discounts or waivers to charges and commissions.
/// </summary>
public partial record ChargeOrCommissionDiscount2
     : IIsoXmlSerilizable<ChargeOrCommissionDiscount2>
{
    #nullable enable
    
    /// <summary>
    /// Amount of discount or waiver.
    /// </summary>
    public IsoActiveCurrencyAndAmount? Amount { get; init; } 
    /// <summary>
    /// Rate of discount or waiver.
    /// </summary>
    public IsoPercentageRate? Rate { get; init; } 
    /// <summary>
    /// Form of the discount or rebate.
    /// </summary>
    public WaivingInstruction2Choice_? Basis { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (Amount is IsoActiveCurrencyAndAmount AmountValue)
        {
            writer.WriteStartElement(null, "Amt", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoActiveCurrencyAndAmount(AmountValue)); // data type ActiveCurrencyAndAmount System.Decimal
            writer.WriteEndElement();
        }
        if (Rate is IsoPercentageRate RateValue)
        {
            writer.WriteStartElement(null, "Rate", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoPercentageRate(RateValue)); // data type PercentageRate System.Decimal
            writer.WriteEndElement();
        }
        if (Basis is WaivingInstruction2Choice_ BasisValue)
        {
            writer.WriteStartElement(null, "Bsis", xmlNamespace );
            BasisValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static ChargeOrCommissionDiscount2 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
