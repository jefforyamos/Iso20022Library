//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for Cheque11.  ISO2002 ID# _-VaZd24-EeiU9cctagi5ow.
//

using BeneficialStrategies.Iso20022.Choices;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Characteristics of a cheque instruction, such as cheque type or cheque number.
/// </summary>
public partial record Cheque11
{
    #nullable enable
    
    /// <summary>
    /// Specifies the type of cheque to be issued.
    /// </summary>
    public ChequeType2Code? ChequeType { get; init; } 
    /// <summary>
    /// Unique and unambiguous identifier for a cheque as assigned by the agent.
    /// </summary>
    public IsoMax35Text? ChequeNumber { get; init; } 
    /// <summary>
    /// Identifies the party that ordered the issuance of the cheque.
    /// </summary>
    public NameAndAddress16? ChequeFrom { get; init; } 
    /// <summary>
    /// Specifies the delivery method of the cheque by the debtor's agent.
    /// </summary>
    public IChequeDeliveryMethod1Choice? DeliveryMethod { get; init; } 
    /// <summary>
    /// Party to whom the debtor's agent needs to send the cheque.
    /// </summary>
    public NameAndAddress16? DeliverTo { get; init; } 
    /// <summary>
    /// Urgency or order of importance that the originator would like the recipient of the payment instruction to apply to the processing of the payment instruction.
    /// </summary>
    public Priority2Code? InstructionPriority { get; init; } 
    /// <summary>
    /// Date when the draft becomes payable and the debtor's account is debited.
    /// </summary>
    public IsoISODate? ChequeMaturityDate { get; init; } 
    /// <summary>
    /// Identifies, in a coded form, the cheque layout, company logo and digitised signature to be used to print the cheque, as agreed between the initiating party and the debtor's agent.
    /// </summary>
    public IsoMax35Text? FormsCode { get; init; } 
    /// <summary>
    /// Information that needs to be printed on a cheque, used by the payer to add miscellaneous information.
    /// </summary>
    // public IReadOnlyCollection<IsoMax35Text> MemoField { get; init; }
    /// <summary>
    /// Regional area in which the cheque can be cleared, when a country has no nation-wide cheque clearing organisation.
    /// </summary>
    public IsoMax35Text? RegionalClearingZone { get; init; } 
    /// <summary>
    /// Specifies the print location of the cheque.
    /// </summary>
    public IsoMax35Text? PrintLocation { get; init; } 
    /// <summary>
    /// Signature to be used by the cheque servicer on a specific cheque to be printed.
    /// </summary>
    // public IReadOnlyCollection<IsoMax70Text> Signature { get; init; }
    
    #nullable disable
}
