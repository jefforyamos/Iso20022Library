//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for ClaimNonReceipt2.  ISO2002 ID# _EhbFNW4-EeiU9cctagi5ow.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Specifies details of a claim non receipt status advice.
/// </summary>
public partial record ClaimNonReceipt2
     : IIsoXmlSerilizable<ClaimNonReceipt2>
{
    #nullable enable
    
    /// <summary>
    /// Specifies the date the original payment instruction was processed.
    /// </summary>
    public required IsoISODate DateProcessed { get; init; } 
    /// <summary>
    /// Specifies the next party the original payment instruction was sent to.
    /// </summary>
    public BranchAndFinancialInstitutionIdentification6? OriginalNextAgent { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "DtPrcd", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoISODate(DateProcessed)); // data type ISODate System.DateOnly
        writer.WriteEndElement();
        if (OriginalNextAgent is BranchAndFinancialInstitutionIdentification6 OriginalNextAgentValue)
        {
            writer.WriteStartElement(null, "OrgnlNxtAgt", xmlNamespace );
            OriginalNextAgentValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static ClaimNonReceipt2 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
