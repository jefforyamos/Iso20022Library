//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for ClearingPartyAndTime8.  ISO2002 ID# _jg-jkZQPEeiok48Eh9lW9Q.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Specifies the central counterparty clearing time.
/// </summary>
public partial record ClearingPartyAndTime8
     : IIsoXmlSerilizable<ClearingPartyAndTime8>
{
    #nullable enable
    
    /// <summary>
    /// In the case of a contract that has been cleared, the unique code for the CCP that has cleared the contract.
    /// </summary>
    public OrganisationIdentification9Choice_? CCP { get; init; } 
    /// <summary>
    /// Time and date when clearing took place.
    /// </summary>
    public IsoISODateTime? ClearingDateTime { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (CCP is OrganisationIdentification9Choice_ CCPValue)
        {
            writer.WriteStartElement(null, "CCP", xmlNamespace );
            CCPValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (ClearingDateTime is IsoISODateTime ClearingDateTimeValue)
        {
            writer.WriteStartElement(null, "ClrDtTm", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoISODateTime(ClearingDateTimeValue)); // data type ISODateTime System.DateTime
            writer.WriteEndElement();
        }
    }
    public static ClearingPartyAndTime8 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
