//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for Collateral6.  ISO2002 ID# _-dm5JqMOEeCojJW5vEuTEQ_455413091.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Provides the current and market value of the collateral held.
/// </summary>
public partial record Collateral6
     : IIsoXmlSerilizable<Collateral6>
{
    #nullable enable
    
    /// <summary>
    /// Value of the collateral after deduction of a percentage (the haircut) that reflects the perceived risk associated with holding this collateral.
    /// </summary>
    public required IsoActiveCurrencyAndAmount PostHaircutValue { get; init; } 
    /// <summary>
    /// Value of the underlying collateral (cash, securities, Letter of credit.) based on current market prices.
    /// </summary>
    public required IsoActiveCurrencyAndAmount MarketValue { get; init; } 
    /// <summary>
    /// Provides the type of collateral, such as securities or cash.
    /// </summary>
    public required CollateralType1Code CollateralType { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "PstHrcutVal", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoActiveCurrencyAndAmount(PostHaircutValue)); // data type ActiveCurrencyAndAmount System.Decimal
        writer.WriteEndElement();
        writer.WriteStartElement(null, "MktVal", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoActiveCurrencyAndAmount(MarketValue)); // data type ActiveCurrencyAndAmount System.Decimal
        writer.WriteEndElement();
        writer.WriteStartElement(null, "CollTp", xmlNamespace );
        writer.WriteValue(CollateralType.ToString()); // Enum value
        writer.WriteEndElement();
    }
    public static Collateral6 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
