//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CollateralAmount18.  ISO2002 ID# _qXrlIRIrEeyZaPkaPAzTvQ.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Xml.Linq;

#if NET6_0_OR_GREATER // C# 10 
#else
using System.DateOnly=System.DateTime; // So data types will degrade gracefully
using System.TimeOnly=System.DateTime; // Same with this data type
#endif
namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Deal amount details.
/// </summary>
[IsoId("_qXrlIRIrEeyZaPkaPAzTvQ")]
#if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
[DisplayName("Collateral Amount")]
#endif
#if DECLARE_SERIALIZABLE
[Serializable]
#endif
#if DECLARE_DATACONTRACT
[DataContract]
#endif
public partial record CollateralAmount18
{
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    // No constructor needed for NET8 and above.
    #else
    // No constructor needed for < NET8 because this type has no required members.
    #endif
    #nullable enable
    
    /// <summary>
    /// Amount of the principal. 
    /// </summary>
    [IsoId("_qxKcIRIrEeyZaPkaPAzTvQ")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Transaction")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public AmountAndDirection49? Transaction { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public AmountAndDirection49? Transaction { get; init; } 
    #else
    public AmountAndDirection49? Transaction { get; set; } 
    #endif
    
    /// <summary>
    /// Amount of principal plus interests at termination.
    /// </summary>
    [IsoId("_qxKcIxIrEeyZaPkaPAzTvQ")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Termination")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public AmountAndDirection49? Termination { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public AmountAndDirection49? Termination { get; init; } 
    #else
    public AmountAndDirection49? Termination { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies the accrued interest on the value of the principal trade, in the currency of the principal trade.
    /// </summary>
    [IsoId("_qxKcJRIrEeyZaPkaPAzTvQ")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Accrued")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public AmountAndDirection49? Accrued { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public AmountAndDirection49? Accrued { get; init; } 
    #else
    public AmountAndDirection49? Accrued { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the interest calculation method is simple or compounding.
    /// </summary>
    [IsoId("_qxKcJxIrEeyZaPkaPAzTvQ")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Compound Simple Accrual Calculation")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CalculationMethod1Code? CompoundSimpleAccrualCalculation { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CalculationMethod1Code? CompoundSimpleAccrualCalculation { get; init; } 
    #else
    public CalculationMethod1Code? CompoundSimpleAccrualCalculation { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies when the accrued interest is paid.
    /// </summary>
    [IsoId("_qxKcKRIrEeyZaPkaPAzTvQ")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Payment Frequency")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public Frequency38Choice_? PaymentFrequency { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public Frequency38Choice_? PaymentFrequency { get; init; } 
    #else
    public Frequency38Choice_? PaymentFrequency { get; set; } 
    #endif
    
    /// <summary>
    /// Number of days after the accrual payment is due.
    /// </summary>
    [IsoId("_qxKcKxIrEeyZaPkaPAzTvQ")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Interest Payment Delay")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [StringLength(maximumLength: 0 ,MinimumLength = 0)]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public IsoMax3NumericText? InterestPaymentDelay { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public System.String? InterestPaymentDelay { get; init; } 
    #else
    public System.String? InterestPaymentDelay { get; set; } 
    #endif
    
    /// <summary>
    /// Breakdown of transaction amount (required value for the exposure)  into market value lots based on the underlying trades.
    /// </summary>
    [IsoId("_qxKcLRIrEeyZaPkaPAzTvQ")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Transaction Amount Breakdown")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CollateralTransactionAmountBreakdown2? TransactionAmountBreakdown { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CollateralTransactionAmountBreakdown2? TransactionAmountBreakdown { get; init; } 
    #else
    public CollateralTransactionAmountBreakdown2? TransactionAmountBreakdown { get; set; } 
    #endif
    
    /// <summary>
    /// Value of collateral offered or sought. 
    /// </summary>
    [IsoId("_qxKcLxIrEeyZaPkaPAzTvQ")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Value Sought")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public AmountAndDirection49? ValueSought { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public AmountAndDirection49? ValueSought { get; init; } 
    #else
    public AmountAndDirection49? ValueSought { get; set; } 
    #endif
    
    
    #nullable disable
    
}
