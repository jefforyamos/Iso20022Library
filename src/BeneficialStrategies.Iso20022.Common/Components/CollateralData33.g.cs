//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CollateralData33.  ISO2002 ID# _QMn0QcguEeuGrNSsxk3B0A.
//

using BeneficialStrategies.Iso20022.Choices;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Provides the details of the collateral used in the transaction.
/// </summary>
public partial record CollateralData33
{
    #nullable enable
    
    /// <summary>
    /// Indicates whether the collateral has been provided for a net exposure, rather than for a single transaction.
    /// </summary>
    public IsoTrueFalseIndicator? NetExposureCollateralisationIndicator { get; init; } 
    /// <summary>
    /// Indication of the type of collateral component.
    /// </summary>
    public CollateralType6Code? ComponentType { get; init; } 
    /// <summary>
    /// Currency of unit of cash collateral component.
    /// </summary>
    public ActiveOrHistoricCurrencyCode? CashCollateralCurrency { get; init; } 
    /// <summary>
    /// Currency of price of unit of collateral component.
    /// </summary>
    public ActiveOrHistoricCurrencyCode? PriceCurrency { get; init; } 
    /// <summary>
    /// Code that classifies the risk of the security.
    /// </summary>
    public CollateralQualityType1Code? Quality { get; init; } 
    /// <summary>
    /// Maturity of the security.
    /// </summary>
    public IContractTerm6Choice? Maturity { get; init; } 
    /// <summary>
    /// Jurisdiction of the issuer of the security used as collateral. 
    /// </summary>
    public IIssuerJurisdiction1Choice? IssuerJurisdiction { get; init; } 
    /// <summary>
    /// Classification of the type of the security.
    /// </summary>
    public ISecuritiesLendingType3Choice? Type { get; init; } 
    /// <summary>
    /// Trade Repository to which the other counterparty reported.
    /// </summary>
    public IOrganisationIdentification15Choice? TradeRepository { get; init; } 
    /// <summary>
    /// List of possible values for TRs reconciliation purposes.
    /// </summary>
    public ReconciliationFlag2? ReconciliationFlag { get; init; } 
    /// <summary>
    /// Provides details on the type and amount of the cash reinvestment in a given currency.
    /// </summary>
    public ReinvestedCashTypeAndAmount2? ReinvestedCash { get; init; } 
    
    #nullable disable
}
