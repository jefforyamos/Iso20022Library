//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CommonFinancialInstrumentAttributes12.  ISO2002 ID# _QKNvZ5JKEeuAlLVx8pyt3w.
//

using BeneficialStrategies.Iso20022.Choices;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Tangible items of value to a business.
/// </summary>
public partial record CommonFinancialInstrumentAttributes12
{
    #nullable enable
    
    /// <summary>
    /// Specifies the status of the security within its lifecycle.
    /// </summary>
    public ISecurityStatus3Choice? SecurityStatus { get; init; } 
    /// <summary>
    /// Name of the security.
    /// </summary>
    public IsoMax350Text? ISOSecurityLongName { get; init; } 
    /// <summary>
    /// Short name of the security expressed as ISO 18773/18774.
    /// </summary>
    public IsoMax35Text? ISOSecurityShortName { get; init; } 
    /// <summary>
    /// Defines the date since when the name of the security is valid.
    /// </summary>
    public IDateAndDateTime2Choice? NameValidFrom { get; init; } 
    /// <summary>
    /// Currency in which a security is issued or redenominated.
    /// </summary>
    public ActiveOrHistoricCurrencyCode? DenominationCurrency { get; init; } 
    /// <summary>
    /// Unique and unambiguous identifier of a certificate assigned by the issuer.
    /// </summary>
    public IsoMax35Text? CertificateNumber { get; init; } 
    /// <summary>
    /// Version number assigned to the contract associated with the security.
    /// </summary>
    public IsoNumber? ContractVersionNumber { get; init; } 
    /// <summary>
    /// Number of the coupon attached to the physical security.
    /// </summary>
    public IsoMax3NumericText? CouponAttachedNumber { get; init; } 
    /// <summary>
    /// Identification, for tax purposes, of a lot of identical securities that are bought at a certain date and at a certain price.
    /// </summary>
    public IsoMax15NumericText? TaxLotNumber { get; init; } 
    /// <summary>
    /// Number identifying a group of underlying assets assigned by the issuer of a factored security.
    /// </summary>
    public IsoMax15NumericText? PoolNumber { get; init; } 
    /// <summary>
    /// Indicates whether the derivative product is covered or not by an underlying financial instrument position.
    /// </summary>
    public IsoYesNoIndicator? CoveredIndicator { get; init; } 
    /// <summary>
    /// Specifies the regulatory restrictions applicable to a security.
    /// </summary>
    public ILegalRestrictions4Choice? LegalRestrictions { get; init; } 
    /// <summary>
    /// Position limits are created for the purpose of maintaining stable and fair markets. Contracts held by one individual investor with different brokers may be combined in order to gauge accurately the level of control held by one party. ||Each option and futures contract will have varying position limits.
    /// </summary>
    public IFinancialInstrumentQuantity1Choice? PositionLimit { get; init; } 
    /// <summary>
    /// Near-term position limit for the instrument.
    /// </summary>
    public IFinancialInstrumentQuantity1Choice? NearTermPositionLimit { get; init; } 
    /// <summary>
    /// Original Date/time at which the security is listed at the specific exchange or trading venue.
    /// </summary>
    public IsoISODate? ListingDate { get; init; } 
    /// <summary>
    /// Date/time at which positions are struck to note which parties are entitled to receive the entitlement to a corporate event or vote at a meeting.
    /// </summary>
    public IsoISODateTime? RecordDate { get; init; } 
    /// <summary>
    /// Date on which a privilege expires.
    /// </summary>
    public IsoISODate? ExpiryDate { get; init; } 
    /// <summary>
    /// Reason for which money is raised through the issuance of a security.
    /// </summary>
    public IsoMax256Text? Purpose { get; init; } 
    /// <summary>
    /// Information allowing the classification of a financial instrument, for example, with its ISO CFI (Classification of Financial Instrument) or product type.
    /// </summary>
    public ClassificationType2? ClassificationType { get; init; } 
    /// <summary>
    /// Details regarding the issuance of an asset.
    /// </summary>
    public Issuance5? Issuance { get; init; } 
    /// <summary>
    /// Market(s) on which the security is traded.
    /// </summary>
    public TradingParameters2? TradingMarket { get; init;  } // Warning: Don't know multiplicity.
    /// <summary>
    /// Indicates the spread to benchmark details of an indication of interest.
    /// </summary>
    public BenchmarkCurve6? SpreadAndBenchmarkCurve { get; init;  } // Warning: Don't know multiplicity.
    /// <summary>
    /// Represents the type of put.
    /// </summary>
    public IPutType3Choice? PutType { get; init; } 
    /// <summary>
    /// Represents the type of call.
    /// </summary>
    public ICallType3Choice? CallType { get; init; } 
    /// <summary>
    /// Indicates whether a security is interchangeable, ie, the security is allowed to be replaced by another security, without loss of value.
    /// </summary>
    public IsoYesNoIndicator? FungibleIndicator { get; init; } 
    /// <summary>
    /// Indicates whether the details of the security are to be made available to the market, or kept private between ICSDs and agency network.
    /// </summary>
    public IsoYesNoIndicator? Confidential { get; init; } 
    /// <summary>
    /// The sale of securities directly to private persons, institutional investors, or both outside a public offering. Such non-public deals (often without a publicly available prospectus) closing through the ICSDs are placed directly with investors.
    /// </summary>
    public IsoYesNoIndicator? PrivatePlacement { get; init; } 
    /// <summary>
    /// Indicates whether the investor or the issuer has a conversion option.
    /// </summary>
    public IsoYesNoIndicator? ConvertibleIndicator { get; init; } 
    /// <summary>
    /// Period during which a convertible security may be converted according to the terms of the issue.
    /// </summary>
    public DateTimePeriod1? ConversionPeriod { get; init; } 
    /// <summary>
    /// Number of target securities for the conversion.
    /// </summary>
    public IFinancialInstrumentQuantity1Choice? ConversionRatioNumerator { get; init; } 
    /// <summary>
    /// Number of held securities for the conversion.
    /// </summary>
    public IFinancialInstrumentQuantity1Choice? ConversionRatioDenominator { get; init; } 
    /// <summary>
    /// Primary place of deposit.
    /// </summary>
    public PartyIdentification136? PrimaryPlaceOfDeposit { get; init; } 
    /// <summary>
    /// Indicates whether the notional amount value is to be traded in either an amount or in units.
    /// </summary>
    public IUnitOrFaceAmount1Choice? TradingMethod { get; init; } 
    /// <summary>
    /// Indicates the TEFRA rule under which the security is issued.
    /// </summary>
    public ITEFRARules3Choice? TEFRARule { get; init; } 
    /// <summary>
    /// Identifies the series number.
    /// </summary>
    public IsoMax16Text? SerieNumber { get; init; } 
    /// <summary>
    /// Identifier that links multiple security classes.
    /// </summary>
    public IsoMax16Text? Class { get; init; } 
    /// <summary>
    /// Amount or percentage of a cash distribution that will be withheld by a tax authority.
    /// </summary>
    public SecurityWithHoldingTax1? WithholdingTaxRegime { get; init;  } // Warning: Don't know multiplicity.
    /// <summary>
    /// Status of payment of a security at a particular time.
    /// </summary>
    public ISecuritiesPaymentStatus5Choice? PaymentStatus { get; init; } 
    /// <summary>
    /// Indicates the physical form of the securities on the closing date.
    /// </summary>
    public IInitialPhysicalForm4Choice? InitialPhysicalForm { get; init; } 
    /// <summary>
    /// Indicates the physical form of the securities after the exchange of the initial certificate issued on the closing date.
    /// </summary>
    public IInitialPhysicalForm3Choice? AfterExchangePhysicalForm { get; init; } 
    /// <summary>
    /// Entity appointed by the ICSDs to provide safekeeping for securities in new global note (NGN) form.
    /// </summary>
    public IPartyIdentification177Choice? CommonSafekeeper { get; init; } 
    /// <summary>
    /// Indicates the type of redemption at maturity.
    /// </summary>
    public IMaturityRedemptionType3Choice? RedemptionType { get; init; } 
    /// <summary>
    /// ISO currency for the payment of the cash proceeds.
    /// </summary>
    public ActiveCurrencyCode? RedemptionPaymentCurrency { get; init; } 
    /// <summary>
    /// Regulatory restriction(s) linked to the security.
    /// </summary>
    public SecurityRestriction3? Restriction { get; init;  } // Warning: Don't know multiplicity.
    /// <summary>
    /// Way(s) of identifying the security.
    /// </summary>
    public SecurityIdentification39? FinancialInstrumentIdentification { get; init; } 
    /// <summary>
    /// Settlement of the securities in a securities transaction, that is, the instruction to deliver or receive securities, involving the payment of an amount of money or not.
    /// </summary>
    public SettlementInformation17? SettlementInformation { get; init;  } // Warning: Don't know multiplicity.
    /// <summary>
    /// Indicates the form of the financial Instrument.
    /// </summary>
    public FinancialInstrumentForm2? FinancialInstrumentForm { get; init; } 
    /// <summary>
    /// Details (name, e-mail address and/or telephone number) of the person requesting the allocation of the ISIN used as a point of reference in case further clarifications are required.
    /// </summary>
    public Organisation38? ContactName { get; init; } 
    /// <summary>
    /// Entity appointed by the issuer to structure and lead the placement of a syndicated issue.
    /// </summary>
    public Organisation38? LeadManager { get; init; } 
    /// <summary>
    /// Main party appointed to distribute payment or securities on behalf of the issuer.
    /// </summary>
    public Organisation38? PrincipalPayingAgent { get; init; } 
    /// <summary>
    /// Additional party appointed to distribute payment or securities on behalf of the issuer.
    /// </summary>
    public Organisation38? PayingAgent { get; init; } 
    /// <summary>
    /// Entity appointed by the relevant clearing system as a depository for instruments issued in global or definitive form. The depository keeps the securities for safekeeping purposes on behalf of the clearing system(s).
    /// </summary>
    public Organisation38? Depository { get; init; } 
    /// <summary>
    /// Entity(ies), asset(s) or security(ies) on which the credit responsibility lies as identified in the documentation.
    /// </summary>
    public Organisation38? UnderlyingRisk { get; init; } 
    
    #nullable disable
}
