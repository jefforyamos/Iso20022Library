//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for ConditionallyAcceptedStatus2.  ISO2002 ID# _RM7EKdp-Ed-ak6NoX_4Aeg_-367108012.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Status is accepted under certain conditions.
/// </summary>
public partial record ConditionallyAcceptedStatus2
     : IIsoXmlSerilizable<ConditionallyAcceptedStatus2>
{
    #nullable enable
    
    /// <summary>
    /// Indicates that there is no reason available or to report.
    /// </summary>
    public required NoReasonCode NoSpecifiedReason { get; init; } 
    /// <summary>
    /// Reason for the conditionally accepted status.
    /// </summary>
    public ValueList<ConditionallyAcceptedStatusReason2> ReasonDetails { get; init; } = [];
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "NoSpcfdRsn", xmlNamespace );
        writer.WriteValue(NoSpecifiedReason.ToString()); // Enum value
        writer.WriteEndElement();
        writer.WriteStartElement(null, "RsnDtls", xmlNamespace );
        ReasonDetails.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
    }
    public static ConditionallyAcceptedStatus2 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
