//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for Context10.  ISO2002 ID# _qbx_gYN0EeuHqfO1LgkE9Q.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Context in which the card payment transaction is performed.
/// </summary>
public partial record Context10
     : IIsoXmlSerilizable<Context10>
{
    #nullable enable
    
    /// <summary>
    /// Contains point of interaction information specific to a given transaction that may change from transaction to transaction.
    /// </summary>
    public required PointOfServiceContext3 PointOfServiceContext { get; init; } 
    /// <summary>
    /// Context of the card payment transaction.
    /// </summary>
    public required TransactionContext7 TransactionContext { get; init; } 
    /// <summary>
    /// Contain validation result and/or data to be validated.
    /// </summary>
    public Verification5? Verification { get; init; } 
    /// <summary>
    /// Context of risk associated with the transaction.
    /// </summary>
    public RiskContext2? RiskContext { get; init; } 
    /// <summary>
    /// Context of the sale associated with the card payment transaction.
    /// </summary>
    public SaleContext8? SaleContext { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "PtOfSvcCntxt", xmlNamespace );
        PointOfServiceContext.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "TxCntxt", xmlNamespace );
        TransactionContext.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (Verification is Verification5 VerificationValue)
        {
            writer.WriteStartElement(null, "Vrfctn", xmlNamespace );
            VerificationValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (RiskContext is RiskContext2 RiskContextValue)
        {
            writer.WriteStartElement(null, "RskCntxt", xmlNamespace );
            RiskContextValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (SaleContext is SaleContext8 SaleContextValue)
        {
            writer.WriteStartElement(null, "SaleCntxt", xmlNamespace );
            SaleContextValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static Context10 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
