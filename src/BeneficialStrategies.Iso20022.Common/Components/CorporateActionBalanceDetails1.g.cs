//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CorporateActionBalanceDetails1.  ISO2002 ID# _R-ZkYNp-Ed-ak6NoX_4Aeg_934462706.
//

using BeneficialStrategies.Iso20022.Choices;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Eligible and not eligible balance of securities for a corporate action event.
/// </summary>
public partial record CorporateActionBalanceDetails1
{
    #nullable enable
    
    /// <summary>
    /// Total quantity of financial instruments of the balance.
    /// </summary>
    public IQuantity3Choice? TotalEligibleBalance { get; init; } 
    /// <summary>
    /// Balance of financial instruments that are blocked.
    /// </summary>
    public IBalanceFormat1Choice? BlockedBalance { get; init; } 
    /// <summary>
    /// Quantity of securities in the sub-balance.
    /// </summary>
    public IBalanceFormat1Choice? BorrowedBalance { get; init; } 
    /// <summary>
    /// Quantity of securities in the sub-balance.
    /// </summary>
    public IBalanceFormat1Choice? CollateralInBalance { get; init; } 
    /// <summary>
    /// Quantity of securities in the sub-balance.
    /// </summary>
    public IBalanceFormat1Choice? CollateralOutBalance { get; init; } 
    /// <summary>
    /// Quantity of securities in the sub-balance.
    /// </summary>
    public IBalanceFormat1Choice? OnLoanBalance { get; init; } 
    /// <summary>
    /// Quantity of securities in the sub-balance.
    /// </summary>
    public IBalanceFormat1Choice? PendingDeliveryBalance { get; init;  } // Warning: Don't know multiplicity.
    /// <summary>
    /// Quantity of securities in the sub-balance.
    /// </summary>
    public IBalanceFormat1Choice? PendingReceiptBalance { get; init;  } // Warning: Don't know multiplicity.
    /// <summary>
    /// Quantity of securities in the sub-balance.
    /// </summary>
    public IBalanceFormat1Choice? OutForRegistrationBalance { get; init; } 
    /// <summary>
    /// Quantity of securities in the sub-balance.
    /// </summary>
    public IBalanceFormat1Choice? SettlementPositionBalance { get; init; } 
    /// <summary>
    /// Quantity of securities in the sub-balance.
    /// </summary>
    public IBalanceFormat1Choice? StreetPositionBalance { get; init; } 
    /// <summary>
    /// Balance of securities based on trade date, for example, includes all pending transactions in addition to the balance of settled transactions.
    /// </summary>
    public IBalanceFormat1Choice? TradeDatePositionBalance { get; init; } 
    /// <summary>
    /// Quantity of securities in the sub-balance.
    /// </summary>
    public IBalanceFormat1Choice? InTransshipmentBalance { get; init; } 
    /// <summary>
    /// Quantity of securities in the sub-balance.
    /// </summary>
    public IBalanceFormat1Choice? RegisteredBalance { get; init; } 
    /// <summary>
    /// Position that account holders should return to the account servicer to participate in the event or to fulfil their obligation for the event to be complete, for example, return of securities for late announced drawing.
    /// </summary>
    public IBalanceFormat1Choice? ObligatedBalance { get; init; } 
    /// <summary>
    /// Balance of uninstructed position.
    /// </summary>
    public IBalanceFormat1Choice? UninstructedBalance { get; init; } 
    /// <summary>
    /// Balance of instructed position.
    /// </summary>
    public IBalanceFormat1Choice? InstructedBalance { get; init; } 
    /// <summary>
    /// Balance that has been affected by the process run through the event.
    /// </summary>
    public IBalanceFormat1Choice? AffectedBalance { get; init; } 
    /// <summary>
    /// Balance that has not been affected by the process run through the event.
    /// </summary>
    public IBalanceFormat1Choice? UnaffectedBalance { get; init; } 
    
    #nullable disable
}
