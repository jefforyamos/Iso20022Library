//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CorporateActionCashMovements2.  ISO2002 ID# _UI00nNp-Ed-ak6NoX_4Aeg_-1357600195.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Provides information about the cash movement resulting from the election instruction.
/// </summary>
public partial record CorporateActionCashMovements2
     : IIsoXmlSerilizable<CorporateActionCashMovements2>
{
    #nullable enable
    
    /// <summary>
    /// Posting identification of the cash movement.
    /// </summary>
    public IsoMax35Text? PostingIdentification { get; init; } 
    /// <summary>
    /// Posting date of the cash movement.
    /// </summary>
    public DateAndDateTimeChoice_? PostingDateTime { get; init; } 
    /// <summary>
    /// Amount posted as a result of the cash movement.
    /// </summary>
    public required IsoActiveCurrencyAndAmount PostingAmount { get; init; } 
    /// <summary>
    /// Provides information about the account which is debited/credited as a result of the movement.
    /// </summary>
    public ValueList<CashAccount19> AccountDetails { get; init; } = [];
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (PostingIdentification is IsoMax35Text PostingIdentificationValue)
        {
            writer.WriteStartElement(null, "PstngId", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(PostingIdentificationValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
        if (PostingDateTime is DateAndDateTimeChoice_ PostingDateTimeValue)
        {
            writer.WriteStartElement(null, "PstngDtTm", xmlNamespace );
            PostingDateTimeValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        writer.WriteStartElement(null, "PstngAmt", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoActiveCurrencyAndAmount(PostingAmount)); // data type ActiveCurrencyAndAmount System.Decimal
        writer.WriteEndElement();
        writer.WriteStartElement(null, "AcctDtls", xmlNamespace );
        AccountDetails.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
    }
    public static CorporateActionCashMovements2 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
