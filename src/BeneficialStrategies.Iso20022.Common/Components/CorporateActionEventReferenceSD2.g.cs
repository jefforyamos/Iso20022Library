//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CorporateActionEventReferenceSD2.  ISO2002 ID# _1UHa8jL3EeKU9IrkkToqcw_-607146504.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Provides additional information regarding linkage details.
/// </summary>
public partial record CorporateActionEventReferenceSD2
     : IIsoXmlSerilizable<CorporateActionEventReferenceSD2>
{
    #nullable enable
    
    /// <summary>
    /// xPath to the element that is being extended.
    /// </summary>
    public required IsoMax350Text PlaceAndName { get; init; } 
    /// <summary>
    /// Indicates the reason why two or more events are related.
    /// </summary>
    public required DTCCLinkType1Code LinkageType { get; init; } 
    /// <summary>
    /// Events can be linked together. This date represents the date on which the link was established.
    /// </summary>
    public required IsoISODate LinkAddedDate { get; init; } 
    /// <summary>
    /// Events can be linked together. This date represents the date on which the link was modified.
    /// </summary>
    public IsoISODate? LinkModifiedDate { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "PlcAndNm", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax350Text(PlaceAndName)); // data type Max350Text System.String
        writer.WriteEndElement();
        writer.WriteStartElement(null, "LkgTp", xmlNamespace );
        writer.WriteValue(LinkageType.ToString()); // Enum value
        writer.WriteEndElement();
        writer.WriteStartElement(null, "LkAddedDt", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoISODate(LinkAddedDate)); // data type ISODate System.DateOnly
        writer.WriteEndElement();
        if (LinkModifiedDate is IsoISODate LinkModifiedDateValue)
        {
            writer.WriteStartElement(null, "LkModfdDt", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoISODate(LinkModifiedDateValue)); // data type ISODate System.DateOnly
            writer.WriteEndElement();
        }
    }
    public static CorporateActionEventReferenceSD2 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
