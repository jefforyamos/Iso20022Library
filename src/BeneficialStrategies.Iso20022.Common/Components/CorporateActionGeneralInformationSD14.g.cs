//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CorporateActionGeneralInformationSD14.  ISO2002 ID# _YTNCqGGJEeORiK3bBeBzGg.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Provides additional information regarding corporate action general information details.
/// </summary>
public partial record CorporateActionGeneralInformationSD14
     : IIsoXmlSerilizable<CorporateActionGeneralInformationSD14>
{
    #nullable enable
    
    /// <summary>
    /// xPath to the element that is being extended.
    /// </summary>
    public required IsoMax350Text PlaceAndName { get; init; } 
    /// <summary>
    /// Unique number systemically assigned to all Lottery and Non-Lottery events announced in DTC Redemptions (REDS) Participant Terminal System (PTS)/ Particinant Browser System(PBS) function.
    /// </summary>
    public IsoMax10NumericText? RedemptionIdentification { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "PlcAndNm", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax350Text(PlaceAndName)); // data type Max350Text System.String
        writer.WriteEndElement();
        if (RedemptionIdentification is IsoMax10NumericText RedemptionIdentificationValue)
        {
            writer.WriteStartElement(null, "RedId", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax10NumericText(RedemptionIdentificationValue)); // data type Max10NumericText System.String
            writer.WriteEndElement();
        }
    }
    public static CorporateActionGeneralInformationSD14 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
