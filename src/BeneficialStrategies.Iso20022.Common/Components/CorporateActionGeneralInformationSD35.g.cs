//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CorporateActionGeneralInformationSD35.  ISO2002 ID# _OiCzUOgcEei5aPS232E3Mw.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Provides additional information regarding corporate action general information.
/// </summary>
public partial record CorporateActionGeneralInformationSD35
     : IIsoXmlSerilizable<CorporateActionGeneralInformationSD35>
{
    #nullable enable
    
    /// <summary>
    /// Xpath to the element that is being extended.
    /// </summary>
    public IsoMax350Text? PlaceAndName { get; init; } 
    /// <summary>
    /// DTC processing domain/ category for event types.
    /// </summary>
    public EventGroup3Code? EventGroup { get; init; } 
    /// <summary>
    /// DTCC (The Depository Trust and Clearing Corporation) native corporate action event type name. Used in place for the events that cannot be classified by ISO code and mapped to OTHR or when two or more distinct events (in DTCC model) use same ISO code and there are no additional data elements that distinguish those two or more events.
    /// </summary>
    public ExtendedEventType6Code? EventType { get; init; } 
    /// <summary>
    /// DTCC (The Depository Trust and Clearing Corporation) native corporate action sub event type name further defines the event type.
    /// </summary>
    public DTCCSubEventType6Code? SubEventType { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (PlaceAndName is IsoMax350Text PlaceAndNameValue)
        {
            writer.WriteStartElement(null, "PlcAndNm", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax350Text(PlaceAndNameValue)); // data type Max350Text System.String
            writer.WriteEndElement();
        }
        if (EventGroup is EventGroup3Code EventGroupValue)
        {
            writer.WriteStartElement(null, "EvtGrp", xmlNamespace );
            writer.WriteValue(EventGroupValue.ToString()); // Enum value
            writer.WriteEndElement();
        }
        if (EventType is ExtendedEventType6Code EventTypeValue)
        {
            writer.WriteStartElement(null, "EvtTp", xmlNamespace );
            writer.WriteValue(EventTypeValue.ToString()); // Enum value
            writer.WriteEndElement();
        }
        if (SubEventType is DTCCSubEventType6Code SubEventTypeValue)
        {
            writer.WriteStartElement(null, "SubEvtTp", xmlNamespace );
            writer.WriteValue(SubEventTypeValue.ToString()); // Enum value
            writer.WriteEndElement();
        }
    }
    public static CorporateActionGeneralInformationSD35 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
