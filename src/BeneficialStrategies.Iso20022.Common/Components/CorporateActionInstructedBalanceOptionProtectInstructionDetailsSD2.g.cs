//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CorporateActionInstructedBalanceOptionProtectInstructionDetailsSD2.  ISO2002 ID# _KY-t8b-0Eeeb2ZBoAlSG1Q.
//

using BeneficialStrategies.Iso20022.Choices;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Provides additional information regarding corporate action instructed balance details at option protect level.
/// </summary>
public partial record CorporateActionInstructedBalanceOptionProtectInstructionDetailsSD2
{
    #nullable enable
    
    /// <summary>
    /// Xpath to the element that is being extended.
    /// </summary>
    public IsoMax350Text? PlaceAndName { get; init; } 
    /// <summary>
    /// Option number of the protect instruction.
    /// </summary>
    public required IOptionNumber1Choice OptionNumber { get; init; } 
    /// <summary>
    /// Instruction reference number assigned by DTC to the uncovered protect instruction.
    /// </summary>
    public required IsoMax15Text ProtectIdentification { get; init; } 
    /// <summary>
    /// For cover protect instructions whereby one safekeeping account is covering on behalf of another safekeeping account. The protect safekeeping account will be the account which submitted the original protect instruction.
    /// </summary>
    public IsoRestrictedFINMax35Text? ProtectSafekeepingAccount { get; init; } 
    /// <summary>
    /// Additional reference number used to uniquely identify uncovered protect instruction.
    /// </summary>
    public IsoMax3NumericText? ProtectSequenceNumber { get; init; } 
    /// <summary>
    /// Date and time of the protect instruction.
    /// </summary>
    public required IsoISODateTime ProtectDate { get; init; } 
    /// <summary>
    /// Date and time of the cover protect. Will be the latest cover date if partial cover transaction occurs.
    /// </summary>
    public IsoISODateTime? CoverProtectDate { get; init; } 
    /// <summary>
    /// Quantity of the protect instruction. For protects which are partially covered, the quantity will be reduced by the amount partially covered.
    /// </summary>
    public required IFinancialInstrumentQuantity15Choice ProtectIdentificationQuantity { get; init; } 
    /// <summary>
    /// Quantity of the protect instruction which has not been covered.
    /// </summary>
    public IFinancialInstrumentQuantity15Choice? ProtectIdentificationUncoveredQuantity { get; init; } 
    /// <summary>
    /// Protect oversubscription quantity.
    /// </summary>
    public IFinancialInstrumentQuantity15Choice? ProtectIdentificationOversubscriptionQuantity { get; init; } 
    /// <summary>
    /// Status of the protect instruction.
    /// </summary>
    public DTCProtectInstructionStatus1Code? ProtectIdentificationStatus { get; init; } 
    /// <summary>
    /// Conditional quantity for the protect instruction.
    /// </summary>
    public IFinancialInstrumentQuantity15Choice? ProtectConditionalQuantity { get; init; } 
    /// <summary>
    /// Tender bid price of the protect instruction.
    /// </summary>
    public IPriceFormat57Choice? ProtectTenderBidPrice { get; init; } 
    /// <summary>
    /// Customer identification entered by client upon instruction submission.
    /// </summary>
    public IsoMax30Text? CustomerReferenceIdentification { get; init; } 
    /// <summary>
    /// Client free format instruction narrative information. Will be 80 characters for tender instructions, 150 characters for rights instructions and 20 characters for put instructions.
    /// </summary>
    public IsoMax210Text? InstructionComments { get; init; } 
    
    #nullable disable
}
