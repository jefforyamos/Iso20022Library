//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CorporateActionNarrative31.  ISO2002 ID# _5X-ooWLLEeWR9ZSfjmHwUA.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Provides additional information such as the taxation conditions.
/// </summary>
public partial record CorporateActionNarrative31
     : IIsoXmlSerilizable<CorporateActionNarrative31>
{
    #nullable enable
    
    /// <summary>
    /// Provides additional information or specifies in more detail the content of a message. This field may only be used when the information to be transmitted, cannot be coded.
    /// </summary>
    public IsoMax350Text? AdditionalText { get; init; } 
    /// <summary>
    /// Provides information that can be ignored for automated processing; - reiteration of information that has been included within structured fields, - or narrative information not needed for automatic processing.
    /// </summary>
    public IsoMax350Text? NarrativeVersion { get; init; } 
    /// <summary>
    /// Provides additional information regarding the party, for example, the contact unit or person responsible for the transaction identified in the message.
    /// </summary>
    public IsoMax350Text? PartyContactNarrative { get; init; } 
    /// <summary>
    /// Provides taxation conditions that cannot be included within the structured fields of this message and has not been mentioned in the Service Level Agreement (SLA).
    /// </summary>
    public IsoMax350Text? TaxationConditions { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (AdditionalText is IsoMax350Text AdditionalTextValue)
        {
            writer.WriteStartElement(null, "AddtlTxt", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax350Text(AdditionalTextValue)); // data type Max350Text System.String
            writer.WriteEndElement();
        }
        if (NarrativeVersion is IsoMax350Text NarrativeVersionValue)
        {
            writer.WriteStartElement(null, "NrrtvVrsn", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax350Text(NarrativeVersionValue)); // data type Max350Text System.String
            writer.WriteEndElement();
        }
        if (PartyContactNarrative is IsoMax350Text PartyContactNarrativeValue)
        {
            writer.WriteStartElement(null, "PtyCtctNrrtv", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax350Text(PartyContactNarrativeValue)); // data type Max350Text System.String
            writer.WriteEndElement();
        }
        if (TaxationConditions is IsoMax350Text TaxationConditionsValue)
        {
            writer.WriteStartElement(null, "TaxtnConds", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax350Text(TaxationConditionsValue)); // data type Max350Text System.String
            writer.WriteEndElement();
        }
    }
    public static CorporateActionNarrative31 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
