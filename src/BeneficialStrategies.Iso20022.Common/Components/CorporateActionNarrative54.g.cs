//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CorporateActionNarrative54.  ISO2002 ID# _p4YplTi7Eeydid5dcNPKvg.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Provides additional information such as the taxation conditions.
/// </summary>
public partial record CorporateActionNarrative54
     : IIsoXmlSerilizable<CorporateActionNarrative54>
{
    #nullable enable
    
    /// <summary>
    /// Provides the entity making the offer and is different from the issuing company.
    /// </summary>
    public UpdatedAdditionalInformation6? Offeror { get; init; } 
    /// <summary>
    /// Provides the new name of a company following a name change.
    /// </summary>
    public UpdatedAdditionalInformation6? NewCompanyName { get; init; } 
    /// <summary>
    /// Provides the web address published for the event, that is, the address for the Universal Resource Locator (URL), for example, used over the www (HTTP) service.
    /// </summary>
    public UpdatedURLlnformation5? URLAddress { get; init; } 
    /// <summary>
    /// Provides web address of an account servicer (or of a service provider) that contains information solely intended for the immediate account holder to enable or facilitate event processing between parties.
    /// </summary>
    public IsoRestrictedFINZMax2048Text? EventProcessingWebSiteAddress { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (Offeror is UpdatedAdditionalInformation6 OfferorValue)
        {
            writer.WriteStartElement(null, "Offerr", xmlNamespace );
            OfferorValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (NewCompanyName is UpdatedAdditionalInformation6 NewCompanyNameValue)
        {
            writer.WriteStartElement(null, "NewCpnyNm", xmlNamespace );
            NewCompanyNameValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (URLAddress is UpdatedURLlnformation5 URLAddressValue)
        {
            writer.WriteStartElement(null, "URLAdr", xmlNamespace );
            URLAddressValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (EventProcessingWebSiteAddress is IsoRestrictedFINZMax2048Text EventProcessingWebSiteAddressValue)
        {
            writer.WriteStartElement(null, "EvtPrcgWebSiteAdr", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoRestrictedFINZMax2048Text(EventProcessingWebSiteAddressValue)); // data type RestrictedFINZMax2048Text System.String
            writer.WriteEndElement();
        }
    }
    public static CorporateActionNarrative54 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
