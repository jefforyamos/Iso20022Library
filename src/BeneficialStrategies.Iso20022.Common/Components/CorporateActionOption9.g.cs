//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CorporateActionOption9.  ISO2002 ID# _UEgVR9p-Ed-ak6NoX_4Aeg_-412792550.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Provides information about the corporate action option.
/// </summary>
[DataContract]
[XmlType]
public partial record CorporateActionOption9
{
    #nullable enable
    
    /// <summary>
    /// Number identifying the available corporate action options.
    /// </summary>
    [DataMember]
    public required OptionNumber1Choice_ OptionNumber { get; init; } 
    /// <summary>
    /// Specifies the corporate action options available to the account owner.
    /// </summary>
    [DataMember]
    public required CorporateActionOption5Choice_ OptionType { get; init; } 
    /// <summary>
    /// Party that owns the account.
    /// </summary>
    [DataMember]
    public PartyIdentification13Choice_? AccountOwner { get; init; } 
    /// <summary>
    /// Account where financial instruments are maintained.
    /// </summary>
    [DataMember]
    public IsoMax35Text? SafekeepingAccount { get; init; } 
    /// <summary>
    /// Account on which a securities entry is made.
    /// </summary>
    [DataMember]
    public CashAccountIdentification5Choice_? CashAccount { get; init; } 
    /// <summary>
    /// Location where the financial instruments are/will be safekept.
    /// </summary>
    [DataMember]
    public SafekeepingPlaceFormat2Choice_? SafekeepingPlace { get; init; } 
    /// <summary>
    /// Identifies the financial instrument.
    /// </summary>
    [DataMember]
    public SecurityIdentification11? SecurityIdentification { get; init; } 
    /// <summary>
    /// Total balance of securities eligible for this corporate action event. The entitlement calculation is based on this balance.
    /// </summary>
    [DataMember]
    public SignedQuantityFormat1? TotalEligibleBalance { get; init; } 
    /// <summary>
    /// Balance of instructed position.
    /// </summary>
    [DataMember]
    public SignedQuantityFormat1? InstructedBalance { get; init; } 
    /// <summary>
    /// Balance of uninstructed position.
    /// </summary>
    [DataMember]
    public SignedQuantityFormat1? UninstructedBalance { get; init; } 
    /// <summary>
    /// Specifies whether the quantity of financial instrument is a status quantity or a quantity to receive.
    /// </summary>
    [DataMember]
    public StatusOrQuantityToReceive1Choice_? StatusQuantityOrQuantityToReceive { get; init; } 
    
    #nullable disable
}
