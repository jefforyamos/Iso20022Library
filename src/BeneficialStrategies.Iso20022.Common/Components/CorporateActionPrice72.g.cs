//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CorporateActionPrice72.  ISO2002 ID# _o9HQ8RbTEeyroI8qKgB7Mg.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Specifies various prices of a corporate action.
/// </summary>
public partial record CorporateActionPrice72
     : IIsoXmlSerilizable<CorporateActionPrice72>
{
    #nullable enable
    
    /// <summary>
    /// Maximum or cap price at which a holder can bid, for example, on a Dutch auction offer.
    /// </summary>
    public PriceFormat44Choice_? MaximumPrice { get; init; } 
    /// <summary>
    /// Minimum or floor price at which a holder can bid, for example, on a Dutch auction offer.
    /// </summary>
    public PriceFormat44Choice_? MinimumPrice { get; init; } 
    /// <summary>
    /// First acceptable price after the Minimum Price at which a holder can bid, for example on a Dutch auction offer.
    /// </summary>
    public PriceFormat44Choice_? FirstBidIncrementPrice { get; init; } 
    /// <summary>
    /// Last acceptable price before the Maximum Price at which a holder can bid, for example on a Dutch auction offer.
    /// </summary>
    public PriceFormat44Choice_? LastBidIncrementPrice { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (MaximumPrice is PriceFormat44Choice_ MaximumPriceValue)
        {
            writer.WriteStartElement(null, "MaxPric", xmlNamespace );
            MaximumPriceValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (MinimumPrice is PriceFormat44Choice_ MinimumPriceValue)
        {
            writer.WriteStartElement(null, "MinPric", xmlNamespace );
            MinimumPriceValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (FirstBidIncrementPrice is PriceFormat44Choice_ FirstBidIncrementPriceValue)
        {
            writer.WriteStartElement(null, "FrstBidIncrmtPric", xmlNamespace );
            FirstBidIncrementPriceValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (LastBidIncrementPrice is PriceFormat44Choice_ LastBidIncrementPriceValue)
        {
            writer.WriteStartElement(null, "LastBidIncrmtPric", xmlNamespace );
            LastBidIncrementPriceValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static CorporateActionPrice72 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
