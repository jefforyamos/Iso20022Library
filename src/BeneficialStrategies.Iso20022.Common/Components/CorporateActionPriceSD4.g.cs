//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CorporateActionPriceSD4.  ISO2002 ID# _KAVaMb5QEeexmbB7KsjCwA.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Provides additional information regarding corporate action details price details.
/// </summary>
public partial record CorporateActionPriceSD4
     : IIsoXmlSerilizable<CorporateActionPriceSD4>
{
    #nullable enable
    
    /// <summary>
    /// Xpath to the element that is being extended.
    /// </summary>
    public IsoMax350Text? PlaceAndName { get; init; } 
    /// <summary>
    /// Cost to subscribe to additional share(s) of the underlying security.
    /// </summary>
    public IsoRestrictedFINActiveCurrencyAnd13DecimalAmount? SubscriptionPrice { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (PlaceAndName is IsoMax350Text PlaceAndNameValue)
        {
            writer.WriteStartElement(null, "PlcAndNm", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax350Text(PlaceAndNameValue)); // data type Max350Text System.String
            writer.WriteEndElement();
        }
        if (SubscriptionPrice is IsoRestrictedFINActiveCurrencyAnd13DecimalAmount SubscriptionPriceValue)
        {
            writer.WriteStartElement(null, "SbcptPric", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoRestrictedFINActiveCurrencyAnd13DecimalAmount(SubscriptionPriceValue)); // data type RestrictedFINActiveCurrencyAnd13DecimalAmount System.Decimal
            writer.WriteEndElement();
        }
    }
    public static CorporateActionPriceSD4 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
