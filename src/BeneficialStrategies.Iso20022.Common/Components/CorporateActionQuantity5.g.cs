//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CorporateActionQuantity5.  ISO2002 ID# _fT1XVfmVEeCcAY_zfcalaA.
//

using BeneficialStrategies.Iso20022.Choices;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Specifies corporate action quantities.
/// </summary>
public partial record CorporateActionQuantity5
{
    #nullable enable
    
    /// <summary>
    /// Minimum quantity (or lot) of financial instrument that may be exercised or tendered.
    /// </summary>
    public IFinancialInstrumentQuantity19Choice? MinimumExercisableQuantity { get; init; } 
    /// <summary>
    /// Minimum multiple quantity (or lot) of financial instrument that may be exercised or tendered.
    /// </summary>
    public IFinancialInstrumentQuantity20Choice? MinimumExercisableMultipleQuantity { get; init; } 
    /// <summary>
    /// The maximum number of securities the offeror/issuer is ready to purchase or redeem. This can be a number or the term "any and all".
    /// </summary>
    public IFinancialInstrumentQuantity19Choice? MaximumQuantity { get; init; } 
    /// <summary>
    /// Minimum quantity of securities the offeror/issuer is ready to purchase or redeem under the terms of the event. This can be a number or the term "any and all".
    /// </summary>
    public IFinancialInstrumentQuantity19Choice? MinimumQuantitySought { get; init; } 
    /// <summary>
    /// Quantity of equity that makes up the new board lot.
    /// </summary>
    public IFinancialInstrumentQuantity20Choice? NewBoardLotQuantity { get; init; } 
    /// <summary>
    /// New denomination of the equity following, for example, an increase or decrease in nominal value.
    /// </summary>
    public IFinancialInstrumentQuantity20Choice? NewDenominationQuantity { get; init; } 
    /// <summary>
    /// Minimum integral amount of securities that each account owner must have remaining after the called amounts are applied.
    /// </summary>
    public IFinancialInstrumentQuantity20Choice? BaseDenomination { get; init; } 
    /// <summary>
    /// Amount used when the called amount is not met by running the lottery with the base denomination.
    /// </summary>
    public IFinancialInstrumentQuantity20Choice? IncrementalDenomination { get; init; } 
    
    #nullable disable
}
