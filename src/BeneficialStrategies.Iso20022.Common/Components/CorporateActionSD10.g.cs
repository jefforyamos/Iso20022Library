//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CorporateActionSD10.  ISO2002 ID# _S9dVw2JhEeOfOt7Y7nAPUA.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Provides additional information regarding corporate action details.
/// </summary>
public partial record CorporateActionSD10
     : IIsoXmlSerilizable<CorporateActionSD10>
{
    #nullable enable
    
    /// <summary>
    /// xPath to the element that is being extended.
    /// </summary>
    public required IsoMax350Text PlaceAndName { get; init; } 
    /// <summary>
    /// DTC generated number to distinguish between the series of lotteries run against a particular redemption.
    /// </summary>
    public IsoMax3NumericText? LotterySequenceNumber { get; init; } 
    /// <summary>
    /// Date/time on which the lottery is run and applied to the holder's positions. This is also applicable to partial calls.
    /// </summary>
    public IsoISODate? LotteryDate { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "PlcAndNm", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax350Text(PlaceAndName)); // data type Max350Text System.String
        writer.WriteEndElement();
        if (LotterySequenceNumber is IsoMax3NumericText LotterySequenceNumberValue)
        {
            writer.WriteStartElement(null, "LtrySeqNb", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax3NumericText(LotterySequenceNumberValue)); // data type Max3NumericText System.String
            writer.WriteEndElement();
        }
        if (LotteryDate is IsoISODate LotteryDateValue)
        {
            writer.WriteStartElement(null, "LtryDt", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoISODate(LotteryDateValue)); // data type ISODate System.DateOnly
            writer.WriteEndElement();
        }
    }
    public static CorporateActionSD10 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
