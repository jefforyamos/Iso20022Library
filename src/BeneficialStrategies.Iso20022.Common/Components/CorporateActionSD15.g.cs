//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CorporateActionSD15.  ISO2002 ID# _Jgj5IZ2NEeW-bsa36JFb9A.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Contains details about called certificates.
/// </summary>
public partial record CorporateActionSD15
     : IIsoXmlSerilizable<CorporateActionSD15>
{
    #nullable enable
    
    /// <summary>
    /// Unique identification or serial number that is assigned and affixed by an issuer or transfer agent to each securities certificate.
    /// </summary>
    public required IsoMax15AlphaNumericText CertificateNumber { get; init; } 
    /// <summary>
    /// Principal amount (for debt issues) or number of shares (for equity issues) that has been called for redemption for a particular certificate number.
    /// </summary>
    public required IsoDecimalNumber CertificateCalledAmount { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "CertNb", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax15AlphaNumericText(CertificateNumber)); // data type Max15AlphaNumericText System.String
        writer.WriteEndElement();
        writer.WriteStartElement(null, "CertClldAmt", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoDecimalNumber(CertificateCalledAmount)); // data type DecimalNumber System.UInt64
        writer.WriteEndElement();
    }
    public static CorporateActionSD15 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
