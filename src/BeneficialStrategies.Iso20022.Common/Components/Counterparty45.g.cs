//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for Counterparty45.  ISO2002 ID# _x_a7MQz1Ee2YoLD-1vFj0g.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Information related to counterparty identification.
/// </summary>
public partial record Counterparty45
{
    #nullable enable
    
    /// <summary>
    /// Unique code identifying the reporting counterparty of the contract.
    /// </summary>
    public required IPartyIdentification248Choice Identification { get; init; } 
    /// <summary>
    /// Indicates if the reporting counterparty is a central counterparty, a financial, non-financial counterparty or other type of counterparty in accordance with regulation.
    /// </summary>
    public ICounterpartyTradeNature15Choice? Nature { get; init; } 
    /// <summary>
    /// Identifies the trading capacity of the seller.
    /// </summary>
    public TradingCapacity7Code? TradingCapacity { get; init; } 
    /// <summary>
    /// Indicates the direction or side of the derivative transaction from the perspective of the reporting counterparty. 
    /// Usage:
    /// CounterpartySide should be used for the instruments such as most forwards and forward-like contracts (except for foreign exchange forwards and foreign exchange non-deliverable forwards); most options and option-like contracts including swaptions, caps and floors; credit default swaps; variance, volatility and correlation swaps; contracts for difference and spreadbets.
    /// </summary>
    public IDirection4Choice? DirectionOrSide { get; init; } 
    /// <summary>
    /// Location of the trading desk or trader responsible for the decision of entering into or execution of the transaction.
    /// </summary>
    public CountryCode? TraderLocation { get; init; } 
    /// <summary>
    /// Location of the trade party or the branch/office of the trade party to which the transaction is booked.
    /// </summary>
    public CountryCode? BookingLocation { get; init; } 
    /// <summary>
    /// Provides details on the reporting exemption of a counterparty.
    /// </summary>
    public ReportingExemption1? ReportingExemption { get; init; } 
    
    #nullable disable
}
