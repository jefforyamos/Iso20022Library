//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CounterpartyMatchingCriteria4.  ISO2002 ID# _2rK2ccgxEeuGrNSsxk3B0A.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Compares information related to both sides of a loan.
/// </summary>
public partial record CounterpartyMatchingCriteria4
     : IIsoXmlSerilizable<CounterpartyMatchingCriteria4>
{
    #nullable enable
    
    /// <summary>
    /// Specifies whether the information on the reporting counterparties are matching or not.
    /// </summary>
    public CompareOrganisationIdentification6? ReportingCounterparty { get; init; } 
    /// <summary>
    /// Specifies whether the information on the other counterparties are matching or not.
    /// </summary>
    public CompareOrganisationIdentification7? OtherCounterparty { get; init; } 
    /// <summary>
    /// Specifies whether the information on the counterparty side are matching or not.
    /// </summary>
    public CompareCounterpartySide2? CounterpartySide { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (ReportingCounterparty is CompareOrganisationIdentification6 ReportingCounterpartyValue)
        {
            writer.WriteStartElement(null, "RptgCtrPty", xmlNamespace );
            ReportingCounterpartyValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (OtherCounterparty is CompareOrganisationIdentification7 OtherCounterpartyValue)
        {
            writer.WriteStartElement(null, "OthrCtrPty", xmlNamespace );
            OtherCounterpartyValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (CounterpartySide is CompareCounterpartySide2 CounterpartySideValue)
        {
            writer.WriteStartElement(null, "CtrPtySd", xmlNamespace );
            CounterpartySideValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static CounterpartyMatchingCriteria4 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
