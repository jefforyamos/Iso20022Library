//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CountryCodeAndName1.  ISO2002 ID# _SuJtKQEcEeCQm6a_G2yO_w_1027665844.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Specifies a country by its code or its name.
/// </summary>
public partial record CountryCodeAndName1
     : IIsoXmlSerilizable<CountryCodeAndName1>
{
    #nullable enable
    
    /// <summary>
    /// Country is specified by its code.
    /// </summary>
    public CountryCode? Code { get; init; } 
    /// <summary>
    /// Country is specified by its name.
    /// </summary>
    public IsoMax35Text? Name { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (Code is CountryCode CodeValue)
        {
            writer.WriteStartElement(null, "Cd", xmlNamespace );
            writer.WriteValue(CodeValue.ToString()); // Enum value
            writer.WriteEndElement();
        }
        if (Name is IsoMax35Text NameValue)
        {
            writer.WriteStartElement(null, "Nm", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(NameValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
    }
    public static CountryCodeAndName1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
