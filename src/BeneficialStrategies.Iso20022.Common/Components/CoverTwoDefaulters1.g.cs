//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CoverTwoDefaulters1.  ISO2002 ID# _hs1wsLJPEeaYqc4G3TTwhA.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Identifies the two largest assumed defaulting entities under a particular scenario.
/// </summary>
public partial record CoverTwoDefaulters1
     : IIsoXmlSerilizable<CoverTwoDefaulters1>
{
    #nullable enable
    
    /// <summary>
    /// Identifies the member whose default would generate the largest liquidity exposure for the CCP under the scenario and for the relevant currency.
    /// </summary>
    public required IsoLEIIdentifier Cover1Identification { get; init; } 
    /// <summary>
    /// Identifies the member whose default would generate the second largest liquidity exposure for the CCP under the scenario and for the relevant currency.
    /// </summary>
    public required IsoLEIIdentifier Cover2Identification { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Cover1Id", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoLEIIdentifier(Cover1Identification)); // data type LEIIdentifier System.String
        writer.WriteEndElement();
        writer.WriteStartElement(null, "Cover2Id", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoLEIIdentifier(Cover2Identification)); // data type LEIIdentifier System.String
        writer.WriteEndElement();
    }
    public static CoverTwoDefaulters1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
