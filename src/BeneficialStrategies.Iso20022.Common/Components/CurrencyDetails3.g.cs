//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for CurrencyDetails3.  ISO2002 ID# _k8F0MfayEeerBJ4shjAzSA.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Details of a currency.
/// </summary>
public partial record CurrencyDetails3
     : IIsoXmlSerilizable<CurrencyDetails3>
{
    #nullable enable
    
    /// <summary>
    /// Alpha currency code (ISO 4217, 3 alphanumeric characters).
    /// </summary>
    public required ActiveCurrencyCode AlphaCode { get; init; } 
    /// <summary>
    /// Numeric currency code (ISO 4217, 3 numeric characters).
    /// </summary>
    public required IsoExact3NumericText NumericCode { get; init; } 
    /// <summary>
    /// Maximal number of digits after the decimal separator for the currency.
    /// </summary>
    public required IsoNumber Decimal { get; init; } 
    /// <summary>
    /// Full name of the currency.
    /// </summary>
    public IsoMax35Text? Name { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "AlphaCd", xmlNamespace );
        writer.WriteValue(AlphaCode.ToString()); // Enum value
        writer.WriteEndElement();
        writer.WriteStartElement(null, "NmrcCd", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoExact3NumericText(NumericCode)); // data type Exact3NumericText System.String
        writer.WriteEndElement();
        writer.WriteStartElement(null, "Dcml", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoNumber(Decimal)); // data type Number System.UInt64
        writer.WriteEndElement();
        if (Name is IsoMax35Text NameValue)
        {
            writer.WriteStartElement(null, "Nm", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(NameValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
    }
    public static CurrencyDetails3 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
