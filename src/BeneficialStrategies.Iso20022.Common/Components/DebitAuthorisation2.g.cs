//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for DebitAuthorisation2.  ISO2002 ID# _xUfkRUgtEeaGKYpLDboHPQ.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Provides the reason for requesting a debit authorisation as well as the amount of the requested debit.
/// </summary>
public partial record DebitAuthorisation2
     : IIsoXmlSerilizable<DebitAuthorisation2>
{
    #nullable enable
    
    /// <summary>
    /// Specifies the reason for the cancellation request.
    /// </summary>
    public required CancellationReason33Choice_ CancellationReason { get; init; } 
    /// <summary>
    /// Amount of money requested for debit authorisation.
    /// </summary>
    public IsoActiveOrHistoricCurrencyAndAmount? AmountToDebit { get; init; } 
    /// <summary>
    /// Value date for debiting the amount.
    /// </summary>
    public IsoISODate? ValueDateToDebit { get; init; } 
    /// <summary>
    /// Further details on the cancellation request reason.
    /// </summary>
    public IsoMax105Text? AdditionalCancellationReasonInformation { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "CxlRsn", xmlNamespace );
        CancellationReason.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (AmountToDebit is IsoActiveOrHistoricCurrencyAndAmount AmountToDebitValue)
        {
            writer.WriteStartElement(null, "AmtToDbt", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoActiveOrHistoricCurrencyAndAmount(AmountToDebitValue)); // data type ActiveOrHistoricCurrencyAndAmount System.Decimal
            writer.WriteEndElement();
        }
        if (ValueDateToDebit is IsoISODate ValueDateToDebitValue)
        {
            writer.WriteStartElement(null, "ValDtToDbt", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoISODate(ValueDateToDebitValue)); // data type ISODate System.DateOnly
            writer.WriteEndElement();
        }
        if (AdditionalCancellationReasonInformation is IsoMax105Text AdditionalCancellationReasonInformationValue)
        {
            writer.WriteStartElement(null, "AddtlCxlRsnInf", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax105Text(AdditionalCancellationReasonInformationValue)); // data type Max105Text System.String
            writer.WriteEndElement();
        }
    }
    public static DebitAuthorisation2 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
