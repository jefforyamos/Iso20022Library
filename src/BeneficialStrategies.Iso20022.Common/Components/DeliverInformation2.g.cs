//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for DeliverInformation2.  ISO2002 ID# _VMxk59p-Ed-ak6NoX_4Aeg_-1013586045.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Completion of a securities settlement instruction, wherein securities are delivered/debited from a securities account and received/credited to the designated securities account.
/// </summary>
public partial record DeliverInformation2
     : IIsoXmlSerilizable<DeliverInformation2>
{
    #nullable enable
    
    /// <summary>
    /// Charge related to the transfer of a financial instrument.
    /// </summary>
    public Charge4? ChargeDetails { get; init; } 
    /// <summary>
    /// Tax related to the transfer of a financial instrument.
    /// </summary>
    public Tax3? TaxDetails { get; init; } 
    /// <summary>
    /// Chain of parties involved in the settlement of a transaction.
    /// </summary>
    public required DeliveringPartiesAndAccount1 SettlementPartiesDetails { get; init; } 
    /// <summary>
    /// Indicates whether the financial instrument is to be physically delivered.
    /// </summary>
    public required IsoYesNoIndicator PhysicalTransferIndicator { get; init; } 
    /// <summary>
    /// Parameters of a physical delivery.
    /// </summary>
    public DeliveryParameters2? PhysicalTransferDetails { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (ChargeDetails is Charge4 ChargeDetailsValue)
        {
            writer.WriteStartElement(null, "ChrgDtls", xmlNamespace );
            ChargeDetailsValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (TaxDetails is Tax3 TaxDetailsValue)
        {
            writer.WriteStartElement(null, "TaxDtls", xmlNamespace );
            TaxDetailsValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        writer.WriteStartElement(null, "SttlmPtiesDtls", xmlNamespace );
        SettlementPartiesDetails.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "PhysTrfInd", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoYesNoIndicator(PhysicalTransferIndicator)); // data type YesNoIndicator System.String
        writer.WriteEndElement();
        if (PhysicalTransferDetails is DeliveryParameters2 PhysicalTransferDetailsValue)
        {
            writer.WriteStartElement(null, "PhysTrfDtls", xmlNamespace );
            PhysicalTransferDetailsValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static DeliverInformation2 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
