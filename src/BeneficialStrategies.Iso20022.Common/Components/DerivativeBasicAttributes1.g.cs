//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for DerivativeBasicAttributes1.  ISO2002 ID# _UAL18Np-Ed-ak6NoX_4Aeg_-764187089.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Details of the derivative contract not included in the general financial instrument attributes component.
/// </summary>
public partial record DerivativeBasicAttributes1
     : IIsoXmlSerilizable<DerivativeBasicAttributes1>
{
    #nullable enable
    
    /// <summary>
    /// Amount underlying a financial derivatives contract necessary for calculating payments or receipts.
    /// </summary>
    public required IsoActiveOrHistoricCurrencyAndAmount NotionalCurrencyAndAmount { get; init; } 
    /// <summary>
    /// Indicates whether the given derivative price includes a prorated accrued interest component.
    /// </summary>
    public IsoYesNoIndicator? InterestIncludedInPrice { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "NtnlCcyAndAmt", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoActiveOrHistoricCurrencyAndAmount(NotionalCurrencyAndAmount)); // data type ActiveOrHistoricCurrencyAndAmount System.Decimal
        writer.WriteEndElement();
        if (InterestIncludedInPrice is IsoYesNoIndicator InterestIncludedInPriceValue)
        {
            writer.WriteStartElement(null, "IntrstInclInPric", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoYesNoIndicator(InterestIncludedInPriceValue)); // data type YesNoIndicator System.String
            writer.WriteEndElement();
        }
    }
    public static DerivativeBasicAttributes1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
