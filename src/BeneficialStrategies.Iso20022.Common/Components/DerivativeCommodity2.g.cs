//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for DerivativeCommodity2.  ISO2002 ID# _e-bjmXvyEeanCNPcMT7sSg.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Defines the details of a commodity derivative.
/// </summary>
public partial record DerivativeCommodity2
     : IIsoXmlSerilizable<DerivativeCommodity2>
{
    #nullable enable
    
    /// <summary>
    /// Commodity product attributes.
    /// </summary>
    public required AssetClassCommodity3Choice_ Product { get; init; } 
    /// <summary>
    /// Transaction type as specified by the trading venue.
    /// </summary>
    public AssetClassTransactionType1Code? TransactionType { get; init; } 
    /// <summary>
    /// Final price type as specified by the trading venue.
    /// </summary>
    public AssetPriceType1Code? FinalPriceType { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Pdct", xmlNamespace );
        Product.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (TransactionType is AssetClassTransactionType1Code TransactionTypeValue)
        {
            writer.WriteStartElement(null, "TxTp", xmlNamespace );
            writer.WriteValue(TransactionTypeValue.ToString()); // Enum value
            writer.WriteEndElement();
        }
        if (FinalPriceType is AssetPriceType1Code FinalPriceTypeValue)
        {
            writer.WriteStartElement(null, "FnlPricTp", xmlNamespace );
            writer.WriteValue(FinalPriceTypeValue.ToString()); // Enum value
            writer.WriteEndElement();
        }
    }
    public static DerivativeCommodity2 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
