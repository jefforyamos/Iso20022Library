//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for DetailedAmount4.  ISO2002 ID# _yXuW0TAlEeOqioR9srQH1g.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Detailed amounts associated with the total amount of transaction.
/// </summary>
public partial record DetailedAmount4
     : IIsoXmlSerilizable<DetailedAmount4>
{
    #nullable enable
    
    /// <summary>
    /// Amount value.
    /// </summary>
    public required IsoImpliedCurrencyAndAmount Amount { get; init; } 
    /// <summary>
    /// Short description of the amount to display or print.
    /// </summary>
    public IsoMax140Text? Label { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Amt", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoImpliedCurrencyAndAmount(Amount)); // data type ImpliedCurrencyAndAmount System.Decimal
        writer.WriteEndElement();
        if (Label is IsoMax140Text LabelValue)
        {
            writer.WriteStartElement(null, "Labl", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax140Text(LabelValue)); // data type Max140Text System.String
            writer.WriteEndElement();
        }
    }
    public static DetailedAmount4 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
