//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for DocumentAmendment1.  ISO2002 ID# _3IeEUNLlEeSDLevdaFPXHw.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Indicates whether the supporting document is amending an original document or not, and the reference of the original supporting document, when applicable.
/// </summary>
public partial record DocumentAmendment1
     : IIsoXmlSerilizable<DocumentAmendment1>
{
    #nullable enable
    
    /// <summary>
    /// Provides the correction sequence number used to identify the amendment.
    /// </summary>
    public required IsoNumber CorrectionIdentification { get; init; } 
    /// <summary>
    /// Identification of the original document being amended.
    /// </summary>
    public IsoMax35Text? OriginalDocumentIdentification { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "CrrctnId", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoNumber(CorrectionIdentification)); // data type Number System.UInt64
        writer.WriteEndElement();
        if (OriginalDocumentIdentification is IsoMax35Text OriginalDocumentIdentificationValue)
        {
            writer.WriteStartElement(null, "OrgnlDocId", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(OriginalDocumentIdentificationValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
    }
    public static DocumentAmendment1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
