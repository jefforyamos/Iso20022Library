//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for DueDate1.  ISO2002 ID# _AeNGMEcWEeGlWcsEChp7QA.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Specifies the date by when the financial institutiion needs to provide a response.
/// </summary>
public partial record DueDate1
     : IIsoXmlSerilizable<DueDate1>
{
    #nullable enable
    
    /// <summary>
    /// Specifies the date when the authority needs the response in situations where the response or part of it will not be given electronically but on paper in manual process.
    /// </summary>
    public IsoISODate? DueDate { get; init; } 
    /// <summary>
    /// Specifies the reason why the authority needs the information on due date.
    /// </summary>
    public IsoMax140Text? AdditionalInformation { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (DueDate is IsoISODate DueDateValue)
        {
            writer.WriteStartElement(null, "DueDt", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoISODate(DueDateValue)); // data type ISODate System.DateOnly
            writer.WriteEndElement();
        }
        if (AdditionalInformation is IsoMax140Text AdditionalInformationValue)
        {
            writer.WriteStartElement(null, "AddtlInf", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax140Text(AdditionalInformationValue)); // data type Max140Text System.String
            writer.WriteEndElement();
        }
    }
    public static DueDate1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
