//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for ElementIdentification1.  ISO2002 ID# _RJf8s9p-Ed-ak6NoX_4Aeg_1263580782.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Xml.Linq;

#if NET6_0_OR_GREATER // C# 10 
#else
using System.DateOnly=System.DateTime; // So data types will degrade gracefully
using System.TimeOnly=System.DateTime; // Same with this data type
#endif
namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Description of the element that creates the mismatch.
/// </summary>
[IsoId("_RJf8s9p-Ed-ak6NoX_4Aeg_1263580782")]
#if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
[DisplayName("Element Identification")]
#endif
#if DECLARE_SERIALIZABLE
[Serializable]
#endif
#if DECLARE_DATACONTRACT
[DataContract]
#endif
public partial record ElementIdentification1
{
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    // No constructor needed for NET8 and above.
    #else
    /// <summary>
    /// Constructs a ElementIdentification1 instance using the members the ISO20022 deems required.
    /// It is higly recommended that you update to .NET 8 or above so you can use required initialization syntax instead
    /// </summary>
    public ElementIdentification1( System.String reqDocumentIndex,System.String reqElementPath,System.String reqElementName )
    {
        DocumentIndex = reqDocumentIndex;
        ElementPath = reqElementPath;
        ElementName = reqElementName;
    }
    #endif
    #nullable enable
    
    /// <summary>
    /// Refers to the identification number of the document in which the mismatch was found.
    /// </summary>
    [IsoId("_RJf8tNp-Ed-ak6NoX_4Aeg_-1274214222")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Document Index")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [StringLength(maximumLength: 0 ,MinimumLength = 0)]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public required IsoMax3NumericText DocumentIndex { get; init; } 
    #elif NET7_0_OR_GREATER // C# 11 Records, required members
    public System.String DocumentIndex { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public System.String DocumentIndex { get; init; } 
    #else
    public System.String DocumentIndex { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies from the root of the message the complete path of the element that violated a rule.
    /// </summary>
    [IsoId("_RJf8tdp-Ed-ak6NoX_4Aeg_1320841192")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Element Path")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [StringLength(maximumLength: 350 ,MinimumLength = 1)]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public required IsoMax350Text ElementPath { get; init; } 
    #elif NET7_0_OR_GREATER // C# 11 Records, required members
    public System.String ElementPath { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public System.String ElementPath { get; init; } 
    #else
    public System.String ElementPath { get; set; } 
    #endif
    
    /// <summary>
    /// Name of the element.
    /// </summary>
    [IsoId("_RJf8ttp-Ed-ak6NoX_4Aeg_-1433356393")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Element Name")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [StringLength(maximumLength: 35 ,MinimumLength = 1)]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public required IsoMax35Text ElementName { get; init; } 
    #elif NET7_0_OR_GREATER // C# 11 Records, required members
    public System.String ElementName { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public System.String ElementName { get; init; } 
    #else
    public System.String ElementName { get; set; } 
    #endif
    
    /// <summary>
    /// Content of the element.
    /// </summary>
    [IsoId("_RJf8t9p-Ed-ak6NoX_4Aeg_1327304238")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Element Value")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [StringLength(maximumLength: 140 ,MinimumLength = 1)]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public IsoMax140Text? ElementValue { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public System.String? ElementValue { get; init; } 
    #else
    public System.String? ElementValue { get; set; } 
    #endif
    
    
    #nullable disable
    
}
