//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for Entitlement1.  ISO2002 ID# _UJRggtp-Ed-ak6NoX_4Aeg_-1393093293.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Provides information about the entitlement.
/// </summary>
public partial record Entitlement1
     : IIsoXmlSerilizable<Entitlement1>
{
    #nullable enable
    
    /// <summary>
    /// Identification of the party that owns the account.
    /// </summary>
    public PartyIdentification2Choice_? AccountOwnerIdentification { get; init; } 
    /// <summary>
    /// Idenfitication of the account.
    /// </summary>
    public required IsoMax35Text AccountIdentification { get; init; } 
    /// <summary>
    /// Provides information about the securities distribution.
    /// </summary>
    public SecuritiesEntitlement1? SecuritiesDistributionDetails { get; init; } 
    /// <summary>
    /// Provides information about the cash distribution.
    /// </summary>
    public CashEntitlement1? CashDistributionDetails { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (AccountOwnerIdentification is PartyIdentification2Choice_ AccountOwnerIdentificationValue)
        {
            writer.WriteStartElement(null, "AcctOwnrId", xmlNamespace );
            AccountOwnerIdentificationValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        writer.WriteStartElement(null, "AcctId", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax35Text(AccountIdentification)); // data type Max35Text System.String
        writer.WriteEndElement();
        if (SecuritiesDistributionDetails is SecuritiesEntitlement1 SecuritiesDistributionDetailsValue)
        {
            writer.WriteStartElement(null, "SctiesDstrbtnDtls", xmlNamespace );
            SecuritiesDistributionDetailsValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (CashDistributionDetails is CashEntitlement1 CashDistributionDetailsValue)
        {
            writer.WriteStartElement(null, "CshDstrbtnDtls", xmlNamespace );
            CashDistributionDetailsValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static Entitlement1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
