//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for EntityIdentification.  ISO2002 ID# _WHybpNp-Ed-ak6NoX_4Aeg_1831804214.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Identification of a business entity, eg, corporate or financial institution.
/// </summary>
public partial record EntityIdentification
     : IIsoXmlSerilizable<EntityIdentification>
{
    #nullable enable
    
    /// <summary>
    /// Type of identification, eg, BIC or URI.
    /// </summary>
    public required IsoMax4Text Type { get; init; } 
    /// <summary>
    /// Actual identification of the entity.
    /// </summary>
    public required IsoMax30Text EntityIdentifier { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Type", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax4Text(Type)); // data type Max4Text System.String
        writer.WriteEndElement();
        writer.WriteStartElement(null, "Id", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax30Text(EntityIdentifier)); // data type Max30Text System.String
        writer.WriteEndElement();
    }
    public static EntityIdentification Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
