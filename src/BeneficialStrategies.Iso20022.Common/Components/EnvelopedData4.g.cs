//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for EnvelopedData4.  ISO2002 ID# _vJy54WizEeS87LmvcA55sg.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Encrypted data with encryption key.
/// </summary>
public partial record EnvelopedData4
     : IIsoXmlSerilizable<EnvelopedData4>
{
    #nullable enable
    
    /// <summary>
    /// Version of the data structure.
    /// </summary>
    public IsoNumber? Version { get; init; } 
    /// <summary>
    /// Session key or identification of the protection key used by the recipient.
    /// </summary>
    public Recipient4Choice_? Recipient { get; init;  } // Warning: Don't know multiplicity.
    // ID for the above is _vXG9I2izEeS87LmvcA55sg
    /// <summary>
    /// Data protection by encryption (digital envelope), with an encryption key.
    /// </summary>
    public EncryptedContent3? EncryptedContent { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (Version is IsoNumber VersionValue)
        {
            writer.WriteStartElement(null, "Vrsn", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoNumber(VersionValue)); // data type Number System.UInt64
            writer.WriteEndElement();
        }
        // Not sure how to serialize Recipient, multiplicity Unknown
        if (EncryptedContent is EncryptedContent3 EncryptedContentValue)
        {
            writer.WriteStartElement(null, "NcrptdCntt", xmlNamespace );
            EncryptedContentValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static EnvelopedData4 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
