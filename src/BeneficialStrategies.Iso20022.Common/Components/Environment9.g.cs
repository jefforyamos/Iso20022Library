//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for Environment9.  ISO2002 ID# _uiLcgWbaEeeNuKDeKoUMAA.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Environment of the transaction.
/// </summary>
public partial record Environment9
     : IIsoXmlSerilizable<Environment9>
{
    #nullable enable
    
    /// <summary>
    /// financial institution (or its agent) at which the accounts are held by the parties settling. This institution, acting on information provided by the parties, transfers the appropriate funds between the accounts.
    /// </summary>
    public PartyIdentification197? SettlementInstitution { get; init; } 
    /// <summary>
    /// Party sending the message to another intermediary agent or to the destination.
    /// </summary>
    public PartyIdentification197? Sender { get; init; } 
    /// <summary>
    /// Party receiving the message from the origin or from an intermediary agent.
    /// ISO 8583 bit 100.
    /// </summary>
    public PartyIdentification197? Receiver { get; init; } 
    /// <summary>
    /// Financial Institution to which the settlement totals apply.
    /// </summary>
    public FinancialInstitution5? FinancialInstitution { get; init; } 
    /// <summary>
    /// Additional institution involved in settlement. For example, the other party involved in bilateral settlement agreement.
    /// </summary>
    public PartyIdentification197? OtherInstitution { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (SettlementInstitution is PartyIdentification197 SettlementInstitutionValue)
        {
            writer.WriteStartElement(null, "SttlmInstn", xmlNamespace );
            SettlementInstitutionValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (Sender is PartyIdentification197 SenderValue)
        {
            writer.WriteStartElement(null, "Sndr", xmlNamespace );
            SenderValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (Receiver is PartyIdentification197 ReceiverValue)
        {
            writer.WriteStartElement(null, "Rcvr", xmlNamespace );
            ReceiverValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (FinancialInstitution is FinancialInstitution5 FinancialInstitutionValue)
        {
            writer.WriteStartElement(null, "FI", xmlNamespace );
            FinancialInstitutionValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (OtherInstitution is PartyIdentification197 OtherInstitutionValue)
        {
            writer.WriteStartElement(null, "OthrInstn", xmlNamespace );
            OtherInstitutionValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static Environment9 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
