//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for ErrorDetails1.  ISO2002 ID# _BixN8ccuEeiYIbmhB2-RrQ.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Details of the error
/// </summary>
public partial record ErrorDetails1
     : IIsoXmlSerilizable<ErrorDetails1>
{
    #nullable enable
    
    /// <summary>
    /// Code list containing a code that identifies the error condition.
    /// </summary>
    public required MessageError1Code MessageErrorType { get; init; } 
    /// <summary>
    /// Other message error type defined at national or private level.
    /// </summary>
    public IsoMax35Text? OtherMessageErrorType { get; init; } 
    /// <summary>
    /// Error code defined in ISO 8583:2003 table A.10 Message error codes (bit 18). 
    /// </summary>
    public IsoMax35Text? ErrorCode { get; init; } 
    /// <summary>
    /// Other Message Error Code. 
    /// </summary>
    public IsoMax500Text? ErrorDescription { get; init; } 
    /// <summary>
    /// Data element in error. 
    /// </summary>
    public IsoMax4000Text? DataElementInError { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "MsgErrTp", xmlNamespace );
        writer.WriteValue(MessageErrorType.ToString()); // Enum value
        writer.WriteEndElement();
        if (OtherMessageErrorType is IsoMax35Text OtherMessageErrorTypeValue)
        {
            writer.WriteStartElement(null, "OthrMsgErrTp", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(OtherMessageErrorTypeValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
        if (ErrorCode is IsoMax35Text ErrorCodeValue)
        {
            writer.WriteStartElement(null, "ErrCd", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(ErrorCodeValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
        if (ErrorDescription is IsoMax500Text ErrorDescriptionValue)
        {
            writer.WriteStartElement(null, "ErrDesc", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax500Text(ErrorDescriptionValue)); // data type Max500Text System.String
            writer.WriteEndElement();
        }
        if (DataElementInError is IsoMax4000Text DataElementInErrorValue)
        {
            writer.WriteStartElement(null, "DataElmtInErr", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax4000Text(DataElementInErrorValue)); // data type Max4000Text System.String
            writer.WriteEndElement();
        }
    }
    public static ErrorDetails1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
