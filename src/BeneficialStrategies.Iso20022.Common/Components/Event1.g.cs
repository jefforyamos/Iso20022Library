//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for Event1.  ISO2002 ID# _Uslo-dp-Ed-ak6NoX_4Aeg_376982248.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Provides information on an event that happened in a system.
/// </summary>
public partial record Event1
     : IIsoXmlSerilizable<Event1>
{
    #nullable enable
    
    /// <summary>
    /// Proprietary code used to specify an event that occurred in a system.
    /// </summary>
    public required IsoMax4AlphaNumericText EventCode { get; init; } 
    /// <summary>
    /// Describes the parameters of an event which occurred in a system.
    /// </summary>
    public IsoMax35Text? EventParameter { get; init; } 
    /// <summary>
    /// Free text used to describe an event which occurred in a system.
    /// </summary>
    public IsoMax350Text? EventDescription { get; init; } 
    /// <summary>
    /// Date and time at which the event occurred.
    /// </summary>
    public IsoISODateTime? EventTime { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "EvtCd", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax4AlphaNumericText(EventCode)); // data type Max4AlphaNumericText System.String
        writer.WriteEndElement();
        if (EventParameter is IsoMax35Text EventParameterValue)
        {
            writer.WriteStartElement(null, "EvtParam", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(EventParameterValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
        if (EventDescription is IsoMax350Text EventDescriptionValue)
        {
            writer.WriteStartElement(null, "EvtDesc", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax350Text(EventDescriptionValue)); // data type Max350Text System.String
            writer.WriteEndElement();
        }
        if (EventTime is IsoISODateTime EventTimeValue)
        {
            writer.WriteStartElement(null, "EvtTm", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoISODateTime(EventTimeValue)); // data type ISODateTime System.DateTime
            writer.WriteEndElement();
        }
    }
    public static Event1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
