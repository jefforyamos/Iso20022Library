//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for EventContext3.  ISO2002 ID# _8m_hIS8REeu125Ip9zFcsQ.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Context of the Retailer Event message.
/// </summary>
public partial record EventContext3
     : IIsoXmlSerilizable<EventContext3>
{
    #nullable enable
    
    /// <summary>
    /// Reference to the service and functions related to the event.
    /// </summary>
    public required RetailerService1Code ServiceType { get; init; } 
    /// <summary>
    /// Identification of the Point Of Interaction.
    /// </summary>
    public PointOfInteractionComponent11? ComponentIdentification { get; init; } 
    /// <summary>
    /// Identification of the Sale System.
    /// </summary>
    public IsoMax35Text? SaleIdentification { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "SvcTp", xmlNamespace );
        writer.WriteValue(ServiceType.ToString()); // Enum value
        writer.WriteEndElement();
        if (ComponentIdentification is PointOfInteractionComponent11 ComponentIdentificationValue)
        {
            writer.WriteStartElement(null, "CmpntId", xmlNamespace );
            ComponentIdentificationValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (SaleIdentification is IsoMax35Text SaleIdentificationValue)
        {
            writer.WriteStartElement(null, "SaleId", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(SaleIdentificationValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
    }
    public static EventContext3 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
