//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for ExchangeRateInformation1.  ISO2002 ID# _QLp0Ytp-Ed-ak6NoX_4Aeg_-1204184302.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Further detailed information on the exchange rate that has been used in the payment transaction.
/// </summary>
public partial record ExchangeRateInformation1
     : IIsoXmlSerilizable<ExchangeRateInformation1>
{
    #nullable enable
    
    /// <summary>
    /// The factor used for conversion of an amount from one currency to another. This reflects the price at which one currency was bought with another currency.
    /// </summary>
    public IsoBaseOneRate? ExchangeRate { get; init; } 
    /// <summary>
    /// Specifies the type used to complete the currency exchange.
    /// </summary>
    public ExchangeRateType1Code? RateType { get; init; } 
    /// <summary>
    /// Unique and unambiguous reference to the foreign exchange contract agreed between the initiating party/creditor and the debtor agent.
    /// </summary>
    public IsoMax35Text? ContractIdentification { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (ExchangeRate is IsoBaseOneRate ExchangeRateValue)
        {
            writer.WriteStartElement(null, "XchgRate", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoBaseOneRate(ExchangeRateValue)); // data type BaseOneRate System.Decimal
            writer.WriteEndElement();
        }
        if (RateType is ExchangeRateType1Code RateTypeValue)
        {
            writer.WriteStartElement(null, "RateTp", xmlNamespace );
            writer.WriteValue(RateTypeValue.ToString()); // Enum value
            writer.WriteEndElement();
        }
        if (ContractIdentification is IsoMax35Text ContractIdentificationValue)
        {
            writer.WriteStartElement(null, "CtrctId", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(ContractIdentificationValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
    }
    public static ExchangeRateInformation1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
