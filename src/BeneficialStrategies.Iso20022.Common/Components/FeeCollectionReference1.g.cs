//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for FeeCollectionReference1.  ISO2002 ID# _0yDt0SxMEeyg-aG5nXcnfg.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Contains fee collection reference details.
/// </summary>
public partial record FeeCollectionReference1
     : IIsoXmlSerilizable<FeeCollectionReference1>
{
    #nullable enable
    
    /// <summary>
    /// Name of the entity assigning the fee collection reference.
    /// </summary>
    public PartyType32Code? AssignerEntity { get; init; } 
    /// <summary>
    /// Other assigner entity.
    /// </summary>
    public IsoMax35Text? OtherAssignerEntity { get; init; } 
    /// <summary>
    /// Identification of the fee collection.
    /// </summary>
    public FeeCollectionIdentification1? FeeCollectionIdentification { get; init;  } // Warning: Don't know multiplicity.
    // ID for the above is _04o28yxMEeyg-aG5nXcnfg
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (AssignerEntity is PartyType32Code AssignerEntityValue)
        {
            writer.WriteStartElement(null, "AssgnrNtty", xmlNamespace );
            writer.WriteValue(AssignerEntityValue.ToString()); // Enum value
            writer.WriteEndElement();
        }
        if (OtherAssignerEntity is IsoMax35Text OtherAssignerEntityValue)
        {
            writer.WriteStartElement(null, "OthrAssgnrNtty", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(OtherAssignerEntityValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
        // Not sure how to serialize FeeCollectionIdentification, multiplicity Unknown
    }
    public static FeeCollectionReference1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
