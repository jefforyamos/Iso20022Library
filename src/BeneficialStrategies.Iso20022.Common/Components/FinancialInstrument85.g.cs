//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for FinancialInstrument85.  ISO2002 ID# _npD8Z5NBEemQB_8XA98K0Q.
//

using BeneficialStrategies.Iso20022.Choices;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Identification of a security or other asset.
/// </summary>
public partial record FinancialInstrument85
{
    #nullable enable
    
    /// <summary>
    /// Identification of the line of holding in the portfolio.
    /// </summary>
    public IsoMax35Text? LineIdentification { get; init; } 
    /// <summary>
    /// Identification of the asset.
    /// </summary>
    public required IFinancialInstrument62Choice Instrument { get; init; } 
    /// <summary>
    /// Specifies the quantity of assets to be transferred in units or in a percentage rate.
    /// </summary>
    public Quantity47? Quantity { get; init; } 
    /// <summary>
    /// Breakdown of units.
    /// </summary>
    public Unit11? UnitsDetails { get; init;  } // Warning: Don't know multiplicity.
    /// <summary>
    /// Unique and unambiguous investor's identification of the transfer. This reference can typically be used in a hub scenario to give the reference of the transfer as assigned by the underlying client.
    /// </summary>
    public AdditionalReference10? ClientReference { get; init; } 
    /// <summary>
    /// Unambiguous identification of the transfer allocated by the counterparty.
    /// </summary>
    public AdditionalReference10? CounterpartyReference { get; init; } 
    /// <summary>
    /// Business process in which the actors are involved. This will facilitate the right business process to be triggered, according to the market business model, which may require matching instructions (double leg process) or not (single leg process).
    /// </summary>
    public BusinessFlowType1Code? BusinessFlowType { get; init; } 
    /// <summary>
    /// Average cost per share of the security, including all fees.
    /// </summary>
    public IsoActiveOrHistoricCurrencyAndAmount? AverageAcquisitionPrice { get; init; } 
    /// <summary>
    /// Net asset on the balance sheet, the total portfolio value minus or plus the unrealised gain or loss.
    /// </summary>
    public DateAndAmount2? TotalBookValue { get; init; } 
    /// <summary>
    /// Date and market value of the asset. 
    /// </summary>
    public DateAndAmount2? LatestValuation { get; init; } 
    /// <summary>
    /// Account held in the name of the party that is not the name of the beneficial owner of the shares.
    /// (Party and account into which the transferee receives the financial instrument from the transferor.)
    /// </summary>
    public Account28? TransfereeAccount { get; init; } 
    /// <summary>
    /// Party and account from which the transferor delivers the financial instrument to the transferee.
    /// </summary>
    public Account28? Transferor { get; init;  } // Warning: Don't know multiplicity.
    /// <summary>
    /// Identification of a related party or intermediary.
    /// </summary>
    public Intermediary43? IntermediaryInformation { get; init;  } // Warning: Don't know multiplicity.
    /// <summary>
    /// Number of units that have been received (crystallised) or not yet received (uncrystallised) from the fund. This is typically relevant to a pension fund.
    /// </summary>
    public Crystallisation2? CrystallisationDetails { get; init;  } // Warning: Don't know multiplicity.
    /// <summary>
    /// Date or tax quarter used for the calculation of tax on the asset.
    /// </summary>
    public Tax36? TaxValuationPoint { get; init; } 
    /// <summary>
    /// Chain of parties involved in the settlement of a transaction.
    /// </summary>
    public FundSettlementParameters17? SettlementPartiesDetails { get; init;  } // Warning: Don't know multiplicity.
    /// <summary>
    /// Additional information about the financial instrument.
    /// </summary>
    public AdditionalInformation15? AdditionalInformation { get; init;  } // Warning: Don't know multiplicity.
    
    #nullable disable
}
