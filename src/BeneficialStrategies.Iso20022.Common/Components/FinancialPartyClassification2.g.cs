//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for FinancialPartyClassification2.  ISO2002 ID# _0lQ2EbHXEemRPNDOvJwndA.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Specifies the classification of a financial institution.
/// </summary>
public partial record FinancialPartyClassification2
     : IIsoXmlSerilizable<FinancialPartyClassification2>
{
    #nullable enable
    
    /// <summary>
    /// Classification of the business activities of the reporting counterparty.
    /// </summary>
    public IsoNACEDomainIdentifier? Classification { get; init;  } // Warning: Don't know multiplicity.
    // ID for the above is _0uXHsbHXEemRPNDOvJwndA
    /// <summary>
    /// Nature business activities of the reporting counterparty as an investment fund.
    /// </summary>
    public FundType2Code? InvestmentFundClassification { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        // Not sure how to serialize Classification, multiplicity Unknown
        if (InvestmentFundClassification is FundType2Code InvestmentFundClassificationValue)
        {
            writer.WriteStartElement(null, "InvstmtFndClssfctn", xmlNamespace );
            writer.WriteValue(InvestmentFundClassificationValue.ToString()); // Enum value
            writer.WriteEndElement();
        }
    }
    public static FinancialPartyClassification2 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
