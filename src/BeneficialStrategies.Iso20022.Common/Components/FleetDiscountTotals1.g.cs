//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for FleetDiscountTotals1.  ISO2002 ID# _G9Oy1vjDEeiJaN6-Lf-c_w.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Contains the discount information pertaining to the fleet transaction. 
/// </summary>
public partial record FleetDiscountTotals1
     : IIsoXmlSerilizable<FleetDiscountTotals1>
{
    #nullable enable
    
    /// <summary>
    /// Total amount.
    /// </summary>
    public IsoImpliedCurrencyAndAmount? TotalAmount { get; init; } 
    /// <summary>
    /// Fuel amount.
    /// </summary>
    public IsoImpliedCurrencyAndAmount? FuelAmount { get; init; } 
    /// <summary>
    /// Non-fuel amount.
    /// </summary>
    public IsoImpliedCurrencyAndAmount? NonFuelAmount { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (TotalAmount is IsoImpliedCurrencyAndAmount TotalAmountValue)
        {
            writer.WriteStartElement(null, "TtlAmt", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoImpliedCurrencyAndAmount(TotalAmountValue)); // data type ImpliedCurrencyAndAmount System.Decimal
            writer.WriteEndElement();
        }
        if (FuelAmount is IsoImpliedCurrencyAndAmount FuelAmountValue)
        {
            writer.WriteStartElement(null, "FuelAmt", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoImpliedCurrencyAndAmount(FuelAmountValue)); // data type ImpliedCurrencyAndAmount System.Decimal
            writer.WriteEndElement();
        }
        if (NonFuelAmount is IsoImpliedCurrencyAndAmount NonFuelAmountValue)
        {
            writer.WriteStartElement(null, "NonFuelAmt", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoImpliedCurrencyAndAmount(NonFuelAmountValue)); // data type ImpliedCurrencyAndAmount System.Decimal
            writer.WriteEndElement();
        }
    }
    public static FleetDiscountTotals1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
