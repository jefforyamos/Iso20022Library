//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for FundCashInBreakdown3.  ISO2002 ID# _KIxN_QatEeS3lpTattq7hg.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Breakdown of cash movements into a fund as a result of investment funds transactions, eg, subscriptions or switch-in.
/// </summary>
public partial record FundCashInBreakdown3
{
    #nullable enable
    
    /// <summary>
    /// Amount of cash flow in, expressed as an amount of money.
    /// </summary>
    public IsoActiveOrHistoricCurrencyAndAmount? Amount { get; init; } 
    /// <summary>
    /// Amount of the cash flow in, expressed as a number of units.
    /// </summary>
    public FinancialInstrumentQuantity1? UnitsNumber { get; init; } 
    /// <summary>
    /// Indicates whether the cash flow is an item that did not appear on the previously sent report, for example, because it was received close to cut-off time.
    /// </summary>
    public IsoYesNoIndicator? NewAmountIndicator { get; init; } 
    /// <summary>
    /// Type of transaction that resulted in the cash-in movement, for example, subscription, switch-in.
    /// </summary>
    public required IInvestmentFundTransactionInType1Choice InvestmentFundTransactionInType { get; init; } 
    /// <summary>
    /// Specifies how the original order was expressed that resulted in the cash-in movement, that is cash or units.
    /// </summary>
    public required IQuantityType1Choice OriginalOrderQuantityType { get; init; } 
    /// <summary>
    /// Charge for the placement of an order.
    /// </summary>
    public Charge26? ChargeDetails { get; init;  } // Warning: Don't know multiplicity.
    /// <summary>
    /// Information related to the commission applied to an order, for example, back-end or front-end commission.
    /// </summary>
    public Commission21? CommissionDetails { get; init;  } // Warning: Don't know multiplicity.
    /// <summary>
    /// Settlement currency for the transaction.
    /// </summary>
    public ActiveCurrencyCode? SettlementCurrency { get; init; } 
    
    #nullable disable
}
