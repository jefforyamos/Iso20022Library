//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for GeneralInformation2.  ISO2002 ID# _S8KT9gEcEeCQm6a_G2yO_w_1137960838.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Information concerning the negotiation process leading to a treasury trade.
/// </summary>
[DataContract]
[XmlType]
public partial record GeneralInformation2
{
    #nullable enable
    
    /// <summary>
    /// Indicates whether the trade is a block or single trade.
    /// </summary>
    [DataMember]
    public IsoYesNoIndicator? BlockIndicator { get; init; } 
    /// <summary>
    /// Reference to a preceeding transaction, for example, an option or swap.
    /// </summary>
    [DataMember]
    public IsoMax35Text? RelatedTradeReference { get; init; } 
    /// <summary>
    /// Method used by the trading parties to negotiate and/or execute a deal.
    /// </summary>
    [DataMember]
    public Trading1MethodCode? DealingMethod { get; init; } 
    /// <summary>
    /// Broker that arranged the deal between the trading side and the counterparty side or, when two money brokers are involved, between the trading side and the other money broker.
    /// </summary>
    [DataMember]
    public PartyIdentification19Choice_? BrokerIdentification { get; init; } 
    /// <summary>
    /// Counterparty's reference for the trade.
    /// </summary>
    [DataMember]
    public IsoMax35Text? CounterpartyReference { get; init; } 
    /// <summary>
    /// Brokerage fee for a broker confirmation.
    /// </summary>
    [DataMember]
    public IsoActiveCurrencyAndAmount? BrokersCommission { get; init; } 
    /// <summary>
    /// Specifies additional information for the receiver.
    /// </summary>
    [DataMember]
    public IsoMax140Text? SenderToReceiverInformation { get; init; } 
    /// <summary>
    /// Branch at the counterparty side with which the deal was done.
    /// </summary>
    [DataMember]
    public PartyIdentification19Choice_? DealingBranchTradingSide { get; init; } 
    /// <summary>
    /// Branch at the counterparty side with which the deal was done.
    /// </summary>
    [DataMember]
    public PartyIdentification19Choice_? DealingBranchCounterpartySide { get; init; } 
    /// <summary>
    /// Specifies the name and/or electronic address of the the receiver of the message who may be contacted for any queries concerning this trade.
    /// </summary>
    [DataMember]
    public ContactInformation1? ContactInformation { get; init; } 
    
    #nullable disable
}
