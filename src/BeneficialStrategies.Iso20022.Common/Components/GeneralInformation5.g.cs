//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for GeneralInformation5.  ISO2002 ID# _KAWoEZUVEea7vKctaoIyEQ.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Information concerning the negotiation process leading to a treasury trade.
/// </summary>
public partial record GeneralInformation5
{
    #nullable enable
    
    /// <summary>
    /// Indicates whether the trade is a block or single trade.
    /// </summary>
    public IsoYesNoIndicator? BlockIndicator { get; init; } 
    /// <summary>
    /// Reference to a preceding transaction, for example, an option or swap.
    /// </summary>
    public IsoMax35Text? RelatedTradeReference { get; init; } 
    /// <summary>
    /// Method used by the trading parties to negotiate and/or execute a deal.
    /// </summary>
    public Trading1MethodCode? DealingMethod { get; init; } 
    /// <summary>
    /// Specifies the broker which arranged the deal between the trading side and the counterparty side or, when two money brokers are involved, between the trading side and the other money broker.
    /// </summary>
    public PartyIdentification73Choice_? BrokerIdentification { get; init; } 
    /// <summary>
    /// Counterparty's reference for the trade.
    /// </summary>
    public IsoMax35Text? CounterpartyReference { get; init; } 
    /// <summary>
    /// Brokerage fee for a broker confirmation.
    /// </summary>
    public IsoActiveCurrencyAndAmount? BrokersCommission { get; init; } 
    /// <summary>
    /// Specifies additional information for the receiver and applies to the whole message.
    /// </summary>
    public IsoMax210Text? SenderToReceiverInformation { get; init; } 
    /// <summary>
    /// Specifies the branch at the trading side with which the deal was done.
    /// </summary>
    public PartyIdentification73Choice_? DealingBranchTradingSide { get; init; } 
    /// <summary>
    /// Specifies the branch at the counterparty side with which the deal was done.
    /// </summary>
    public PartyIdentification73Choice_? DealingBranchCounterpartySide { get; init; } 
    /// <summary>
    /// Specifies the name and/or electronic address of the receiver of the message who may be contacted for any queries concerning this trade.
    /// </summary>
    public ContactInformation1? ContactInformation { get; init; } 
    /// <summary>
    /// Specifies the type, date and version of the agreement used in a trade.
    /// </summary>
    public AgreementConditions1? AgreementDetails { get; init; } 
    /// <summary>
    /// Specifies the year of definitions of the agreement.
    /// </summary>
    public IsoISOYear? DefinitionsYear { get; init; } 
    /// <summary>
    /// Specifies a reference applied to the trade instruction by a broker.
    /// </summary>
    public IsoMax35Text? BrokersReference { get; init; } 
    
    #nullable disable
}
