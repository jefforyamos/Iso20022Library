//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for GenericIdentification39.  ISO2002 ID# _7MgaQRHnEeG9eo4v8X6Ubw.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Identification expressed as a proprietary type and narrative description.
/// </summary>
public partial record GenericIdentification39
     : IIsoXmlSerilizable<GenericIdentification39>
{
    #nullable enable
    
    /// <summary>
    /// Proprietary information issued by the data source scheme issuer.
    /// </summary>
    public required IsoRestrictedFINMax30Text Identification { get; init; } 
    /// <summary>
    /// Entity that assigns the identification.
    /// </summary>
    public IsoRestrictedFINMax8Text? Issuer { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Id", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoRestrictedFINMax30Text(Identification)); // data type RestrictedFINMax30Text System.String
        writer.WriteEndElement();
        if (Issuer is IsoRestrictedFINMax8Text IssuerValue)
        {
            writer.WriteStartElement(null, "Issr", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoRestrictedFINMax8Text(IssuerValue)); // data type RestrictedFINMax8Text System.String
            writer.WriteEndElement();
        }
    }
    public static GenericIdentification39 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
