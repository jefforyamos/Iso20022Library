//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for GovernanceRules1.  ISO2002 ID# _94TXpnltEeG7BsjMvd1mEw_101008065.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Rules governing an undertaking such as a guarantee or standby letter of credit.
/// </summary>
public partial record GovernanceRules1
     : IIsoXmlSerilizable<GovernanceRules1>
{
    #nullable enable
    
    /// <summary>
    /// Identification of the governance rules.
    /// </summary>
    public required GovernanceIdentification1Choice_ RuleIdentification { get; init; } 
    /// <summary>
    /// Law applicable to the undertaking.
    /// </summary>
    public Location1? ApplicableLaw { get; init; } 
    /// <summary>
    /// Place at or system under which any dispute related to the undertaking is to be resolved, such as court or arbitration. This is also known as 'forum'.
    /// </summary>
    public Location1? Jurisdiction { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "RuleId", xmlNamespace );
        RuleIdentification.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (ApplicableLaw is Location1 ApplicableLawValue)
        {
            writer.WriteStartElement(null, "AplblLaw", xmlNamespace );
            ApplicableLawValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (Jurisdiction is Location1 JurisdictionValue)
        {
            writer.WriteStartElement(null, "Jursdctn", xmlNamespace );
            JurisdictionValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static GovernanceRules1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
