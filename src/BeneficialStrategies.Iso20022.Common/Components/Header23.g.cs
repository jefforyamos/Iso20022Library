//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for Header23.  ISO2002 ID# _d7nnwAJXEeS2H9l84F_isg.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Set of characteristics related to the transfer of transactions.
/// </summary>
public partial record Header23
     : IIsoXmlSerilizable<Header23>
{
    #nullable enable
    
    /// <summary>
    /// Version of file format.
    /// </summary>
    public required IsoMax6Text FormatVersion { get; init; } 
    /// <summary>
    /// Unique identification of an exchange occurrence.
    /// </summary>
    public required IsoMax3NumericText ExchangeIdentification { get; init; } 
    /// <summary>
    /// Unique identification of the partner that has initiated the exchange.
    /// </summary>
    public required GenericIdentification32 InitiatingParty { get; init; } 
    /// <summary>
    /// Unique identification of the partner that is the recipient of the exchange.
    /// </summary>
    public GenericIdentification32? RecipientParty { get; init; } 
    /// <summary>
    /// Sequence of this message in a conversation in integer.
    /// </summary>
    public required IsoNumber MessageSequenceNumber { get; init; } 
    /// <summary>
    /// Date and time at which the file or message was created.
    /// </summary>
    public required IsoISODateTime CreationDateTime { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "FrmtVrsn", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax6Text(FormatVersion)); // data type Max6Text System.String
        writer.WriteEndElement();
        writer.WriteStartElement(null, "XchgId", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax3NumericText(ExchangeIdentification)); // data type Max3NumericText System.String
        writer.WriteEndElement();
        writer.WriteStartElement(null, "InitgPty", xmlNamespace );
        InitiatingParty.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (RecipientParty is GenericIdentification32 RecipientPartyValue)
        {
            writer.WriteStartElement(null, "RcptPty", xmlNamespace );
            RecipientPartyValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        writer.WriteStartElement(null, "MsgSeqNb", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoNumber(MessageSequenceNumber)); // data type Number System.UInt64
        writer.WriteEndElement();
        writer.WriteStartElement(null, "CreDtTm", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoISODateTime(CreationDateTime)); // data type ISODateTime System.DateTime
        writer.WriteEndElement();
    }
    public static Header23 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
