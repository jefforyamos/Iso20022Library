//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for InRepairStatus1.  ISO2002 ID# _Uuhiptp-Ed-ak6NoX_4Aeg_-794783023.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Status is in repair.
/// </summary>
public partial record InRepairStatus1
     : IIsoXmlSerilizable<InRepairStatus1>
{
    #nullable enable
    
    /// <summary>
    /// Indicates that there is no reason available or to report.
    /// </summary>
    public required NoReasonCode NoReason { get; init; } 
    /// <summary>
    /// Reason of an in repair status in the report.
    /// </summary>
    public required InRepairStatusReason1 Reason { get; init; } 
    /// <summary>
    /// Proprietary identification for a reason of a specific status in the report.
    /// </summary>
    public required GenericIdentification1 DataSourceScheme { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "NoRsn", xmlNamespace );
        writer.WriteValue(NoReason.ToString()); // Enum value
        writer.WriteEndElement();
        writer.WriteStartElement(null, "Rsn", xmlNamespace );
        Reason.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "DataSrcSchme", xmlNamespace );
        DataSourceScheme.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
    }
    public static InRepairStatus1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
