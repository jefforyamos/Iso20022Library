//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for InstrumentAndSubClassIdentification2.  ISO2002 ID# _GUulYaaUEeqZmriXpMtonA.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Identification of a financial instrument and of the non-equity sub-class of the financial instrument.
/// </summary>
public partial record InstrumentAndSubClassIdentification2
     : IIsoXmlSerilizable<InstrumentAndSubClassIdentification2>
{
    #nullable enable
    
    /// <summary>
    /// Identifies the financial instrument using an ISIN.
    /// </summary>
    public required IsoISINOct2015Identifier ISIN { get; init; } 
    /// <summary>
    /// Sub class of non-equity instruments to which the instrument belongs.
    /// </summary>
    public NonEquitySubClass1? DerivativeSubClass { get; init; } 
    /// <summary>
    /// Identification of non-equity financial instruments.
    /// </summary>
    public NonEquityInstrumentReportingClassification1Code? FinancialInstrumentClassification { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "ISIN", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoISINOct2015Identifier(ISIN)); // data type ISINOct2015Identifier System.String
        writer.WriteEndElement();
        if (DerivativeSubClass is NonEquitySubClass1 DerivativeSubClassValue)
        {
            writer.WriteStartElement(null, "DerivSubClss", xmlNamespace );
            DerivativeSubClassValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (FinancialInstrumentClassification is NonEquityInstrumentReportingClassification1Code FinancialInstrumentClassificationValue)
        {
            writer.WriteStartElement(null, "FinInstrmClssfctn", xmlNamespace );
            writer.WriteValue(FinancialInstrumentClassificationValue.ToString()); // Enum value
            writer.WriteEndElement();
        }
    }
    public static InstrumentAndSubClassIdentification2 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
