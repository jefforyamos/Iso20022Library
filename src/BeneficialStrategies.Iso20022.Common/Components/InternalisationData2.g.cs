//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for InternalisationData2.  ISO2002 ID# _RCmFcO3uEeaWjpoyrnG6Rw.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Specifies the aggregated data of internalised settlement instructions.
/// </summary>
public partial record InternalisationData2
     : IIsoXmlSerilizable<InternalisationData2>
{
    #nullable enable
    
    /// <summary>
    /// Aggregated volume and value of internalised settlement instructions settled during the period covered by the report, for financial Instruments, types of transactions, types of clients and cash transfers.
    /// </summary>
    public required InternalisationDataVolume1 Settled { get; init; } 
    /// <summary>
    /// Aggregated volume and value of internalised settlement instructions failed during the period covered by the report, for financial Instruments, types of transactions, types of clients and cash transfers.
    /// </summary>
    public required InternalisationDataVolume1 Failed { get; init; } 
    /// <summary>
    /// Aggregated total volume and value of internalised settlement instructions performed (settled and failed) during the period covered by the report, for financial Instruments, types of transactions, types of clients and cash transfers.
    /// </summary>
    public required InternalisationDataVolume1 Total { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Sttld", xmlNamespace );
        Settled.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "Faild", xmlNamespace );
        Failed.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "Ttl", xmlNamespace );
        Total.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
    }
    public static InternalisationData2 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
