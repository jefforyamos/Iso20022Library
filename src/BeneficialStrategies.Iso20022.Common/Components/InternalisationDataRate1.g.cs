//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for InternalisationDataRate1.  ISO2002 ID# _3T-LI-3tEeaWjpoyrnG6Rw.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Specifies the volume and value percentage rates of internalised settlement instructions.
/// </summary>
public partial record InternalisationDataRate1
     : IIsoXmlSerilizable<InternalisationDataRate1>
{
    #nullable enable
    
    /// <summary>
    /// Specifies the rate, in terms of volume, of the failed internalised settlement instructions compared to the total volume, of internalised settlement instructions performed (settled and failed) during the period covered by the report.
    /// </summary>
    public required IsoPercentageRate VolumePercentage { get; init; } 
    /// <summary>
    /// Specifies the rate, in terms of value, of the failed internalised settlement instructions compared to the total value of internalised settlement instructions performed (settled and failed) during the period covered by the report.
    /// </summary>
    public required IsoPercentageRate Value { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "VolPctg", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoPercentageRate(VolumePercentage)); // data type PercentageRate System.Decimal
        writer.WriteEndElement();
        writer.WriteStartElement(null, "Val", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoPercentageRate(Value)); // data type PercentageRate System.Decimal
        writer.WriteEndElement();
    }
    public static InternalisationDataRate1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
