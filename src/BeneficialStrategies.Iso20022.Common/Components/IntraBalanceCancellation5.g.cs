//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for IntraBalanceCancellation5.  ISO2002 ID# _p-rkdTnfEem7JZMuWtwtsg.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Provides the cancellation requests data in the report.
/// </summary>
public partial record IntraBalanceCancellation5
     : IIsoXmlSerilizable<IntraBalanceCancellation5>
{
    #nullable enable
    
    /// <summary>
    /// Account to or from which a cash entry is made.
    /// </summary>
    public CashAccount38? CashAccount { get; init; } 
    /// <summary>
    /// Party that owns the account.
    /// </summary>
    public SystemPartyIdentification8? CashAccountOwner { get; init; } 
    /// <summary>
    /// Party that manages the cash account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account.
    /// </summary>
    public BranchAndFinancialInstitutionIdentification6? CashAccountServicer { get; init; } 
    /// <summary>
    /// Status and status reason of the transaction.
    /// </summary>
    public ProcessingStatus69Choice_? ProcessingStatus { get; init; } 
    /// <summary>
    /// Further details of the individual intrabalance cancellation transaction.
    /// </summary>
    public IntraBalanceCancellation6? Cancellation { get; init;  } // Warning: Don't know multiplicity.
    // ID for the above is _qIqm7TnfEem7JZMuWtwtsg
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (CashAccount is CashAccount38 CashAccountValue)
        {
            writer.WriteStartElement(null, "CshAcct", xmlNamespace );
            CashAccountValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (CashAccountOwner is SystemPartyIdentification8 CashAccountOwnerValue)
        {
            writer.WriteStartElement(null, "CshAcctOwnr", xmlNamespace );
            CashAccountOwnerValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (CashAccountServicer is BranchAndFinancialInstitutionIdentification6 CashAccountServicerValue)
        {
            writer.WriteStartElement(null, "CshAcctSvcr", xmlNamespace );
            CashAccountServicerValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (ProcessingStatus is ProcessingStatus69Choice_ ProcessingStatusValue)
        {
            writer.WriteStartElement(null, "PrcgSts", xmlNamespace );
            ProcessingStatusValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        // Not sure how to serialize Cancellation, multiplicity Unknown
    }
    public static IntraBalanceCancellation5 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
