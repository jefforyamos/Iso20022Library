//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for InvestorRequirements3.  ISO2002 ID# _XtujXc0SEeuAE-cYsQdwHQ.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Investor’s investment requirements.
/// </summary>
public partial record InvestorRequirements3
     : IIsoXmlSerilizable<InvestorRequirements3>
{
    #nullable enable
    
    /// <summary>
    /// Specifies whether the product is compatible with a client who is looking for the preservation of capital. When used in reference to MiFID, this is in the scope of the European MiFID Template (EMT) reference 05010.
    /// </summary>
    public TargetMarket1Code? ReturnProfilePreservation { get; init; } 
    /// <summary>
    /// Specifies whether the product is compatible with a client looking for capitalisation growth. When used in reference to MiFID, this is in the scope of the European MiFID Template (EMT) reference 05020.
    /// </summary>
    public TargetMarket1Code? ReturnProfileGrowth { get; init; } 
    /// <summary>
    /// Specifies whether the product is compatible with a client who is looking for income. When used in reference to MiFID, this is in the scope of the European MiFID Template (EMT) reference 05030.
    /// </summary>
    public TargetMarket1Code? ReturnProfileIncome { get; init; } 
    /// <summary>
    /// Level of compatibility of the investor risk profile with the hedging profile of a structured security product.
    /// When used in reference to MiFID, this is in the scope of the European MiFID Template (EMT) reference 05040. 
    /// </summary>
    public TargetMarket1Code? ReturnProfileHedging { get; init; } 
    /// <summary>
    /// Level of compatibility of the investor risk profile with the option or leveraged return profile of a structured security product. When used in reference to MiFID, this is in the scope of the European MiFID Template (EMT) reference 05050.
    /// </summary>
    public TargetMarket1Code? OptionOrLeveragedReturnProfile { get; init; } 
    /// <summary>
    /// Level of compatibility of the investor risk profile with the Return Profile Pension Scheme Germany profile of the product. When used in reference to MiFID, this is in the scope of the European MiFID Template (EMT) reference 05070.
    /// </summary>
    public TargetMarket1Code? ReturnProfilePensionSchemeGermany { get; init; } 
    /// <summary>
    /// Minimum recommended holding period (RHP).
    /// When used in reference to MiFID, this is in the scope of the European MiFID Template (EMT) reference 05080.
    /// </summary>
    public TimeHorizon2Choice_? MinimumHoldingPeriod { get; init; } 
    /// <summary>
    /// Specifies whether the product is compatible with investors that have Environmental, Social and Governance (ESG) preferences. When used in reference to MiFID, this is in the scope of the European MiFID Template (EMT) reference 05105.
    /// </summary>
    public TargetMarket2Code? ESGPreferences { get; init; } 
    /// <summary>
    /// Specifies whether the product is compatible with investors that have sustainability preferences. When used in reference to MiFID, this is in the scope of the European MiFID Template (EMT V3.1) reference 05105.
    /// </summary>
    public SustainabilityPreferences1Code? SustainabilityPreferences { get; init; } 
    /// <summary>
    /// Specifies other specific investment needs. When used in reference to MiFID, this is in the scope of the European MiFID Template (EMT) reference 05115.
    /// </summary>
    public InvestmentNeed2Choice_? OtherSpecificInvestmentNeed { get; init; } 
    /// <summary>
    /// Other investment need. 
    /// </summary>
    public OtherInvestmentNeed1? Other { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (ReturnProfilePreservation is TargetMarket1Code ReturnProfilePreservationValue)
        {
            writer.WriteStartElement(null, "RtrPrflPrsrvtn", xmlNamespace );
            writer.WriteValue(ReturnProfilePreservationValue.ToString()); // Enum value
            writer.WriteEndElement();
        }
        if (ReturnProfileGrowth is TargetMarket1Code ReturnProfileGrowthValue)
        {
            writer.WriteStartElement(null, "RtrPrflGrwth", xmlNamespace );
            writer.WriteValue(ReturnProfileGrowthValue.ToString()); // Enum value
            writer.WriteEndElement();
        }
        if (ReturnProfileIncome is TargetMarket1Code ReturnProfileIncomeValue)
        {
            writer.WriteStartElement(null, "RtrPrflIncm", xmlNamespace );
            writer.WriteValue(ReturnProfileIncomeValue.ToString()); // Enum value
            writer.WriteEndElement();
        }
        if (ReturnProfileHedging is TargetMarket1Code ReturnProfileHedgingValue)
        {
            writer.WriteStartElement(null, "RtrPrflHdgg", xmlNamespace );
            writer.WriteValue(ReturnProfileHedgingValue.ToString()); // Enum value
            writer.WriteEndElement();
        }
        if (OptionOrLeveragedReturnProfile is TargetMarket1Code OptionOrLeveragedReturnProfileValue)
        {
            writer.WriteStartElement(null, "OptnOrLvrgdRtrPrfl", xmlNamespace );
            writer.WriteValue(OptionOrLeveragedReturnProfileValue.ToString()); // Enum value
            writer.WriteEndElement();
        }
        if (ReturnProfilePensionSchemeGermany is TargetMarket1Code ReturnProfilePensionSchemeGermanyValue)
        {
            writer.WriteStartElement(null, "RtrPrflPnsnSchmeDE", xmlNamespace );
            writer.WriteValue(ReturnProfilePensionSchemeGermanyValue.ToString()); // Enum value
            writer.WriteEndElement();
        }
        if (MinimumHoldingPeriod is TimeHorizon2Choice_ MinimumHoldingPeriodValue)
        {
            writer.WriteStartElement(null, "MinHldgPrd", xmlNamespace );
            MinimumHoldingPeriodValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (ESGPreferences is TargetMarket2Code ESGPreferencesValue)
        {
            writer.WriteStartElement(null, "ESGPrefs", xmlNamespace );
            writer.WriteValue(ESGPreferencesValue.ToString()); // Enum value
            writer.WriteEndElement();
        }
        if (SustainabilityPreferences is SustainabilityPreferences1Code SustainabilityPreferencesValue)
        {
            writer.WriteStartElement(null, "SstnbltyPrefs", xmlNamespace );
            writer.WriteValue(SustainabilityPreferencesValue.ToString()); // Enum value
            writer.WriteEndElement();
        }
        if (OtherSpecificInvestmentNeed is InvestmentNeed2Choice_ OtherSpecificInvestmentNeedValue)
        {
            writer.WriteStartElement(null, "OthrSpcfcInvstmtNeed", xmlNamespace );
            OtherSpecificInvestmentNeedValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (Other is OtherInvestmentNeed1 OtherValue)
        {
            writer.WriteStartElement(null, "Othr", xmlNamespace );
            OtherValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static InvestorRequirements3 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
