//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for KEKIdentifier1.  ISO2002 ID# _Sw1NuwEcEeCQm6a_G2yO_w_607012210.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Identification of a key encryption key (KEK), using previously distributed symmetric key.
/// </summary>
public partial record KEKIdentifier1
     : IIsoXmlSerilizable<KEKIdentifier1>
{
    #nullable enable
    
    /// <summary>
    /// Identification of the cryptographic key.
    /// </summary>
    public required IsoMax140Text KeyIdentification { get; init; } 
    /// <summary>
    /// Version of the cryptographic key.
    /// </summary>
    public required IsoExact10Text KeyVersion { get; init; } 
    /// <summary>
    /// Identification used for derivation of a unique key from a master key provided for the data protection.
    /// </summary>
    public IsoMin5Max16Binary? DerivationIdentification { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "KeyId", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax140Text(KeyIdentification)); // data type Max140Text System.String
        writer.WriteEndElement();
        writer.WriteStartElement(null, "KeyVrsn", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoExact10Text(KeyVersion)); // data type Exact10Text System.String
        writer.WriteEndElement();
        if (DerivationIdentification is IsoMin5Max16Binary DerivationIdentificationValue)
        {
            writer.WriteStartElement(null, "DerivtnId", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMin5Max16Binary(DerivationIdentificationValue)); // data type Min5Max16Binary System.Byte[]
            writer.WriteEndElement();
        }
    }
    public static KEKIdentifier1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
