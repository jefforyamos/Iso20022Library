//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for LineItemDetails11.  ISO2002 ID# _SxwzgTAWEeOKib24wnHaFg.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Goods or services that are part of a commercial trade agreement.
/// </summary>
public partial record LineItemDetails11
{
    #nullable enable
    
    /// <summary>
    /// Sequential number assigned to a line item.
    /// </summary>
    public required IsoMax70Text LineItemIdentification { get; init; } 
    /// <summary>
    /// Specifies the quantity of a product in a trade transaction.
    /// </summary>
    public required Quantity9 Quantity { get; init; } 
    /// <summary>
    /// Amount of money for which goods or services are offered, sold, or bought.
    /// </summary>
    public UnitPrice18? UnitPrice { get; init; } 
    /// <summary>
    /// Name of the product detailed in the corresponding line item.
    /// </summary>
    public IsoMax70Text? ProductName { get; init; } 
    /// <summary>
    /// Identifies the product of the corresponding line item.
    /// </summary>
    public IProductIdentifier2Choice? ProductIdentifier { get; init;  } // Warning: Don't know multiplicity.
    /// <summary>
    /// Identifies the characteristics of product.
    /// </summary>
    public IProductCharacteristics1Choice? ProductCharacteristics { get; init;  } // Warning: Don't know multiplicity.
    /// <summary>
    /// Identifies the category of product.
    /// </summary>
    public IProductCategory1Choice? ProductCategory { get; init;  } // Warning: Don't know multiplicity.
    /// <summary>
    /// Country of origin of the goods.
    /// </summary>
    public CountryCode? ProductOrigin { get; init; } 
    /// <summary>
    /// Variance on price for the goods.
    /// </summary>
    public Adjustment6? Adjustment { get; init;  } // Warning: Don't know multiplicity.
    /// <summary>
    /// Charges related to the conveyance of goods.
    /// </summary>
    public Charge25? FreightCharges { get; init; } 
    /// <summary>
    /// Amount of money due to the government or tax authority, according to various pre-defined parameters linked to the value of the goods in a trade transaction.
    /// </summary>
    public Tax22? Tax { get; init;  } // Warning: Don't know multiplicity.
    /// <summary>
    /// Total amount of the line item after adjustments have been applied.
    /// </summary>
    public required IsoCurrencyAndAmount TotalAmount { get; init; } 
    
    #nullable disable
}
