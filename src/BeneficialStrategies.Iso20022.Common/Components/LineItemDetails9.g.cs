//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for LineItemDetails9.  ISO2002 ID# _SqWrcNp-Ed-ak6NoX_4Aeg_1674748039.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Goods or services that are part of a commercial trade agreement.
/// </summary>
[DataContract]
[XmlType]
public partial record LineItemDetails9
{
    #nullable enable
    
    /// <summary>
    /// Sequential number assigned to a line item.
    /// </summary>
    [DataMember]
    public required IsoMax70Text LineItemIdentification { get; init; } 
    /// <summary>
    /// Specifies the quantity of a product in a trade transaction.
    /// </summary>
    [DataMember]
    public required Quantity4 Quantity { get; init; } 
    /// <summary>
    /// Amount of money for which goods or services are offered, sold, or bought.
    /// </summary>
    [DataMember]
    public UnitPrice9? UnitPrice { get; init; } 
    /// <summary>
    /// Name of the product detailed in the corresponding line item.
    /// </summary>
    [DataMember]
    public IsoMax70Text? ProductName { get; init; } 
    /// <summary>
    /// Identifies the product of the corresponding line item.
    /// </summary>
    [DataMember]
    public ValueList<ProductIdentifier2Choice_> ProductIdentifier { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Identifies the characteristics of product.
    /// </summary>
    [DataMember]
    public ValueList<ProductCharacteristics1Choice_> ProductCharacteristics { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Identifies the category of product.
    /// </summary>
    [DataMember]
    public ValueList<ProductCategory1Choice_> ProductCategory { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Country of origin of the goods.
    /// </summary>
    [DataMember]
    public CountryCode? ProductOrigin { get; init; } 
    /// <summary>
    /// Variance on price for the goods.
    /// </summary>
    [DataMember]
    public ValueList<Adjustment4> Adjustment { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Charges related to the conveyance of goods.
    /// </summary>
    [DataMember]
    public Charge13? FreightCharges { get; init; } 
    /// <summary>
    /// Amount of money due to the government or tax authority, according to various pre-defined parameters linked to the value of the goods in a trade transaction.
    /// </summary>
    [DataMember]
    public ValueList<Tax12> Tax { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Total amount of the line item after adjustments have been applied.
    /// </summary>
    [DataMember]
    public required IsoCurrencyAndAmount TotalAmount { get; init; } 
    
    #nullable disable
}
