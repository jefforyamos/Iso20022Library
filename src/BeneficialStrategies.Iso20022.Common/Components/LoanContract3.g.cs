//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for LoanContract3.  ISO2002 ID# _2n360bGIEeuSTr8k0UEM8A.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Contract by which an amount of money in exchange for future repayment of the principal amount along with interest or other finance charges.
/// </summary>
public partial record LoanContract3
{
    #nullable enable
    
    /// <summary>
    /// Contract document referenced from this loan agreement.
    /// </summary>
    public required DocumentIdentification22 ContractDocumentIdentification { get; init; } 
    /// <summary>
    /// Type code of the loan contract.
    /// </summary>
    public IsoMax35Text? LoanTypeIdentification { get; init; } 
    /// <summary>
    /// Party that is specified as the buyer for this loan agreement.
    /// </summary>
    public TradeParty5[] Buyer { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Party that is specified as the seller for this loan agreement.
    /// </summary>
    public TradeParty5[] Seller { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Loan amount as defined in the contract.
    /// </summary>
    public IsoActiveCurrencyAndAmount? Amount { get; init; } 
    /// <summary>
    /// Planned final repayment date at the time of issuance.
    /// </summary>
    public IsoISODate? MaturityDate { get; init; } 
    /// <summary>
    /// Indicates whether the contract duration is extended or not.
    /// When absent, the flag meaning is NotApplicable.
    /// </summary>
    public IsoTrueFalseIndicator? ProlongationFlag { get; init; } 
    /// <summary>
    /// Start date of the loan contract.
    /// </summary>
    public IsoISODate? StartDate { get; init; } 
    /// <summary>
    /// Currency in which the loan is being settled.
    /// </summary>
    public ActiveCurrencyCode? SettlementCurrency { get; init; } 
    /// <summary>
    /// Special conditions applicable when the amount is credited outside of the country.
    /// </summary>
    public SpecialCondition1? SpecialConditions { get; init; } 
    /// <summary>
    /// Loan duration in a coded form.
    /// </summary>
    public IsoExact1NumericText? DurationCode { get; init; } 
    /// <summary>
    /// Interest rate for the loan.
    /// </summary>
    public InterestRate2Choice_? InterestRate { get; init; } 
    /// <summary>
    /// One part or division of the loan, used to define the repayment.
    /// </summary>
    public LoanContractTranche1[] Tranche { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Schedule of the payments defined for the loan contract.
    /// </summary>
    public PaymentSchedule1[] PaymentSchedule { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Schedule of the interest payments defined for the loan contract.
    /// </summary>
    public InterestPaymentSchedule1[] InterestSchedule { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Loan is an intra company loan.
    /// </summary>
    public required IsoTrueFalseIndicator IntraCompanyLoan { get; init; } 
    /// <summary>
    /// Details of the collateral for the loan.
    /// </summary>
    public ContractCollateral1? Collateral { get; init; } 
    /// <summary>
    /// Loan offered by a group of lenders (called a syndicate) who work together to provide funds for a single borrower.
    /// </summary>
    public SyndicatedLoan2[] SyndicatedLoan { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Documents provided as attachments to the loan contract.
    /// </summary>
    public DocumentGeneralInformation5[] Attachment { get; init; } = []; // Warning: Don't know multiplicity.
    
    #nullable disable
}
