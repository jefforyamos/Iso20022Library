//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for LoyaltyResult1.  ISO2002 ID# _UWZZANxLEeioifFt1dhnJA.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Data related to the result of a processed loyalty transaction.
/// </summary>
public partial record LoyaltyResult1
     : IIsoXmlSerilizable<LoyaltyResult1>
{
    #nullable enable
    
    /// <summary>
    /// Account managing the Loyalty.
    /// </summary>
    public required LoyaltyAccount1 Account { get; init; } 
    /// <summary>
    /// Amount.
    /// </summary>
    public LoyaltyAmount1? Amount { get; init; } 
    /// <summary>
    /// Data sent by the Loyalty server.
    /// </summary>
    public LoyaltyServerData1? ServerData { get; init; } 
    /// <summary>
    /// Rebate information.
    /// </summary>
    public LoyaltyRebates1? Rebates { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Acct", xmlNamespace );
        Account.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (Amount is LoyaltyAmount1 AmountValue)
        {
            writer.WriteStartElement(null, "Amt", xmlNamespace );
            AmountValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (ServerData is LoyaltyServerData1 ServerDataValue)
        {
            writer.WriteStartElement(null, "SvrData", xmlNamespace );
            ServerDataValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (Rebates is LoyaltyRebates1 RebatesValue)
        {
            writer.WriteStartElement(null, "Rbts", xmlNamespace );
            RebatesValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static LoyaltyResult1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
