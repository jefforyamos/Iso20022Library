//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for MaintenanceDelegation7.  ISO2002 ID# _hWUQkdqIEeearpaEPXv9UA.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Information on the delegation of a maintenance action or maintenance function.
/// </summary>
[DataContract]
[XmlType]
public partial record MaintenanceDelegation7
{
    #nullable enable
    
    /// <summary>
    /// Type of delegation action.
    /// </summary>
    [DataMember]
    public required TerminalManagementAction3Code DelegationType { get; init; } 
    /// <summary>
    /// Maintenance service to be delegated.
    /// </summary>
    [DataMember]
    public ValueList<DataSetCategory13Code> MaintenanceService { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Flag to indicate that the delegated maintenance must be performed on a subset of the terminal estate.
    /// </summary>
    [DataMember]
    public IsoTrueFalseIndicator? PartialDelegation { get; init; } 
    /// <summary>
    /// Subset of the terminal estate for the delegated actions, for instance for pilot or key deactivation). The subset may be expressed as a list of POI or terminal estate subset identifier.
    /// </summary>
    [DataMember]
    public ValueList<IsoMax35Text> POISubset { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Information for the MTM to build or include delegated actions in the management plan of the POI.
    /// </summary>
    [DataMember]
    public MaintenanceDelegateAction4? DelegatedAction { get; init; } 
    /// <summary>
    /// Identification of the delegation scope assigned by the MTM.
    /// </summary>
    [DataMember]
    public IsoMax35Text? DelegationScopeIdentification { get; init; } 
    /// <summary>
    /// This element contains all information relevant to the DelegationScopeIdentification. The format of this element is out of scope of this definition.
    /// </summary>
    [DataMember]
    public IsoMax3000Binary? DelegationScopeDefinition { get; init; } 
    /// <summary>
    /// Certificate path of the terminal manager.
    /// </summary>
    [DataMember]
    public ValueList<IsoMax10KBinary> Certificate { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Association of the TM identifier and the MTM identifier of a POI.
    /// </summary>
    [DataMember]
    public ValueList<MaintenanceIdentificationAssociation1> POIIdentificationAssociation { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Identification of the key to manage or to download.
    /// </summary>
    [DataMember]
    public ValueList<KEKIdentifier5> SymmetricKey { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Configuration parameters of the terminal manager to be sent by the MTM.
    /// </summary>
    [DataMember]
    public TerminalManagementDataSet23? ParameterDataSet { get; init; } 
    
    #nullable disable
}
