//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for ManagementPlan1.  ISO2002 ID# _LYnu1H1DEeCF8NjrBemJWQ_327413113.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Sequence of terminal management actions to be performed by a point of interaction (POI).
/// </summary>
public partial record ManagementPlan1
     : IIsoXmlSerilizable<ManagementPlan1>
{
    #nullable enable
    
    /// <summary>
    /// Identification of the point of interaction for terminal management.
    /// </summary>
    public GenericIdentification35? POIIdentification { get; init; } 
    /// <summary>
    /// Identification of the terminal management system (TMS) sending the management plan.
    /// </summary>
    public required GenericIdentification35 TerminalManagerIdentification { get; init; } 
    /// <summary>
    /// Data set related to the sequence of actions to be performed by a point of interaction (POI).
    /// </summary>
    public TerminalManagementDataSet2? DataSet { get; init;  } // Warning: Don't know multiplicity.
    // ID for the above is _LYnu131DEeCF8NjrBemJWQ_-223303412
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (POIIdentification is GenericIdentification35 POIIdentificationValue)
        {
            writer.WriteStartElement(null, "POIId", xmlNamespace );
            POIIdentificationValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        writer.WriteStartElement(null, "TermnlMgrId", xmlNamespace );
        TerminalManagerIdentification.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        // Not sure how to serialize DataSet, multiplicity Unknown
    }
    public static ManagementPlan1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
