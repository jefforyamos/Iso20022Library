//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for Margin4.  ISO2002 ID# _-aesraMOEeCojJW5vEuTEQ_-272677709.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Provides details on the type of margin amounts.
/// </summary>
public partial record Margin4
     : IIsoXmlSerilizable<Margin4>
{
    #nullable enable
    
    /// <summary>
    /// Specifies the type of margin that is calculated.
    /// </summary>
    public required MarginType1Choice_ Type { get; init; } 
    /// <summary>
    /// Provides the margin amount in the reporting currency and optionally in the original currency.
    /// </summary>
    public required Amount2 Amount { get; init; } 
    /// <summary>
    /// Specifies whether the margin type position is short or long, that is, whether the balance is a negative or positive balance.
    /// </summary>
    public CreditDebitCode? CreditDebitIndicator { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Tp", xmlNamespace );
        Type.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "Amt", xmlNamespace );
        Amount.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (CreditDebitIndicator is CreditDebitCode CreditDebitIndicatorValue)
        {
            writer.WriteStartElement(null, "CdtDbtInd", xmlNamespace );
            writer.WriteValue(CreditDebitIndicatorValue.ToString()); // Enum value
            writer.WriteEndElement();
        }
    }
    public static Margin4 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
