//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for MeetingNotice2.  ISO2002 ID# _TlqdLdp-Ed-ak6NoX_4Aeg_-507959976.
//

using BeneficialStrategies.Iso20022.Choices;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Information about the shareholders meeting, specifying the participation requirements and the voting procedures. Alternatively, it may indicate where such information may be obtained.
/// </summary>
public partial record MeetingNotice2
{
    #nullable enable
    
    /// <summary>
    /// Identification assigned to a general meeting by the party notifying the meeting. It must be unique for the party notifying the meeting.
    /// </summary>
    public IsoMax35Text? MeetingIdentification { get; init; } 
    /// <summary>
    /// Identification assigned to a meeting by the issuer. It must be unique for the issuer.
    /// </summary>
    public IsoMax35Text? IssuerMeetingIdentification { get; init; } 
    /// <summary>
    /// Specifies the type of security holders meeting.
    /// </summary>
    public required MeetingType2Code Type { get; init; } 
    /// <summary>
    /// Classifies the type of meeting.
    /// </summary>
    public MeetingTypeClassification1Code? Classification { get; init; } 
    /// <summary>
    /// This code can be used in case another meeting classifications is required.
    /// </summary>
    public IsoExtended350Code? ExtendedClassification { get; init; } 
    /// <summary>
    /// Official meeting announcement date.
    /// </summary>
    public IsoISODate? AnnouncementDate { get; init; } 
    /// <summary>
    /// Indicates whether physical participation to a meeting is required in order to be allowed to vote.
    /// </summary>
    public required IsoYesNoIndicator AttendanceRequired { get; init; } 
    /// <summary>
    /// Indicates how to order the attendance card or to give notice of attendance.
    /// </summary>
    public IsoMax350Text? AttendanceConfirmationInformation { get; init; } 
    /// <summary>
    /// Date and time by which the beneficial owner or agent must notify of their intention to participate in a meeting. This deadline is set by an intermediary.
    /// </summary>
    public IDateFormat2Choice? AttendanceConfirmationDeadline { get; init; } 
    /// <summary>
    /// Date and time by which the beneficial owner or agent must notify of their intention to participate in a meeting (STP mode). This deadline is set by an intermediary.
    /// </summary>
    public IDateFormat2Choice? AttendanceConfirmationSTPDeadline { get; init; } 
    /// <summary>
    /// Date and time by which the attendance to the meeting should be confirmed. This deadline is set by the issuer.
    /// </summary>
    public IDateFormat2Choice? AttendanceConfirmationMarketDeadline { get; init; } 
    /// <summary>
    /// Address to use over the www (HTTP) service where addtional information on the meeting may be found.
    /// </summary>
    public IsoMax256Text? AdditionalDocumentationURLAddress { get; init; } 
    /// <summary>
    /// Date and time by which security holders can propose amendments or new resolutions. This deadline is set by an intermediary.
    /// </summary>
    public IDateFormat2Choice? ResolutionProposalDeadline { get; init; } 
    /// <summary>
    /// Date and time by which security holders can propose amendments or new resolutions. This deadline is set by the issuer.
    /// </summary>
    public IDateFormat2Choice? ResolutionProposalMarketDeadline { get; init; } 
    /// <summary>
    /// Specifies the minimum stake in share capital or cash value or number of security holders required to table resolutions.
    /// </summary>
    public IsoMax350Text? ResolutionProposalThreshold { get; init; } 
    /// <summary>
    /// Specifies the minimum stake in share capital or cash value or number of security holders required to table resolutions. This minimum is expressed as a percentage.
    /// </summary>
    public IsoPercentageRate? ResolutionProposalThresholdPercentage { get; init; } 
    /// <summary>
    /// Number of securities admitted to the vote, expressed as an amount and a currency.
    /// </summary>
    public IsoCurrencyAndAmount? TotalNumberOfSecuritiesOutstanding { get; init; } 
    /// <summary>
    /// Number of rights admitted to the vote.
    /// </summary>
    public IsoNumber? TotalNumberOfVotingRights { get; init; } 
    /// <summary>
    /// Address where the information on the proxy should be sent.
    /// </summary>
    public PostalAddress1? ProxyAppointmentNotificationAddress { get; init; } 
    /// <summary>
    /// Indicates that no proxy is allowed for a meeting.
    /// </summary>
    public ProxyNotAllowedCode? ProxyNotAllowed { get; init; } 
    /// <summary>
    /// Specifies the elements required to assign a proxy.
    /// </summary>
    public ProxyAppointmentInformation1? Proxy { get; init; } 
    /// <summary>
    /// Contact person at the party organising the meeting, at the issuer or at an intermediary.
    /// </summary>
    // public IReadOnlyCollection<MeetingContactPerson1> ContactPersonDetails { get; init; }
    /// <summary>
    /// Date on which a company publishes the results of its meeting.
    /// </summary>
    public IDateFormat3Choice? ResultPublicationDate { get; init; } 
    
    #nullable disable
}
