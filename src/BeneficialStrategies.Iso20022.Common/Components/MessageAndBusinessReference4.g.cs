//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for MessageAndBusinessReference4.  ISO2002 ID# _RMVOSdp-Ed-ak6NoX_4Aeg_-22206736.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Information to identify funds order(s).
/// </summary>
public partial record MessageAndBusinessReference4
     : IIsoXmlSerilizable<MessageAndBusinessReference4>
{
    #nullable enable
    
    /// <summary>
    /// Reference to a linked message sent in a proprietary way or reference of a system.
    /// </summary>
    public AdditionalReference3? OtherReference { get; init; } 
    /// <summary>
    /// Reference to a linked message that was previously sent.
    /// </summary>
    public AdditionalReference3? PreviousReference { get; init; } 
    /// <summary>
    /// Reference to a linked message that was previously received.
    /// </summary>
    public AdditionalReference3? RelatedReference { get; init; } 
    /// <summary>
    /// Unique and unambiguous identifiers of one or more indiviudal order instructions or individual order cancellation requests.
    /// </summary>
    public InvestmentFundOrder2? OrderReference { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (OtherReference is AdditionalReference3 OtherReferenceValue)
        {
            writer.WriteStartElement(null, "OthrRef", xmlNamespace );
            OtherReferenceValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (PreviousReference is AdditionalReference3 PreviousReferenceValue)
        {
            writer.WriteStartElement(null, "PrvsRef", xmlNamespace );
            PreviousReferenceValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (RelatedReference is AdditionalReference3 RelatedReferenceValue)
        {
            writer.WriteStartElement(null, "RltdRef", xmlNamespace );
            RelatedReferenceValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (OrderReference is InvestmentFundOrder2 OrderReferenceValue)
        {
            writer.WriteStartElement(null, "OrdrRef", xmlNamespace );
            OrderReferenceValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static MessageAndBusinessReference4 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
