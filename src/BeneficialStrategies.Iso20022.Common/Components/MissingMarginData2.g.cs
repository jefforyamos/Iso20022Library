//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for MissingMarginData2.  ISO2002 ID# _rtPOiVowEe23K4GXSpBSeg.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Detailed information about the outstanding derivatives for which no margin or outdated margin information has been reported.
/// </summary>
public partial record MissingMarginData2
     : IIsoXmlSerilizable<MissingMarginData2>
{
    #nullable enable
    
    /// <summary>
    /// Data specific to counterparties and related fields.
    /// </summary>
    public required CounterpartyData92 CounterpartyIdentification { get; init; } 
    /// <summary>
    /// Number of outstanding derivatives. 
    /// </summary>
    public required IsoNumber NumberOfOutstandingDerivatives { get; init; } 
    /// <summary>
    /// Number of outstanding derivatives with no margin information.
    /// </summary>
    public required IsoNumber NumberOfOutstandingDerivativesWithNoMarginInformation { get; init; } 
    /// <summary>
    /// Number of outstanding derivatives with outdated margin information.
    /// </summary>
    public required IsoNumber NumberOfOutstandingDerivativesWithOutdatedMarginInformation { get; init; } 
    /// <summary>
    /// Details of missing margins per transaction.
    /// </summary>
    public MissingMarginTransactionData2? TransactionDetails { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "CtrPtyId", xmlNamespace );
        CounterpartyIdentification.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "NbOfOutsdngDerivs", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoNumber(NumberOfOutstandingDerivatives)); // data type Number System.UInt64
        writer.WriteEndElement();
        writer.WriteStartElement(null, "NbOfOutsdngDerivsWthNoMrgnInf", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoNumber(NumberOfOutstandingDerivativesWithNoMarginInformation)); // data type Number System.UInt64
        writer.WriteEndElement();
        writer.WriteStartElement(null, "NbOfOutsdngDerivsWthOutdtdMrgnInf", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoNumber(NumberOfOutstandingDerivativesWithOutdatedMarginInformation)); // data type Number System.UInt64
        writer.WriteEndElement();
        if (TransactionDetails is MissingMarginTransactionData2 TransactionDetailsValue)
        {
            writer.WriteStartElement(null, "TxDtls", xmlNamespace );
            TransactionDetailsValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static MissingMarginData2 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
