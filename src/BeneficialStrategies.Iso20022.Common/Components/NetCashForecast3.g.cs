//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for NetCashForecast3.  ISO2002 ID# _Si5_pdp-Ed-ak6NoX_4Aeg_1538517625.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Net cash movement to a fund as a result of investment funds transactions.
/// </summary>
public partial record NetCashForecast3
     : IIsoXmlSerilizable<NetCashForecast3>
{
    #nullable enable
    
    /// <summary>
    /// Net amount of the cash flow, expressed as an amount of money.
    /// </summary>
    public IsoActiveOrHistoricCurrencyAndAmount? NetAmount { get; init; } 
    /// <summary>
    /// Net amount, expressed as a number of units.
    /// </summary>
    public FinancialInstrumentQuantity1? NetUnitsNumber { get; init; } 
    /// <summary>
    /// Specifies the direction of the cash flow from the perspective of the fund.
    /// </summary>
    public required FlowDirectionType1Code FlowDirection { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (NetAmount is IsoActiveOrHistoricCurrencyAndAmount NetAmountValue)
        {
            writer.WriteStartElement(null, "NetAmt", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoActiveOrHistoricCurrencyAndAmount(NetAmountValue)); // data type ActiveOrHistoricCurrencyAndAmount System.Decimal
            writer.WriteEndElement();
        }
        if (NetUnitsNumber is FinancialInstrumentQuantity1 NetUnitsNumberValue)
        {
            writer.WriteStartElement(null, "NetUnitsNb", xmlNamespace );
            NetUnitsNumberValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        writer.WriteStartElement(null, "FlowDrctn", xmlNamespace );
        writer.WriteValue(FlowDirection.ToString()); // Enum value
        writer.WriteEndElement();
    }
    public static NetCashForecast3 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
