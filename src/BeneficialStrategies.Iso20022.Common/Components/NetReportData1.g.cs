//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for NetReportData1.  ISO2002 ID# _e329QJUnEeaYkf5FCqYMeA.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Specifies the meta data associated with a net report.
/// </summary>
public partial record NetReportData1
{
    #nullable enable
    
    /// <summary>
    /// Unique and unambiguous identifier for a message, as assigned by the Sender. This unique identifier can be used for cross-referencing purposes in subsequent messages.
    /// </summary>
    public required IsoMax35Text MessageIdentification { get; init; } 
    /// <summary>
    /// Date and time at which the net report was generated.
    /// </summary>
    public required IsoISODateTime CreationDateTime { get; init; } 
    /// <summary>
    /// Provides the cut off time that has been passed, resulting in the generation of the net report.
    /// </summary>
    public required IsoISOTime NettingCutOffTime { get; init; } 
    /// <summary>
    /// Specifies the value date on which the net report was generated.
    /// </summary>
    public required IsoISODate ReportDate { get; init; } 
    /// <summary>
    /// Specifies the value date for the trades used in the generation of the net report.
    /// </summary>
    public required IsoISODate ValueDate { get; init; } 
    /// <summary>
    /// Specifies the type of net report, indicating how the obligations have been calculated.
    /// </summary>
    public IsoMax35Text? ReportType { get; init; } 
    /// <summary>
    /// Describes the central system responsible for generating the net report.
    /// </summary>
    public IPartyIdentification73Choice? NetReportServicer { get; init; } 
    /// <summary>
    /// Describes the type of netting service supporting the net report.
    /// </summary>
    public IsoMax35Text? NetServiceType { get; init; } 
    /// <summary>
    /// Page number of the message (within the net report) and continuation indicator to indicate that the report is to continue or that the message is the last page of the report.
    /// </summary>
    public Pagination? MessagePagination { get; init; } 
    
    #nullable disable
}
