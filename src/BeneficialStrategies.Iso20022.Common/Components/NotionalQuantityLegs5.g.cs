//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for NotionalQuantityLegs5.  ISO2002 ID# _Wc1UsSJFEe2zWP9pqvmqdw.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Indicates the notional quantity of the underlying assets.
/// </summary>
public partial record NotionalQuantityLegs5
     : IIsoXmlSerilizable<NotionalQuantityLegs5>
{
    #nullable enable
    
    /// <summary>
    /// Aggregate notional quantity of the underlying asset of leg 1 for the term of the transaction. Where the total notional quantity is not known when a new transaction is reported, the total notional quantity is updated as it becomes available. 
    /// </summary>
    public NotionalQuantity9? FirstLeg { get; init; } 
    /// <summary>
    /// Aggregate notional quantity of the underlying asset of leg 2 for the term of the transaction. Where the total notional quantity is not known when a new transaction is reported, the total notional quantity is updated as it becomes available. 
    /// </summary>
    public NotionalQuantity9? SecondLeg { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (FirstLeg is NotionalQuantity9 FirstLegValue)
        {
            writer.WriteStartElement(null, "FrstLeg", xmlNamespace );
            FirstLegValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (SecondLeg is NotionalQuantity9 SecondLegValue)
        {
            writer.WriteStartElement(null, "ScndLeg", xmlNamespace );
            SecondLegValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static NotionalQuantityLegs5 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
