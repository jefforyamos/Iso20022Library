//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for OptionData2.  ISO2002 ID# _U8r6ddp-Ed-ak6NoX_4Aeg_254982681.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Set of data which contains the link to a previously notified option trade.
/// </summary>
public partial record OptionData2
     : IIsoXmlSerilizable<OptionData2>
{
    #nullable enable
    
    /// <summary>
    /// Date at which the trading parties have agreed on an option trade.
    /// </summary>
    public required IsoISODate TradeDate { get; init; } 
    /// <summary>
    /// Refers to the identification of a trade assigned by the trading side of a foreign exchange option trade.
    /// </summary>
    public required IsoMax35Text NotificationIdentification { get; init; } 
    /// <summary>
    /// Reference common to the parties of a trade.
    /// </summary>
    public IsoMax35Text? CommonReference { get; init; } 
    /// <summary>
    /// Refers to the identification of a previous event in the life of a foreign exchange option trade.
    /// </summary>
    public IsoMax35Text? RelatedReference { get; init; } 
    /// <summary>
    /// Describes the reason for the cancellation or the amendment.
    /// </summary>
    public IsoMax35Text? AmendOrCancelReason { get; init; } 
    /// <summary>
    /// Set of data defining a foreign exchange option sold.
    /// </summary>
    public required Option3 Option { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "TradDt", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoISODate(TradeDate)); // data type ISODate System.DateOnly
        writer.WriteEndElement();
        writer.WriteStartElement(null, "NtfctnId", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax35Text(NotificationIdentification)); // data type Max35Text System.String
        writer.WriteEndElement();
        if (CommonReference is IsoMax35Text CommonReferenceValue)
        {
            writer.WriteStartElement(null, "CmonRef", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(CommonReferenceValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
        if (RelatedReference is IsoMax35Text RelatedReferenceValue)
        {
            writer.WriteStartElement(null, "RltdRef", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(RelatedReferenceValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
        if (AmendOrCancelReason is IsoMax35Text AmendOrCancelReasonValue)
        {
            writer.WriteStartElement(null, "AmdOrCclRsn", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(AmendOrCancelReasonValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
        writer.WriteStartElement(null, "Optn", xmlNamespace );
        Option.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
    }
    public static OptionData2 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
