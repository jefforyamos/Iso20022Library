//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for Organisation35.  ISO2002 ID# _XjHp9249EeiU9cctagi5ow.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution.
/// </summary>
public partial record Organisation35
{
    #nullable enable
    
    /// <summary>
    /// Name by which a party is known and which is usually used to identify that party.
    /// </summary>
    public required IsoMax350Text FullLegalName { get; init; } 
    /// <summary>
    /// Name used by a business for commercial purposes, although its registered legal name, used for contracts and other formal situations, may be another.
    /// </summary>
    public IsoMax350Text? TradingName { get; init; } 
    /// <summary>
    /// Status of a legal entity.
    /// </summary>
    public OrganisationLegalStatus1Code? OrganisationLegalStatus { get; init; } 
    /// <summary>
    /// Date of establishment or date of founding of an institution is the date on which that institution chooses to claim as its starting point.
    /// </summary>
    public IsoISODate? EstablishedDate { get; init; } 
    /// <summary>
    /// Registration number for the organisation.
    /// </summary>
    public IsoMax70Text? RegistrationNumber { get; init; } 
    /// <summary>
    /// Country in which the organisation is registered.
    /// </summary>
    public CountryCode? RegistrationCountry { get; init; } 
    /// <summary>
    /// Date a given organisation was officially registered.
    /// </summary>
    public IsoISODate? RegistrationDate { get; init; } 
    /// <summary>
    /// Taxation unique reference number.
    /// </summary>
    public IsoMax35Text? TaxationIdentificationNumber { get; init; } 
    /// <summary>
    /// Country of taxation of an individual person or an organisation.
    /// </summary>
    public CountryCode? TaxationCountry { get; init; } 
    /// <summary>
    /// Country in which the organisation has its business activity.
    /// </summary>
    public CountryCode? CountryOfOperation { get; init; } 
    /// <summary>
    /// Indicates that the new bank holds a copy of a registered company’s board resolution for the account switch.
    /// </summary>
    public IsoTrueFalseIndicator? BoardResolutionIndicator { get; init; } 
    /// <summary>
    /// Address where the business activity is taking place.
    /// </summary>
    public PostalAddress24? BusinessAddress { get; init; } 
    /// <summary>
    /// Address, for example, of a shared services centre.
    /// </summary>
    public PostalAddress24? OperationalAddress { get; init; } 
    /// <summary>
    /// Address where the entity resides and is registered. More generically, it is the home address (residential address).
    /// </summary>
    public PostalAddress24? LegalAddress { get; init; } 
    /// <summary>
    /// Person in the customer's organisation who can be contacted by the account servicer.
    /// </summary>
    public PartyIdentification135[] RepresentativeOfficer { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Person responsible of the treasury department within an organisation.
    /// </summary>
    public PartyIdentification135? TreasuryManager { get; init; } 
    /// <summary>
    /// Person who will delegate some authority to other individuals (mandate holders) to perform some specific bank operations on the account.
    /// </summary>
    public PartyIdentification135[] MainMandateHolder { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Sender of a message related to the life cycle of an account.
    /// </summary>
    public PartyIdentification135[] Sender { get; init; } = []; // Warning: Don't know multiplicity.
    
    #nullable disable
}
