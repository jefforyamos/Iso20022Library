//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for OriginalNotification4.  ISO2002 ID# _e-gQcBsaEd-tQubbyu-X8Q.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Identify the original notification, to which the cancellation advice refers.
/// </summary>
public partial record OriginalNotification4
     : IIsoXmlSerilizable<OriginalNotification4>
{
    #nullable enable
    
    /// <summary>
    /// Point to point reference, as assigned by the original sender, to unambiguously identify the original notification to receive message.
    /// </summary>
    public required IsoMax35Text OriginalMessageIdentification { get; init; } 
    /// <summary>
    /// Date and time at which the original message was created.
    /// </summary>
    public IsoISODateTime? OriginalCreationDateTime { get; init; } 
    /// <summary>
    /// Identification of the original notification.
    /// </summary>
    public required IsoMax35Text OriginalNotificationIdentification { get; init; } 
    /// <summary>
    /// Indicates whether the cancellation applies to the complete original notification or to individual items within the original notification.
    /// </summary>
    public IsoGroupCancellationIndicator? NotificationCancellation { get; init; } 
    /// <summary>
    /// Identifies the original notification item, to which the cancellation advice refers.
    /// </summary>
    public OriginalNotificationReference1? OriginalNotificationReference { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "OrgnlMsgId", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax35Text(OriginalMessageIdentification)); // data type Max35Text System.String
        writer.WriteEndElement();
        if (OriginalCreationDateTime is IsoISODateTime OriginalCreationDateTimeValue)
        {
            writer.WriteStartElement(null, "OrgnlCreDtTm", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoISODateTime(OriginalCreationDateTimeValue)); // data type ISODateTime System.DateTime
            writer.WriteEndElement();
        }
        writer.WriteStartElement(null, "OrgnlNtfctnId", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax35Text(OriginalNotificationIdentification)); // data type Max35Text System.String
        writer.WriteEndElement();
        if (NotificationCancellation is IsoGroupCancellationIndicator NotificationCancellationValue)
        {
            writer.WriteStartElement(null, "NtfctnCxl", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoGroupCancellationIndicator(NotificationCancellationValue)); // data type GroupCancellationIndicator System.String
            writer.WriteEndElement();
        }
        if (OriginalNotificationReference is OriginalNotificationReference1 OriginalNotificationReferenceValue)
        {
            writer.WriteStartElement(null, "OrgnlNtfctnRef", xmlNamespace );
            OriginalNotificationReferenceValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static OriginalNotification4 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
