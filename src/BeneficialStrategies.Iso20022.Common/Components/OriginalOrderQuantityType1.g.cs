//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for OriginalOrderQuantityType1.  ISO2002 ID# _Uvt1e9p-Ed-ak6NoX_4Aeg_-1430220527.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Breakdown of the cash movements into a fund by order type, eg, order by quantity of units or amount of money.
/// </summary>
public partial record OriginalOrderQuantityType1
     : IIsoXmlSerilizable<OriginalOrderQuantityType1>
{
    #nullable enable
    
    /// <summary>
    /// Order type, expressed as a code.
    /// </summary>
    public required OrderQuantityType1Code Structured { get; init; } 
    /// <summary>
    /// Additional information about the order type.
    /// </summary>
    public IsoMax350Text? AdditionalInformation { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Strd", xmlNamespace );
        writer.WriteValue(Structured.ToString()); // Enum value
        writer.WriteEndElement();
        if (AdditionalInformation is IsoMax350Text AdditionalInformationValue)
        {
            writer.WriteStartElement(null, "AddtlInf", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax350Text(AdditionalInformationValue)); // data type Max350Text System.String
            writer.WriteEndElement();
        }
    }
    public static OriginalOrderQuantityType1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
