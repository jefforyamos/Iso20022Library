//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for OriginalRequestInformation1.  ISO2002 ID# _TiOuodp-Ed-ak6NoX_4Aeg_1502660608.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Set of characteristics that unambiguously identify the original global invoice financing request.
/// </summary>
public partial record OriginalRequestInformation1
     : IIsoXmlSerilizable<OriginalRequestInformation1>
{
    #nullable enable
    
    /// <summary>
    /// Unique and unambiguous identifier of the original request message as assigned by the original sending party.
    /// </summary>
    public required IsoMax35Text Identification { get; init; } 
    /// <summary>
    /// Date and time at which the original request message was created.
    /// </summary>
    public required IsoISODateTime CreationDateTime { get; init; } 
    /// <summary>
    /// Party that requests the invoice financing, on behalf of a creditor, as indicated in the original request message.
    /// </summary>
    public PartyIdentificationAndAccount6? FinancingRequestor { get; init; } 
    /// <summary>
    /// Financial institution that receives the request from the financing requestor and forwards it to the first agent for execution, as indicated in the original request message.
    /// </summary>
    public FinancialInstitutionIdentification6? IntermediaryAgent { get; init; } 
    /// <summary>
    /// Financial institution of financing requestor to which an invoice financing request is addressed, as indicated in the original request message.
    /// </summary>
    public FinancialInstitutionIdentification6? FirstAgent { get; init; } 
    /// <summary>
    /// Information about the validation status of the request message.
    /// </summary>
    public required ValidationStatusInformation1 ValidationStatusInformation { get; init; } 
    /// <summary>
    /// Information on the business status of the cancellation.
    /// </summary>
    public CancellationStatusInformation1? CancellationStatusInformation { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Id", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax35Text(Identification)); // data type Max35Text System.String
        writer.WriteEndElement();
        writer.WriteStartElement(null, "CreDtTm", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoISODateTime(CreationDateTime)); // data type ISODateTime System.DateTime
        writer.WriteEndElement();
        if (FinancingRequestor is PartyIdentificationAndAccount6 FinancingRequestorValue)
        {
            writer.WriteStartElement(null, "FincgRqstr", xmlNamespace );
            FinancingRequestorValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (IntermediaryAgent is FinancialInstitutionIdentification6 IntermediaryAgentValue)
        {
            writer.WriteStartElement(null, "IntrmyAgt", xmlNamespace );
            IntermediaryAgentValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (FirstAgent is FinancialInstitutionIdentification6 FirstAgentValue)
        {
            writer.WriteStartElement(null, "FrstAgt", xmlNamespace );
            FirstAgentValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        writer.WriteStartElement(null, "VldtnStsInf", xmlNamespace );
        ValidationStatusInformation.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (CancellationStatusInformation is CancellationStatusInformation1 CancellationStatusInformationValue)
        {
            writer.WriteStartElement(null, "CxlStsInf", xmlNamespace );
            CancellationStatusInformationValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static OriginalRequestInformation1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
