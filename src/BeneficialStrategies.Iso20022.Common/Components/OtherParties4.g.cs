//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for OtherParties4.  ISO2002 ID# _PXpkldp-Ed-ak6NoX_4Aeg_2044422561.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Other parties information.
/// </summary>
public partial record OtherParties4
     : IIsoXmlSerilizable<OtherParties4>
{
    #nullable enable
    
    /// <summary>
    /// Party, either an individual or organisation, whose assets are being invested.
    /// </summary>
    public PartyIdentification14Choice_? Investor { get; init; } 
    /// <summary>
    /// Identification of the stock exchange to which transaction reporting will be done.
    /// </summary>
    public PartyIdentification10Choice_? StockExchange { get; init; } 
    /// <summary>
    /// Institution to which a trade must be reported.
    /// </summary>
    public PartyIdentification10Choice_? TradeRegulator { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (Investor is PartyIdentification14Choice_ InvestorValue)
        {
            writer.WriteStartElement(null, "Invstr", xmlNamespace );
            InvestorValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (StockExchange is PartyIdentification10Choice_ StockExchangeValue)
        {
            writer.WriteStartElement(null, "StockXchg", xmlNamespace );
            StockExchangeValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (TradeRegulator is PartyIdentification10Choice_ TradeRegulatorValue)
        {
            writer.WriteStartElement(null, "TradRgltr", xmlNamespace );
            TradeRegulatorValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static OtherParties4 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
