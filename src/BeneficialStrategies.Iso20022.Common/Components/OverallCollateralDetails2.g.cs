//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for OverallCollateralDetails2.  ISO2002 ID# _5qoZgRIlEeyLzJfz3xPQNA.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Global collateral status of all transactions covered in the message, in the reporting currency, that is, the total of the exposure amount, of the posted collateral, of the margin amounts, of the accrued interest, of the fees or commissions and of the principals. In addition, it provides collateral-specific information.
/// </summary>
public partial record OverallCollateralDetails2
     : IIsoXmlSerilizable<OverallCollateralDetails2>
{
    #nullable enable
    
    /// <summary>
    /// Provides details on the collateral valuation.
    /// </summary>
    public required CollateralAmount15 ValuationAmounts { get; init; } 
    /// <summary>
    /// The collateral excess/shortage expressed in the percentage of the collateral required.
    /// </summary>
    public IsoPercentageRate? MarginRate { get; init; } 
    /// <summary>
    /// Provides the status after comparing the total collateral required and the total collateral value of all transactions covered in the message.
    /// </summary>
    public CollateralStatus1Code? GlobalCollateralStatus { get; init; } 
    /// <summary>
    /// Valuation date/time of both the collateral and the exposure.
    /// </summary>
    public required DateAndDateTime2Choice_ ValuationDate { get; init; } 
    /// <summary>
    /// Provides additional information on the collateral.
    /// </summary>
    public IsoMax350Text? CollateralAdditionalDetails { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "ValtnAmts", xmlNamespace );
        ValuationAmounts.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (MarginRate is IsoPercentageRate MarginRateValue)
        {
            writer.WriteStartElement(null, "MrgnRate", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoPercentageRate(MarginRateValue)); // data type PercentageRate System.Decimal
            writer.WriteEndElement();
        }
        if (GlobalCollateralStatus is CollateralStatus1Code GlobalCollateralStatusValue)
        {
            writer.WriteStartElement(null, "GblCollSts", xmlNamespace );
            writer.WriteValue(GlobalCollateralStatusValue.ToString()); // Enum value
            writer.WriteEndElement();
        }
        writer.WriteStartElement(null, "ValtnDt", xmlNamespace );
        ValuationDate.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (CollateralAdditionalDetails is IsoMax350Text CollateralAdditionalDetailsValue)
        {
            writer.WriteStartElement(null, "CollAddtlDtls", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax350Text(CollateralAdditionalDetailsValue)); // data type Max350Text System.String
            writer.WriteEndElement();
        }
    }
    public static OverallCollateralDetails2 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
