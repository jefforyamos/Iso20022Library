//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for PINData1.  ISO2002 ID# _oIKMwEbYEeeIjf8aP9KbJA.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Attributes of a cardholder PIN.
/// </summary>
[DataContract]
[XmlType]
public partial record PINData1
{
    #nullable enable
    
    /// <summary>
    /// Identifies the key management scheme and associated control field format.
    /// ISO 13492
    /// Binary, length of 1
    /// </summary>
    [DataMember]
    public IsoExact1HexBinaryText? Control { get; init; } 
    /// <summary>
    /// key-set identifier is a number that uniquely identifies a group of related keys that are all different but have certain characteristics in common.
    /// ISO 13492
    /// lengths of 6 or 8 
    /// </summary>
    [DataMember]
    public IsoMax8NumericText? KeySetIdentifier { get; init; } 
    /// <summary>
    /// Contains Derived Info or Device ID and Transaction Counter.
    /// ISO 13492
    /// Binary, lengths of 5, 8, 16 or 32 
    /// </summary>
    [DataMember]
    public IsoMax32HexBinaryText? DerivedInformation { get; init; } 
    /// <summary>
    /// Used to select the encryption algorithm to encipher the keys contained in the associated key management data element. 
    /// ISO 13492
    /// </summary>
    [DataMember]
    public IsoMax2NumericText? Algorithm { get; init; } 
    /// <summary>
    /// Specifies the length of the keys being transported, not the encrypting key.
    /// ISO 13492
    /// </summary>
    [DataMember]
    public IsoMax4NumericText? KeyLength { get; init; } 
    /// <summary>
    /// Mechanism used to provide key confidentiality and integrity. 
    /// ISO 13492
    /// </summary>
    [DataMember]
    public IsoMax2NumericText? KeyProtection { get; init; } 
    /// <summary>
    /// Identifies a unique key set when multiple keys with the same key set identifier are used (for example, key rotation).
    /// ISO 13492
    /// Length of 2 or 5
    /// </summary>
    [DataMember]
    public IsoMax5NumericText? KeyIndex { get; init; } 
    /// <summary>
    /// As defined in ISO 9564-1. 
    /// </summary>
    [DataMember]
    public required IsoMax2NumericText PINBlockFormat { get; init; } 
    /// <summary>
    /// As defined in ISO 9564-1. 
    /// Binary, length of 8 or 16
    /// </summary>
    [DataMember]
    public required IsoMax16HexBinaryText EncryptedPINBlock { get; init; } 
    
    #nullable disable
}
