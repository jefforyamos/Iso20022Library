//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for PartialFill2.  ISO2002 ID# _GY0N8TAjEeOUGqA1wUwNLA.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Intention to transfer an ownership of a financial instrument.
/// </summary>
public partial record PartialFill2
{
    #nullable enable
    
    /// <summary>
    /// Quantity of financial instrument to be ordered.
    /// </summary>
    public required IQuantity6Choice ConfirmationQuantity { get; init; } 
    /// <summary>
    /// Amount of money for which goods or services are offered, sold, or bought.
    /// </summary>
    public required Price4 DealPrice { get; init; } 
    /// <summary>
    /// Specifies the date/time on which the trade was executed.
    /// </summary>
    public ITradeDate4Choice? TradeDate { get; init; } 
    /// <summary>
    /// Market in which a trade transaction is to be or has been executed.
    /// </summary>
    public MarketIdentification80? PlaceOfTrade { get; init; } 
    /// <summary>
    /// Quantity of financial instrument ordered.
    /// </summary>
    public required IQuantityOrAmount1Choice OriginalOrderedQuantity { get; init; } 
    /// <summary>
    /// Quantity of financial instrument that has been previously executed.
    /// </summary>
    public required IQuantityOrAmount1Choice PreviouslyExecutedQuantity { get; init; } 
    /// <summary>
    /// Quantity of financial instrument that is remaining in order.
    /// </summary>
    public required IQuantityOrAmount1Choice RemainingQuantity { get; init; } 
    /// <summary>
    /// Minimum quantity that applies to every execution. The order may still fill against smaller orders, but the cumulative quantity of the execution must be in multiples of the Match Increment.
    /// </summary>
    public IQuantityOrAmount1Choice? MatchIncrementQuantity { get; init; } 
    
    #nullable disable
}
