//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for PartyIdentification203.  ISO2002 ID# _8dQzMWYdEeeEbu2gL5hFew.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Identification of a party.
/// </summary>
[DataContract]
[XmlType]
public partial record PartyIdentification203
{
    #nullable enable
    
    /// <summary>
    /// Identification of the acceptor.
    /// ISO 8583 bit 42
    /// </summary>
    [DataMember]
    public required IsoMax35Text Identification { get; init; } 
    /// <summary>
    /// Identification of the entity assigning an identification to the acceptor.
    /// </summary>
    [DataMember]
    public IsoMax35Text? Assigner { get; init; } 
    /// <summary>
    /// Country code of the acceptor.
    /// ISO 8583:87/93 bit 43 & 8583:2003 bit 43-71 (when used for Acceptor Country Code)
    /// </summary>
    [DataMember]
    public ISO3NumericCountryCode? Country { get; init; } 
    /// <summary>
    /// Short name of the acceptor.
    /// </summary>
    [DataMember]
    public IsoMax35Text? ShortName { get; init; } 
    /// <summary>
    /// Additional identification assigned by an agent to an acceptor.
    /// </summary>
    [DataMember]
    public IsoMax35Text? AdditionalIdentification { get; init; } 
    /// <summary>
    /// Name and location of acceptor.
    /// ISO 8583:87/93 bit 43 & 8583:2003 bit 43-71 (when used for Acceptor name and location)
    /// </summary>
    [DataMember]
    public required IsoMax99Text NameAndLocation { get; init; } 
    /// <summary>
    /// Address of the entity.
    /// ISO 8583:93 bit 43 & 8583:2003 bit 43-71 (when used for acceptor address)
    /// </summary>
    [DataMember]
    public Address1? Address { get; init; } 
    /// <summary>
    /// Electronic mail address.
    /// ISO 8583:2003 bit 43-71 (when used for Acceptor email address)
    /// </summary>
    [DataMember]
    public IsoMax256Text? Email { get; init; } 
    /// <summary>
    /// Universal Resource Locator (URL) address.
    /// ISO 8583:2003 bit 43-71 (when used for Acceptor URL)
    /// </summary>
    [DataMember]
    public IsoMax256Text? URLAddress { get; init; } 
    /// <summary>
    /// Collection of information that identifies  a phone number as defined by telecom services.
    /// ISO 8583:2003 bit 43-71 (when used for Acceptor phone number)
    /// </summary>
    [DataMember]
    public IsoMax35Text? PhoneNumber { get; init; } 
    /// <summary>
    /// Phone number of the customer service.
    /// ISO 8583:2003 bit 43-71 (when used for Acceptor customer service phone number)
    /// </summary>
    [DataMember]
    public IsoMax35Text? CustomerService { get; init; } 
    /// <summary>
    /// Additional information used to facilitate contact with the card acceptor, for instance sales agent name, dispute manager name.
    /// ISO 8583:2003 bit 43-71 (when used for Acceptor additional contact information)
    /// </summary>
    [DataMember]
    public IsoMax256Text? AdditionalContactInformation { get; init; } 
    /// <summary>
    /// Identification of a party by its tax registration number.
    /// </summary>
    [DataMember]
    public IsoMax35Text? TaxRegistrationIdentification { get; init; } 
    /// <summary>
    /// Contains additional data.
    /// </summary>
    [DataMember]
    public ValueList<AdditionalData1> AdditionalData { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Sponsored merchant is a merchant that uses the payment services of another entity that acts as the card acceptor.
    /// </summary>
    [DataMember]
    public ValueList<SponsoredMerchant1> SponsoredMerchant { get; init; } = []; // Warning: Don't know multiplicity.
    
    #nullable disable
}
