//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for PartyIdentification78.  ISO2002 ID# _g-WN8IHEEeSY3ulMDfpmvA.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Identification of an entity involved in an activity.
/// </summary>
public partial record PartyIdentification78
     : IIsoXmlSerilizable<PartyIdentification78>
{
    #nullable enable
    
    /// <summary>
    /// Indicate the source of the party.
    /// </summary>
    public IdentificationType1Code? PartySource { get; init; } 
    /// <summary>
    /// Identification of the party.
    /// </summary>
    public required IsoMax35Text TradePartyIdentification { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (PartySource is IdentificationType1Code PartySourceValue)
        {
            writer.WriteStartElement(null, "PtySrc", xmlNamespace );
            writer.WriteValue(PartySourceValue.ToString()); // Enum value
            writer.WriteEndElement();
        }
        writer.WriteStartElement(null, "TradPtyId", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax35Text(TradePartyIdentification)); // data type Max35Text System.String
        writer.WriteEndElement();
    }
    public static PartyIdentification78 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
