//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for PartyIdentificationAndAccount156.  ISO2002 ID# _9DljPYftEeevKP8c-ilVhA.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Identification of a settlement party.
/// </summary>
public partial record PartyIdentificationAndAccount156
     : IIsoXmlSerilizable<PartyIdentificationAndAccount156>
{
    #nullable enable
    
    /// <summary>
    /// Party that legally owns the account.
    /// </summary>
    public PartyIdentification113? PartyIdentification { get; init; } 
    /// <summary>
    /// Identification of the account owned by the party.
    /// </summary>
    public IsoMax35Text? AccountIdentification { get; init; } 
    /// <summary>
    /// Place where settlement of the securities takes place.
    /// </summary>
    public required PartyIdentification113 PlaceOfSettlement { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (PartyIdentification is PartyIdentification113 PartyIdentificationValue)
        {
            writer.WriteStartElement(null, "PtyId", xmlNamespace );
            PartyIdentificationValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (AccountIdentification is IsoMax35Text AccountIdentificationValue)
        {
            writer.WriteStartElement(null, "AcctId", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(AccountIdentificationValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
        writer.WriteStartElement(null, "PlcOfSttlm", xmlNamespace );
        PlaceOfSettlement.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
    }
    public static PartyIdentificationAndAccount156 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
