//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for PartyProfileInformation1.  ISO2002 ID# _TUhp1dp-Ed-ak6NoX_4Aeg_-300374569.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Information to support the Know Your Customer processes.
/// </summary>
public partial record PartyProfileInformation1
{
    #nullable enable
    
    /// <summary>
    /// Indicates whether the certificate type has been obtained and verified.
    /// </summary>
    public required IsoYesNoIndicator CertificationIndicator { get; init; } 
    /// <summary>
    /// Identification of the person who validated the document.
    /// </summary>
    public IsoMax140Text? ValidatingParty { get; init; } 
    /// <summary>
    /// Identification of the person who checked the document.
    /// </summary>
    public IsoMax140Text? CheckingParty { get; init; } 
    /// <summary>
    /// Identification of the person who is responsible for the document.
    /// </summary>
    public IsoMax140Text? ResponsibleParty { get; init; } 
    /// <summary>
    /// Identifies the type of certificate.
    /// </summary>
    public required CertificateType1Code CertificateType { get; init; } 
    /// <summary>
    /// Identifies the type of certificate.
    /// </summary>
    public required IsoExtended350Code ExtendedCertificateType { get; init; } 
    /// <summary>
    /// Date at which the certification check has been performed.
    /// </summary>
    public IsoISODate? CheckingDate { get; init; } 
    /// <summary>
    /// Specifies how frequently the check is performed.
    /// </summary>
    public EventFrequency1Code? CheckingFrequency { get; init; } 
    /// <summary>
    /// Specifies the date at which the next certification check will be performed.
    /// </summary>
    public IsoISODate? NextRevisionDate { get; init; } 
    /// <summary>
    /// Limits between which a person's salary is estimated.
    /// </summary>
    public IsoMax35Text? SalaryRange { get; init; } 
    /// <summary>
    /// Indicates the main source of revenue.
    /// </summary>
    public IsoMax140Text? SourceOfWealth { get; init; } 
    
    #nullable disable
}
