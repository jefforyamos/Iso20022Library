//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for PartyProfileInformation4.  ISO2002 ID# _pyDTAQjVEeS5F6qHcKOrew.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Information to support the Know Your Customer (KYC) processes.
/// </summary>
[DataContract]
[XmlType]
public partial record PartyProfileInformation4
{
    #nullable enable
    
    /// <summary>
    /// Indicates whether the certificate type has been obtained and verified.
    /// </summary>
    [DataMember]
    public IsoYesNoIndicator? CertificationIndicator { get; init; } 
    /// <summary>
    /// Identification of the person who validated the document.
    /// </summary>
    [DataMember]
    public IsoMax140Text? ValidatingParty { get; init; } 
    /// <summary>
    /// Identification of the person who checked the document.
    /// </summary>
    [DataMember]
    public IsoMax140Text? CheckingParty { get; init; } 
    /// <summary>
    /// Identification of the person who is responsible for the document.
    /// </summary>
    [DataMember]
    public IsoMax140Text? ResponsibleParty { get; init; } 
    /// <summary>
    /// Type of certificate.
    /// </summary>
    [DataMember]
    public CertificationType1Choice_? CertificateType { get; init; } 
    /// <summary>
    /// Date at which the certification check has been performed.
    /// </summary>
    [DataMember]
    public IsoISODate? CheckingDate { get; init; } 
    /// <summary>
    /// Specifies how frequently the check is performed.
    /// </summary>
    [DataMember]
    public EventFrequency1Code? CheckingFrequency { get; init; } 
    /// <summary>
    /// Specifies the date at which the next certification check will be performed.
    /// </summary>
    [DataMember]
    public IsoISODate? NextRevisionDate { get; init; } 
    /// <summary>
    /// Limits between which a person's salary is estimated.
    /// </summary>
    [DataMember]
    public IsoMax35Text? SalaryRange { get; init; } 
    /// <summary>
    /// Indicates the main source of revenue.
    /// </summary>
    [DataMember]
    public IsoMax140Text? SourceOfWealth { get; init; } 
    /// <summary>
    /// Specifies an assessment of the customer’s behaviour at the time of the account opening application.
    /// </summary>
    [DataMember]
    public CustomerConductClassification1Choice_? CustomerConductClassification { get; init; } 
    /// <summary>
    /// Specifies the customer’s money laundering risk.
    /// </summary>
    [DataMember]
    public RiskLevel1Choice_? RiskLevel { get; init; } 
    /// <summary>
    /// Specifies the type of due diligence checks carried out on the investor. For definitions of ordinary, simple and enhanced know your customer checks, local market regulations should be consulted.
    /// </summary>
    [DataMember]
    public KYCCheckType1Choice_? KnowYourCustomerCheckType { get; init; } 
    /// <summary>
    /// Specifies whether a customer has been checked in a Know Your Customer (KYC) database.
    /// </summary>
    [DataMember]
    public DataBaseCheck1? KnowYourCustomerDatabaseCheck { get; init; } 
    
    #nullable disable
}
