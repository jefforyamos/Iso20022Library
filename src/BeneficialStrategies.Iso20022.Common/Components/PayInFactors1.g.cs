//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for PayInFactors1.  ISO2002 ID# _S3PXsAEcEeCQm6a_G2yO_w_-1038379529.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Factors used in the calculation of the pay in schedule.
/// </summary>
public partial record PayInFactors1
     : IIsoXmlSerilizable<PayInFactors1>
{
    #nullable enable
    
    /// <summary>
    /// Maximum allowed sum of short positions in all currencies, converted to base currency, during settlement.
    /// </summary>
    public required IsoActiveCurrencyAndAmount AggregateShortPositionLimit { get; init; } 
    /// <summary>
    /// Currency specific pay-in factors.
    /// </summary>
    public CurrencyFactors1? CurrencyFactors { get; init;  } // Warning: Don't know multiplicity.
    // ID for the above is _S3PXsgEcEeCQm6a_G2yO_w_1288597221
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "AggtShrtPosLmt", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoActiveCurrencyAndAmount(AggregateShortPositionLimit)); // data type ActiveCurrencyAndAmount System.Decimal
        writer.WriteEndElement();
        // Not sure how to serialize CurrencyFactors, multiplicity Unknown
    }
    public static PayInFactors1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
