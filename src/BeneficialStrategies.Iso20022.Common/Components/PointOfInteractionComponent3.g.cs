//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for PointOfInteractionComponent3.  ISO2002 ID# _mhI4IAySEeK5P9Ihqok3VA.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Data related to a component of the POI performing the transaction.
/// </summary>
public partial record PointOfInteractionComponent3
     : IIsoXmlSerilizable<PointOfInteractionComponent3>
{
    #nullable enable
    
    /// <summary>
    /// Type of component belonging to a POI Terminal.
    /// </summary>
    public required POIComponentType3Code Type { get; init; } 
    /// <summary>
    /// Identification of the POI component.
    /// </summary>
    public required PointOfInteractionComponentIdentification1 Identification { get; init; } 
    /// <summary>
    /// Status of the POI component.
    /// </summary>
    public PointOfInteractionComponentStatus1? Status { get; init; } 
    /// <summary>
    /// Identification of the standard for which the component complies with.
    /// </summary>
    public GenericIdentification48? StandardCompliance { get; init; } 
    /// <summary>
    /// Characteristics of a POI component.
    /// </summary>
    public PointOfInteractionComponentCharacteristics1? Characteristics { get; init; } 
    /// <summary>
    /// Assessments for the component of the point of interaction.
    /// </summary>
    public PointOfInteractionComponentAssessment1? Assessment { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Tp", xmlNamespace );
        writer.WriteValue(Type.ToString()); // Enum value
        writer.WriteEndElement();
        writer.WriteStartElement(null, "Id", xmlNamespace );
        Identification.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (Status is PointOfInteractionComponentStatus1 StatusValue)
        {
            writer.WriteStartElement(null, "Sts", xmlNamespace );
            StatusValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (StandardCompliance is GenericIdentification48 StandardComplianceValue)
        {
            writer.WriteStartElement(null, "StdCmplc", xmlNamespace );
            StandardComplianceValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (Characteristics is PointOfInteractionComponentCharacteristics1 CharacteristicsValue)
        {
            writer.WriteStartElement(null, "Chrtcs", xmlNamespace );
            CharacteristicsValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (Assessment is PointOfInteractionComponentAssessment1 AssessmentValue)
        {
            writer.WriteStartElement(null, "Assmnt", xmlNamespace );
            AssessmentValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static PointOfInteractionComponent3 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
