//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for PortfolioIdentification3.  ISO2002 ID# _B0ZF0TIDEe2fXedS_ucFOA.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Identifies the portfolio if the collateral is reported on a portfolio basis.
/// </summary>
public partial record PortfolioIdentification3
     : IIsoXmlSerilizable<PortfolioIdentification3>
{
    #nullable enable
    
    /// <summary>
    /// Unique code determined by the reporting counterparty to identify the portfolio if collateral is reported on a portfolio basis.
    /// </summary>
    public required IsoMax52Text Code { get; init; } 
    /// <summary>
    /// Indicates whether the collateral portfolio includes transactions exempt from reporting.
    /// Usage: If the element is not present, the PortfolioTransactionExemption is False.
    /// </summary>
    public IsoTrueFalseIndicator? PortfolioTransactionExemption { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Cd", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax52Text(Code)); // data type Max52Text System.String
        writer.WriteEndElement();
        if (PortfolioTransactionExemption is IsoTrueFalseIndicator PortfolioTransactionExemptionValue)
        {
            writer.WriteStartElement(null, "PrtflTxXmptn", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoTrueFalseIndicator(PortfolioTransactionExemptionValue)); // data type TrueFalseIndicator System.String
            writer.WriteEndElement();
        }
    }
    public static PortfolioIdentification3 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
