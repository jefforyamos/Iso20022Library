//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for Presentation4.  ISO2002 ID# _vsXgeX1qEeGlwNeVP9egyg.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Information for the presentation of documents.
/// </summary>
public partial record Presentation4
     : IIsoXmlSerilizable<Presentation4>
{
    #nullable enable
    
    /// <summary>
    /// Medium through which the presentation can be submitted such as paper, electronic or both.
    /// </summary>
    public PresentationMedium1Choice_? Medium { get; init; } 
    /// <summary>
    /// Document required to be presented.
    /// </summary>
    public Document11? Document { get; init; } 
    /// <summary>
    /// Additional information related to the presentation.
    /// </summary>
    public SimpleValueList<IsoMax2000Text> AdditionalInformation { get; init; } = [];
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (Medium is PresentationMedium1Choice_ MediumValue)
        {
            writer.WriteStartElement(null, "Mdm", xmlNamespace );
            MediumValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (Document is Document11 DocumentValue)
        {
            writer.WriteStartElement(null, "Doc", xmlNamespace );
            DocumentValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        writer.WriteStartElement(null, "AddtlInf", xmlNamespace );
        AdditionalInformation.Serialize(writer, xmlNamespace, "Max2000Text", SerializationFormatter.IsoMax2000Text );
        writer.WriteEndElement();
    }
    public static Presentation4 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
