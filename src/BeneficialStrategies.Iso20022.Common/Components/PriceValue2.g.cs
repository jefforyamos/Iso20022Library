//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for PriceValue2.  ISO2002 ID# _Vb-eh9p-Ed-ak6NoX_4Aeg_390890355.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Value given to a price.
/// </summary>
public partial record PriceValue2
     : IIsoXmlSerilizable<PriceValue2>
{
    #nullable enable
    
    /// <summary>
    /// Price expressed as a currency and value.
    /// </summary>
    public IsoActiveOrHistoricCurrencyAnd13DecimalAmount? Amount { get; init; } 
    /// <summary>
    /// Price expressed as a rate, ie, percentage.
    /// </summary>
    public IsoPercentageRate? Rate { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (Amount is IsoActiveOrHistoricCurrencyAnd13DecimalAmount AmountValue)
        {
            writer.WriteStartElement(null, "Amt", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoActiveOrHistoricCurrencyAnd13DecimalAmount(AmountValue)); // data type ActiveOrHistoricCurrencyAnd13DecimalAmount System.Decimal
            writer.WriteEndElement();
        }
        if (Rate is IsoPercentageRate RateValue)
        {
            writer.WriteStartElement(null, "Rt", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoPercentageRate(RateValue)); // data type PercentageRate System.Decimal
            writer.WriteEndElement();
        }
    }
    public static PriceValue2 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
