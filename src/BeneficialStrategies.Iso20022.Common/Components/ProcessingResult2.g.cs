//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for ProcessingResult2.  ISO2002 ID# _U2HhkU9uEeePXdaAO32Uew.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Outcome of the processing of the authorisation.
/// </summary>
public partial record ProcessingResult2
     : IIsoXmlSerilizable<ProcessingResult2>
{
    #nullable enable
    
    /// <summary>
    /// Data pertaining to the approval of the transaction.
    /// </summary>
    public ApprovalData1? ApprovalData { get; init; } 
    /// <summary>
    /// Result of the processing.
    /// </summary>
    public ResultData1? ResultData { get; init; } 
    /// <summary>
    /// Outcome of a previous processing, for example, in response to a duplicate request.
    /// </summary>
    public ResultData1? OriginalResultData { get; init; } 
    /// <summary>
    /// Action required flag.
    /// Default: False: Action Not Required.
    /// True: Action Required.
    /// </summary>
    public IsoYesNoIndicator? ActionRequired { get; init; } 
    /// <summary>
    /// Set of actions to be performed.
    /// </summary>
    public Action9? Action { get; init; } 
    /// <summary>
    /// Additional action to perform.
    /// </summary>
    public AdditionalAction1? AdditionalAction { get; init; } 
    /// <summary>
    /// Additional information relevant for the destination.
    /// ISO 8583 bit 44
    /// </summary>
    public AdditionalInformation20? AdditionalInformation { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (ApprovalData is ApprovalData1 ApprovalDataValue)
        {
            writer.WriteStartElement(null, "ApprvlData", xmlNamespace );
            ApprovalDataValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (ResultData is ResultData1 ResultDataValue)
        {
            writer.WriteStartElement(null, "RsltData", xmlNamespace );
            ResultDataValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (OriginalResultData is ResultData1 OriginalResultDataValue)
        {
            writer.WriteStartElement(null, "OrgnlRsltData", xmlNamespace );
            OriginalResultDataValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (ActionRequired is IsoYesNoIndicator ActionRequiredValue)
        {
            writer.WriteStartElement(null, "ActnReqrd", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoYesNoIndicator(ActionRequiredValue)); // data type YesNoIndicator System.String
            writer.WriteEndElement();
        }
        if (Action is Action9 ActionValue)
        {
            writer.WriteStartElement(null, "Actn", xmlNamespace );
            ActionValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (AdditionalAction is AdditionalAction1 AdditionalActionValue)
        {
            writer.WriteStartElement(null, "AddtlActn", xmlNamespace );
            AdditionalActionValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (AdditionalInformation is AdditionalInformation20 AdditionalInformationValue)
        {
            writer.WriteStartElement(null, "AddtlInf", xmlNamespace );
            AdditionalInformationValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static ProcessingResult2 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
