//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for Product4.  ISO2002 ID# _9iyJUJVZEeWuuIjj4l7kpg.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Product to purchase.
/// </summary>
public partial record Product4
     : IIsoXmlSerilizable<Product4>
{
    #nullable enable
    
    /// <summary>
    /// Product code.
    /// </summary>
    public required IsoMax70Text ProductCode { get; init; } 
    /// <summary>
    /// Additional product code related to the product.
    /// </summary>
    public IsoMax70Text? AdditionalProductCode { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "PdctCd", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax70Text(ProductCode)); // data type Max70Text System.String
        writer.WriteEndElement();
        if (AdditionalProductCode is IsoMax70Text AdditionalProductCodeValue)
        {
            writer.WriteStartElement(null, "AddtlPdctCd", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax70Text(AdditionalProductCodeValue)); // data type Max70Text System.String
            writer.WriteEndElement();
        }
    }
    public static Product4 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
