//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for Proposal4.  ISO2002 ID# _xDwJX4FvEeWtPe6Crjmeug.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Indicates the type of proposal and if the proposal is for the variation margin and the segregated independent amount, or the segregated independent amount only.
/// </summary>
public partial record Proposal4
     : IIsoXmlSerilizable<Proposal4>
{
    #nullable enable
    
    /// <summary>
    /// Indicates whether this is an initial or counter proposal.
    /// </summary>
    public required ProposalType1Code CollateralProposalType { get; init; } 
    /// <summary>
    /// Provides details about the proposal for the variation margin and the segregated independent amount, or the segregated independent amount only.
    /// </summary>
    public required CollateralProposal4Choice_ CollateralProposal { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "CollPrpslTp", xmlNamespace );
        writer.WriteValue(CollateralProposalType.ToString()); // Enum value
        writer.WriteEndElement();
        writer.WriteStartElement(null, "CollPrpsl", xmlNamespace );
        CollateralProposal.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
    }
    public static Proposal4 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
