//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for Proxy12.  ISO2002 ID# _ww1xRRrfEeyhRdHRjakS2w.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Identification of a proxy appointed to represent a party authorised to vote at a shareholders meeting and proxy vote.
/// </summary>
public partial record Proxy12
     : IIsoXmlSerilizable<Proxy12>
{
    #nullable enable
    
    /// <summary>
    /// Type of proxy.
    /// </summary>
    public required ProxyType3Code ProxyType { get; init; } 
    /// <summary>
    /// Person, other than the chairman of the meeting, assigned by the security holder as the proxy.
    /// </summary>
    public IndividualPerson42? PersonDetails { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "PrxyTp", xmlNamespace );
        writer.WriteValue(ProxyType.ToString()); // Enum value
        writer.WriteEndElement();
        if (PersonDetails is IndividualPerson42 PersonDetailsValue)
        {
            writer.WriteStartElement(null, "PrsnDtls", xmlNamespace );
            PersonDetailsValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static Proxy12 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
