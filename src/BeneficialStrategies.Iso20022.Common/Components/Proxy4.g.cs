//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for Proxy4.  ISO2002 ID# _T4cPN9p-Ed-ak6NoX_4Aeg_2145397537.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Specifies the elements that identify a proxy appointed to represent a party authorised to vote at a shareholders meeting.
/// </summary>
public partial record Proxy4
     : IIsoXmlSerilizable<Proxy4>
{
    #nullable enable
    
    /// <summary>
    /// Specifies the type of proxy.
    /// </summary>
    public required ProxyType2Code ProxyType { get; init; } 
    /// <summary>
    /// Person, other than the Chairman of the meeting, assigned by the security holder as proxy.
    /// </summary>
    public IndividualPerson17? PersonDetails { get; init; } 
    /// <summary>
    /// Indicates the vote instruction for the resolutions which are announced via the meeting agenda in advance of the meeting.
    /// </summary>
    public Vote2Choice_? VoteInstructionForAgendaResolution { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "PrxyTp", xmlNamespace );
        writer.WriteValue(ProxyType.ToString()); // Enum value
        writer.WriteEndElement();
        if (PersonDetails is IndividualPerson17 PersonDetailsValue)
        {
            writer.WriteStartElement(null, "PrsnDtls", xmlNamespace );
            PersonDetailsValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (VoteInstructionForAgendaResolution is Vote2Choice_ VoteInstructionForAgendaResolutionValue)
        {
            writer.WriteStartElement(null, "VoteInstrForAgndRsltn", xmlNamespace );
            VoteInstructionForAgendaResolutionValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static Proxy4 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
