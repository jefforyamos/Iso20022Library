//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for QuantityTerm1.  ISO2002 ID# _X-QgoSJEEe2zWP9pqvmqdw.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Describes the notional quantity frequency.
/// </summary>
public partial record QuantityTerm1
     : IIsoXmlSerilizable<QuantityTerm1>
{
    #nullable enable
    
    /// <summary>
    /// Number of units of the financial instrument, that is, the nominal value.
    /// </summary>
    public IsoLongFraction19DecimalNumber? Quantity { get; init; } 
    /// <summary>
    /// Indicates the unit of measure in which the total notional quantity and notional quantity schedules are expressed.
    /// </summary>
    public UnitOfMeasure8Choice_? UnitOfMeasure { get; init; } 
    /// <summary>
    /// Specifies the number of time units (as expressed by the frequency period) that determines the frequency at which periodic dates occur.
    /// </summary>
    public IsoMax3Number? Value { get; init; } 
    /// <summary>
    /// Unit for the frequency period.
    /// </summary>
    public Frequency19Code? TimeUnit { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (Quantity is IsoLongFraction19DecimalNumber QuantityValue)
        {
            writer.WriteStartElement(null, "Qty", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoLongFraction19DecimalNumber(QuantityValue)); // data type LongFraction19DecimalNumber System.UInt64
            writer.WriteEndElement();
        }
        if (UnitOfMeasure is UnitOfMeasure8Choice_ UnitOfMeasureValue)
        {
            writer.WriteStartElement(null, "UnitOfMeasr", xmlNamespace );
            UnitOfMeasureValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (Value is IsoMax3Number ValueValue)
        {
            writer.WriteStartElement(null, "Val", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax3Number(ValueValue)); // data type Max3Number System.UInt64
            writer.WriteEndElement();
        }
        if (TimeUnit is Frequency19Code TimeUnitValue)
        {
            writer.WriteStartElement(null, "TmUnit", xmlNamespace );
            writer.WriteValue(TimeUnitValue.ToString()); // Enum value
            writer.WriteEndElement();
        }
    }
    public static QuantityTerm1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
