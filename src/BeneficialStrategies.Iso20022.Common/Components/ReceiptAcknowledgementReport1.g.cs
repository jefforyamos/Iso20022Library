//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for ReceiptAcknowledgementReport1.  ISO2002 ID# _jHt69O5NEeCisYr99QEiWA_-1586267634.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Provides details on the original request. Identifies the message being acknowledged and its status.
/// </summary>
public partial record ReceiptAcknowledgementReport1
     : IIsoXmlSerilizable<ReceiptAcknowledgementReport1>
{
    #nullable enable
    
    /// <summary>
    /// Reference of the request.
    /// </summary>
    public required AdditionalReferences RelatedReference { get; init; } 
    /// <summary>
    /// Gives the status of the request.
    /// </summary>
    public required RequestHandling1 RequestHandling { get; init; } 
    /// <summary>
    /// Identification of the original message for which the acknowledgement is sent.
    /// </summary>
    public MessageIdentification6? OriginalMessageIdentification { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "RltdRef", xmlNamespace );
        RelatedReference.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "ReqHdlg", xmlNamespace );
        RequestHandling.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (OriginalMessageIdentification is MessageIdentification6 OriginalMessageIdentificationValue)
        {
            writer.WriteStartElement(null, "OrgnlMsgId", xmlNamespace );
            OriginalMessageIdentificationValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static ReceiptAcknowledgementReport1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
