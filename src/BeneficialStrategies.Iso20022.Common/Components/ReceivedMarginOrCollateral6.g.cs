//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for ReceivedMarginOrCollateral6.  ISO2002 ID# _lgGRIYmKEeybbN9emGqfiw.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Information on the received margin or collateral of the transaction.
/// </summary>
public partial record ReceivedMarginOrCollateral6
     : IIsoXmlSerilizable<ReceivedMarginOrCollateral6>
{
    #nullable enable
    
    /// <summary>
    /// Value of the initial margin received by the reporting counterparty from the other counterparty.
    /// Where initial margin is received on a portfolio basis, this field should include the overall value of initial margin received for the portfolio.
    /// </summary>
    public IsoActiveOrHistoricCurrencyAnd20DecimalAmount? InitialMarginReceivedPreHaircut { get; init; } 
    /// <summary>
    /// Value of the initial margin received by the reporting counterparty from the other counterparty.
    /// Where initial margin is received on a portfolio basis, this field should include the overall value of initial margin received for the portfolio.
    /// Post-haircut values of margins depend on associated risk of changes in collateral value and therefore on the nature of the collateral posted (or collected).
    /// </summary>
    public IsoActiveOrHistoricCurrencyAnd20DecimalAmount? InitialMarginReceivedPostHaircut { get; init; } 
    /// <summary>
    /// Value of the variation margin received, including cash settled, by the reporting counterparty from the other counterparty. 
    /// Where variation margin is received on a portfolio basis, this field should include the overall value of variation margin received for the portfolio.
    /// </summary>
    public IsoActiveOrHistoricCurrencyAnd20DecimalAmount? VariationMarginReceivedPreHaircut { get; init; } 
    /// <summary>
    /// Value of the variation margin received, including cash settled, by the reporting counterparty from the other counterparty. 
    /// Where variation margin is received on a portfolio basis, this field should include the overall value of variation margin received for the portfolio.
    /// Post-haircut values of margins depend on associated risk of changes in collateral value and therefore on the nature of the collateral posted (or collected).
    /// </summary>
    public IsoActiveOrHistoricCurrencyAnd20DecimalAmount? VariationMarginReceivedPostHaircut { get; init; } 
    /// <summary>
    /// Value of collateral received in excess of the required collateral.
    /// </summary>
    public IsoActiveOrHistoricCurrencyAnd20DecimalAmount? ExcessCollateralReceived { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (InitialMarginReceivedPreHaircut is IsoActiveOrHistoricCurrencyAnd20DecimalAmount InitialMarginReceivedPreHaircutValue)
        {
            writer.WriteStartElement(null, "InitlMrgnRcvdPreHrcut", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoActiveOrHistoricCurrencyAnd20DecimalAmount(InitialMarginReceivedPreHaircutValue)); // data type ActiveOrHistoricCurrencyAnd20DecimalAmount System.Decimal
            writer.WriteEndElement();
        }
        if (InitialMarginReceivedPostHaircut is IsoActiveOrHistoricCurrencyAnd20DecimalAmount InitialMarginReceivedPostHaircutValue)
        {
            writer.WriteStartElement(null, "InitlMrgnRcvdPstHrcut", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoActiveOrHistoricCurrencyAnd20DecimalAmount(InitialMarginReceivedPostHaircutValue)); // data type ActiveOrHistoricCurrencyAnd20DecimalAmount System.Decimal
            writer.WriteEndElement();
        }
        if (VariationMarginReceivedPreHaircut is IsoActiveOrHistoricCurrencyAnd20DecimalAmount VariationMarginReceivedPreHaircutValue)
        {
            writer.WriteStartElement(null, "VartnMrgnRcvdPreHrcut", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoActiveOrHistoricCurrencyAnd20DecimalAmount(VariationMarginReceivedPreHaircutValue)); // data type ActiveOrHistoricCurrencyAnd20DecimalAmount System.Decimal
            writer.WriteEndElement();
        }
        if (VariationMarginReceivedPostHaircut is IsoActiveOrHistoricCurrencyAnd20DecimalAmount VariationMarginReceivedPostHaircutValue)
        {
            writer.WriteStartElement(null, "VartnMrgnRcvdPstHrcut", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoActiveOrHistoricCurrencyAnd20DecimalAmount(VariationMarginReceivedPostHaircutValue)); // data type ActiveOrHistoricCurrencyAnd20DecimalAmount System.Decimal
            writer.WriteEndElement();
        }
        if (ExcessCollateralReceived is IsoActiveOrHistoricCurrencyAnd20DecimalAmount ExcessCollateralReceivedValue)
        {
            writer.WriteStartElement(null, "XcssCollRcvd", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoActiveOrHistoricCurrencyAnd20DecimalAmount(ExcessCollateralReceivedValue)); // data type ActiveOrHistoricCurrencyAnd20DecimalAmount System.Decimal
            writer.WriteEndElement();
        }
    }
    public static ReceivedMarginOrCollateral6 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
