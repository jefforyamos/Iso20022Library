//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for ReconciliationStatisticsPerDerivativeType3.  ISO2002 ID# _530fYVfcEeqZr5K1Woax-g.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Detailed statistics on reconciliation per type of derivative.
/// </summary>
public partial record ReconciliationStatisticsPerDerivativeType3
     : IIsoXmlSerilizable<ReconciliationStatisticsPerDerivativeType3>
{
    #nullable enable
    
    /// <summary>
    /// Detailed statistics on reconciliation for all derivatives.
    /// </summary>
    public required DetailedReconciliationStatistics2 AllDerivatives { get; init; } 
    /// <summary>
    /// Detailed statistics on reconciliation for outstanding derivatives.
    /// </summary>
    public required DetailedReconciliationStatistics2 OutstandingDerivatives { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "AllDerivs", xmlNamespace );
        AllDerivatives.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "OutsdngDerivs", xmlNamespace );
        OutstandingDerivatives.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
    }
    public static ReconciliationStatisticsPerDerivativeType3 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
