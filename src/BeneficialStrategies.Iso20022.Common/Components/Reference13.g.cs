//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for Reference13.  ISO2002 ID# _RAGwJdp-Ed-ak6NoX_4Aeg_1422002216.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Additional references linked to the cross order cancel request.
/// </summary>
public partial record Reference13
     : IIsoXmlSerilizable<Reference13>
{
    #nullable enable
    
    /// <summary>
    /// Cross Identifier of the previous cross order (not the initial cross order of the day) as assigned by the institution, used to identify the previous cross order in CrossOrdercancelRequest.
    /// </summary>
    public required IsoMax35Text OriginalCrossOrderIdentification { get; init; } 
    /// <summary>
    /// Host assigned entity identification that can be used to reference all components of a cross; sides + strategy + legs. Used as the primary key with which to refer to the Cross Order for cancellation. The HostCrossId will also be used to link together components of the cross order. For example, each individual Notice of Execution associated with the order will carry HostCrossID in order to tie back to the original cross order.
    /// </summary>
    public required IsoMax35Text HostCrossIdentification { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "OrgnlCrossOrdrId", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax35Text(OriginalCrossOrderIdentification)); // data type Max35Text System.String
        writer.WriteEndElement();
        writer.WriteStartElement(null, "HstCrossId", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax35Text(HostCrossIdentification)); // data type Max35Text System.String
        writer.WriteEndElement();
    }
    public static Reference13 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
