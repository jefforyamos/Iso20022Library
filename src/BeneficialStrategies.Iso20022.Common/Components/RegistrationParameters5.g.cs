//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for RegistrationParameters5.  ISO2002 ID# _6Szd8ZNLEeWGlc8L7oPDIg.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Xml.Linq;

#if NET6_0_OR_GREATER // C# 10 
#else
using System.DateOnly=System.DateTime; // So data types will degrade gracefully
using System.TimeOnly=System.DateTime; // Same with this data type
#endif
namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Information related to registration of securities.
/// </summary>
[IsoId("_6Szd8ZNLEeWGlc8L7oPDIg")]
[DisplayName("Registration Parameters")]
#if DECLARE_SERIALIZABLE
[Serializable]
#endif
#if DECLARE_DATACONTRACT
[DataContract]
#endif
public partial record RegistrationParameters5
{
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    // No constructor needed for NET8 and above.
    #else
    // No constructor needed for < NET8 because this type has no required members.
    #endif
    #nullable enable
    
    /// <summary>
    /// Identification assigned to a deposit.
    /// </summary>
    [IsoId("_6Szd85NLEeWGlc8L7oPDIg")]
    [DisplayName("Certification Identification")]
    #if DECLARE_DATACONTRACT
    [DataMember(Name="CertfctnId")]
    #endif
    [IsoXmlTag("CertfctnId")]
    [IsoSimpleType(IsoSimpleType.RestrictedFINXMax16Text)]
    [StringLength(maximumLength: 16 ,MinimumLength = 1)]
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public IsoRestrictedFINXMax16Text? CertificationIdentification { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public System.String? CertificationIdentification { get; init; } 
    #else
    public System.String? CertificationIdentification { get; set; } 
    #endif
    
    /// <summary>
    /// Date/time at which the certificates in the deposit were validated by the agent.
    /// </summary>
    [IsoId("_6Szd-5NLEeWGlc8L7oPDIg")]
    [DisplayName("Certification Date Time")]
    #if DECLARE_DATACONTRACT
    [DataMember(Name="CertfctnDtTm")]
    #endif
    [IsoXmlTag("CertfctnDtTm")]
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public DateAndDateTimeChoice_? CertificationDateTime { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public DateAndDateTimeChoice_? CertificationDateTime { get; init; } 
    #else
    public DateAndDateTimeChoice_? CertificationDateTime { get; set; } 
    #endif
    
    /// <summary>
    /// Account at the registrar where financial instruments are registered.
    /// </summary>
    [IsoId("_6SzeA5NLEeWGlc8L7oPDIg")]
    [DisplayName("Registrar Account")]
    #if DECLARE_DATACONTRACT
    [DataMember(Name="RegarAcct")]
    #endif
    [IsoXmlTag("RegarAcct")]
    [IsoSimpleType(IsoSimpleType.RestrictedFINXMax35Text)]
    [StringLength(maximumLength: 35 ,MinimumLength = 1)]
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public IsoRestrictedFINXMax35Text? RegistrarAccount { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public System.String? RegistrarAccount { get; init; } 
    #else
    public System.String? RegistrarAccount { get; set; } 
    #endif
    
    /// <summary>
    /// Unique and unambiguous identifier of a certificate assigned by the issuer.
    /// </summary>
    [IsoId("_6SzeC5NLEeWGlc8L7oPDIg")]
    [DisplayName("Certificate Number")]
    #if DECLARE_DATACONTRACT
    [DataMember(Name="CertNb")]
    #endif
    [IsoXmlTag("CertNb")]
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public SecuritiesCertificate5? CertificateNumber { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public SecuritiesCertificate5? CertificateNumber { get; init; } 
    #else
    public SecuritiesCertificate5? CertificateNumber { get; set; } 
    #endif
    
    
    #nullable disable
    
}
