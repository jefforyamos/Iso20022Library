//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for RegulatoryReporting4.  ISO2002 ID# _I6JesTS3EeOW7s4n9SUZ3A.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Xml.Linq;

#if NET6_0_OR_GREATER // C# 10 
#else
using System.DateOnly=System.DateTime; // So data types will degrade gracefully
using System.TimeOnly=System.DateTime; // Same with this data type
#endif
namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Includes data elements that can be used for reporting to trade repositories, it is not to be used on regular trade confirmations. Although some fields, for example, unique transaction identifier and prior unique transaction identifier, might be used on regular trade confirmations.
/// </summary>
[IsoId("_I6JesTS3EeOW7s4n9SUZ3A")]
#if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
[DisplayName("Regulatory Reporting")]
#endif
#if DECLARE_SERIALIZABLE
[Serializable]
#endif
#if DECLARE_DATACONTRACT
[DataContract]
#endif
public partial record RegulatoryReporting4
{
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    // No constructor needed for NET8 and above.
    #else
    // No constructor needed for < NET8 because this type has no required members.
    #endif
    #nullable enable
    
    /// <summary>
    /// Regulatory transaction reporting information from the Trading Side party.
    /// </summary>
    [IsoId("_Nc3icE4SEeOHYs5EqIAeTw")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Trading Side Transaction Reporting")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public TradingSideTransactionReporting1? TradingSideTransactionReporting { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public TradingSideTransactionReporting1? TradingSideTransactionReporting { get; init; } 
    #else
    public TradingSideTransactionReporting1? TradingSideTransactionReporting { get; set; } 
    #endif
    
    /// <summary>
    /// Regulatory transaction reporting information from the Counterparty Side party.
    /// </summary>
    [IsoId("_Ywd9oE4SEeOHYs5EqIAeTw")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Counterparty Side Transaction Reporting")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CounterpartySideTransactionReporting1? CounterpartySideTransactionReporting { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CounterpartySideTransactionReporting1? CounterpartySideTransactionReporting { get; init; } 
    #else
    public CounterpartySideTransactionReporting1? CounterpartySideTransactionReporting { get; set; } 
    #endif
    
    /// <summary>
    /// Identifies an agency or separate corporation of a futures exchange responsible for settling and
    /// clearing trades, collecting and maintaining margins, regulating delivery and reporting trade data. This can also be known as a Central Counterparty (CCP).
    /// </summary>
    [IsoId("_PH6ZgFA3EeOenoknK_-H2g")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Central Counterparty Clearing House")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public PartyIdentification73Choice_? CentralCounterpartyClearingHouse { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public PartyIdentification73Choice_? CentralCounterpartyClearingHouse { get; init; } 
    #else
    public PartyIdentification73Choice_? CentralCounterpartyClearingHouse { get; set; } 
    #endif
    
    /// <summary>
    /// Identifies the party that is a member of the clearing house (CCP) and that acts as a liaison between the investor and the Cntral Counterparty (CCP).
    /// </summary>
    [IsoId("_UyA1kFA3EeOenoknK_-H2g")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Clearing Broker")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public PartyIdentification73Choice_? ClearingBroker { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public PartyIdentification73Choice_? ClearingBroker { get; init; } 
    #else
    public PartyIdentification73Choice_? ClearingBroker { get; set; } 
    #endif
    
    /// <summary>
    /// Identifies the party that is exempt from a clearing obligation.
    /// </summary>
    [IsoId("_JK-wCTS3EeOW7s4n9SUZ3A")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Clearing Exception Party")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public PartyIdentification73Choice_? ClearingExceptionParty { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public PartyIdentification73Choice_? ClearingExceptionParty { get; init; } 
    #else
    public PartyIdentification73Choice_? ClearingExceptionParty { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies the reference number assigned by the clearing broker. A distinction can be made between the reference for the Central Counterparty (CCP) leg and the reference for the client leg of the transaction.
    /// </summary>
    [IsoId("_JK-wCzS3EeOW7s4n9SUZ3A")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Clearing Broker Identification")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public ClearingBrokerIdentification1? ClearingBrokerIdentification { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public ClearingBrokerIdentification1? ClearingBrokerIdentification { get; init; } 
    #else
    public ClearingBrokerIdentification1? ClearingBrokerIdentification { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the contract is above or below the clearing threshold. Where No indicates the contract is below the clearing threshold and Yes indicates the contract is above the clearing threshold.
    /// </summary>
    [IsoId("_JK-wDTS3EeOW7s4n9SUZ3A")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Clearing Threshold Indicator")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public IsoYesNoIndicator? ClearingThresholdIndicator { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public System.String? ClearingThresholdIndicator { get; init; } 
    #else
    public System.String? ClearingThresholdIndicator { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies the reference number assigned by the Central Counterparty (CCP).
    /// </summary>
    [IsoId("_JK-wDzS3EeOW7s4n9SUZ3A")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Cleared Product Identification")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [StringLength(maximumLength: 35 ,MinimumLength = 1)]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public IsoMax35Text? ClearedProductIdentification { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public System.String? ClearedProductIdentification { get; init; } 
    #else
    public System.String? ClearedProductIdentification { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies the underlying product type.
    /// </summary>
    [IsoId("_JK-wETS3EeOW7s4n9SUZ3A")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Underlying Product Identifier")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public UnderlyingProductIdentifier1Code? UnderlyingProductIdentifier { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public UnderlyingProductIdentifier1Code? UnderlyingProductIdentifier { get; init; } 
    #else
    public UnderlyingProductIdentifier1Code? UnderlyingProductIdentifier { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the trade is a pre-allocation or a post-allocation trade, or whether the trade is unallocated.
    /// </summary>
    [IsoId("_JK-wEzS3EeOW7s4n9SUZ3A")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Allocation Indicator")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public AllocationIndicator1Code? AllocationIndicator { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public AllocationIndicator1Code? AllocationIndicator { get; init; } 
    #else
    public AllocationIndicator1Code? AllocationIndicator { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the transaction is collateralised.
    /// </summary>
    [IsoId("_JK-wFTS3EeOW7s4n9SUZ3A")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Collateralisation Indicator")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CollateralisationIndicator1Code? CollateralisationIndicator { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CollateralisationIndicator1Code? CollateralisationIndicator { get; init; } 
    #else
    public CollateralisationIndicator1Code? CollateralisationIndicator { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies the trading venue of the transaction.
    /// </summary>
    [IsoId("_JK-wFzS3EeOW7s4n9SUZ3A")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Execution Venue")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [StringLength(maximumLength: 35 ,MinimumLength = 1)]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public IsoMax35Text? ExecutionVenue { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public System.String? ExecutionVenue { get; init; } 
    #else
    public System.String? ExecutionVenue { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies the date and time of the execution of the transaction in Coordinated Universal Time (UTC).
    /// </summary>
    [IsoId("_JK-wGTS3EeOW7s4n9SUZ3A")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Execution Timestamp")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public DateAndDateTimeChoice_? ExecutionTimestamp { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public DateAndDateTimeChoice_? ExecutionTimestamp { get; init; } 
    #else
    public DateAndDateTimeChoice_? ExecutionTimestamp { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the reportable transaction has one or more additional terms or provisions, other than those listed in the required real-time data fields, that materially affects the price of the reportable transaction.
    /// </summary>
    [IsoId("_JK-wGzS3EeOW7s4n9SUZ3A")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Non Standard Flag")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public IsoYesNoIndicator? NonStandardFlag { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public System.String? NonStandardFlag { get; init; } 
    #else
    public System.String? NonStandardFlag { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies the common reference or correlation identification for a swap transaction where the near and far leg are confirmed separately.
    /// </summary>
    [IsoId("_JK-wHTS3EeOW7s4n9SUZ3A")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Link Swap Identification")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [StringLength(maximumLength: 0 ,MinimumLength = 0)]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public IsoExact42Text? LinkSwapIdentification { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public System.String? LinkSwapIdentification { get; init; } 
    #else
    public System.String? LinkSwapIdentification { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies the financial nature of the reporting counterparty.
    /// </summary>
    [IsoId("_Yk6EUE4GEeOHYs5EqIAeTw")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Financial Nature Of The Counterparty Indicator")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public IsoYesNoIndicator? FinancialNatureOfTheCounterpartyIndicator { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public System.String? FinancialNatureOfTheCounterpartyIndicator { get; init; } 
    #else
    public System.String? FinancialNatureOfTheCounterpartyIndicator { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies if the collateral is posted on a portfolio basis.
    /// </summary>
    [IsoId("_j9Ig0E4GEeOHYs5EqIAeTw")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Collateral Portfolio Indicator")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public IsoYesNoIndicator? CollateralPortfolioIndicator { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public System.String? CollateralPortfolioIndicator { get; init; } 
    #else
    public System.String? CollateralPortfolioIndicator { get; set; } 
    #endif
    
    /// <summary>
    /// Identifies the portfolio code to which the trade belongs if the collateral is posted on a portfolio basis (and not trade by trade).
    /// </summary>
    [IsoId("_p9lAUE4GEeOHYs5EqIAeTw")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Collateral Portfolio Code")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [StringLength(maximumLength: 10 ,MinimumLength = 1)]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public IsoMax10Text? CollateralPortfolioCode { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public System.String? CollateralPortfolioCode { get; init; } 
    #else
    public System.String? CollateralPortfolioCode { get; set; } 
    #endif
    
    /// <summary>
    /// Indicates if the trade results from portfolio compression.
    /// </summary>
    [IsoId("_xwoF4E4GEeOHYs5EqIAeTw")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Portfolio Compression Indicator")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public IsoYesNoIndicator? PortfolioCompressionIndicator { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public System.String? PortfolioCompressionIndicator { get; init; } 
    #else
    public System.String? PortfolioCompressionIndicator { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies the corporate sector of the counterparty.
    /// </summary>
    [IsoId("_4FfWME4GEeOHYs5EqIAeTw")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Corporate Sector Indicator")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CorporateSectorIdentifier1Code? CorporateSectorIndicator { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CorporateSectorIdentifier1Code? CorporateSectorIndicator { get; init; } 
    #else
    public CorporateSectorIdentifier1Code? CorporateSectorIndicator { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the counterparty has entered into a trade with a non-European Economic Area (EEA) counterparty that is not subject to the reporting obligation.
    /// </summary>
    [IsoId("_-A4WkE4GEeOHYs5EqIAeTw")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Trade With Non EEA Counterparty Indicator")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public IsoYesNoIndicator? TradeWithNonEEACounterpartyIndicator { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public System.String? TradeWithNonEEACounterpartyIndicator { get; init; } 
    #else
    public System.String? TradeWithNonEEACounterpartyIndicator { get; set; } 
    #endif
    
    /// <summary>
    /// To indicate if a reported trade falls under the definition of intragroup transaction, as defined by European Securities and Markets Authority (ESMA) in the Technical Standards.
    /// </summary>
    [IsoId("_NJ6LME4HEeOHYs5EqIAeTw")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Intragroup Trade Indicator")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public IsoYesNoIndicator? IntragroupTradeIndicator { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public System.String? IntragroupTradeIndicator { get; init; } 
    #else
    public System.String? IntragroupTradeIndicator { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the contract is objectively measurable as directly linked to the non-financial counterparty's commercial or treasury financing activity.
    /// </summary>
    [IsoId("_UnMcIE4HEeOHYs5EqIAeTw")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Commercial Or Treasury Financing Indicator")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public IsoYesNoIndicator? CommercialOrTreasuryFinancingIndicator { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public System.String? CommercialOrTreasuryFinancingIndicator { get; init; } 
    #else
    public System.String? CommercialOrTreasuryFinancingIndicator { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies additional information that might be required by the regulator.
    /// </summary>
    [IsoId("_JK-wHzS3EeOW7s4n9SUZ3A")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Additional Reporting Information")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [StringLength(maximumLength: 210 ,MinimumLength = 1)]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public IsoMax210Text? AdditionalReportingInformation { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public System.String? AdditionalReportingInformation { get; init; } 
    #else
    public System.String? AdditionalReportingInformation { get; set; } 
    #endif
    
    
    #nullable disable
    
}
