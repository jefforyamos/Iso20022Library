//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for ReinvestedCashTypeAndAmount1.  ISO2002 ID# _08jc8JLiEeelrYORFsXWZg.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Provides details on the type and amount of the cash reinvestment in a given currency.
/// </summary>
public partial record ReinvestedCashTypeAndAmount1
     : IIsoXmlSerilizable<ReinvestedCashTypeAndAmount1>
{
    #nullable enable
    
    /// <summary>
    /// Provides details on the type of the cash reinvestment in a given currency.
    /// </summary>
    public required ReinvestmentType1Code Type { get; init; } 
    /// <summary>
    /// Provides details on the amount of the cash reinvestment in a given currency.
    /// </summary>
    public required IsoActiveOrHistoricCurrencyAndAmount ReinvestedCashAmount { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Tp", xmlNamespace );
        writer.WriteValue(Type.ToString()); // Enum value
        writer.WriteEndElement();
        writer.WriteStartElement(null, "RinvstdCshAmt", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoActiveOrHistoricCurrencyAndAmount(ReinvestedCashAmount)); // data type ActiveOrHistoricCurrencyAndAmount System.Decimal
        writer.WriteEndElement();
    }
    public static ReinvestedCashTypeAndAmount1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
