//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for RejectionReason23.  ISO2002 ID# _wB6BMQgJEeSFYfyUKDXKaw.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Reason to reject the message.
/// </summary>
public partial record RejectionReason23
     : IIsoXmlSerilizable<RejectionReason23>
{
    #nullable enable
    
    /// <summary>
    /// Reason to reject the message.
    /// </summary>
    public required MessageRejectedReason1Code Reason { get; init; } 
    /// <summary>
    /// Additional information about the rejection reason.
    /// </summary>
    public IsoMax140Text? AdditionalInformation { get; init; } 
    /// <summary>
    /// Identification of the invalid or unrecognised reference.
    /// </summary>
    public LinkedMessage1Choice_? LinkedMessage { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Rsn", xmlNamespace );
        writer.WriteValue(Reason.ToString()); // Enum value
        writer.WriteEndElement();
        if (AdditionalInformation is IsoMax140Text AdditionalInformationValue)
        {
            writer.WriteStartElement(null, "AddtlInf", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax140Text(AdditionalInformationValue)); // data type Max140Text System.String
            writer.WriteEndElement();
        }
        if (LinkedMessage is LinkedMessage1Choice_ LinkedMessageValue)
        {
            writer.WriteStartElement(null, "LkdMsg", xmlNamespace );
            LinkedMessageValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static RejectionReason23 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
