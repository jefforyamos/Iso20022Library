//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for Repartition2.  ISO2002 ID# _j9wpsRQXEeKebsB9eKJSkA.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Indicates how the amount of the investment plan is split amongst the funds.
/// </summary>
public partial record Repartition2
     : IIsoXmlSerilizable<Repartition2>
{
    #nullable enable
    
    /// <summary>
    /// Percentage of amount invested in a funds.
    /// </summary>
    public required IsoPercentageRate Percentage { get; init; } 
    /// <summary>
    /// Security that is a sub-set of an investment fund, and is governed by the same investment fund policy, eg, dividend option or valuation currency.
    /// </summary>
    public required FinancialInstrument29 FinancialInstrument { get; init; } 
    /// <summary>
    /// When a fund has multiple currencies within same ISIN, this indicates the currency of the savings or withdrawal plan.
    /// </summary>
    public CurrencyCode? CurrencyOfPlan { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Pctg", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoPercentageRate(Percentage)); // data type PercentageRate System.Decimal
        writer.WriteEndElement();
        writer.WriteStartElement(null, "FinInstrm", xmlNamespace );
        FinancialInstrument.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (CurrencyOfPlan is CurrencyCode CurrencyOfPlanValue)
        {
            writer.WriteStartElement(null, "CcyOfPlan", xmlNamespace );
            writer.WriteValue(CurrencyOfPlanValue.ToString()); // Enum value
            writer.WriteEndElement();
        }
    }
    public static Repartition2 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
