//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for Report5.  ISO2002 ID# _7jLUES9dEeS94oXWDaBauA.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Provides details on the settlement obligation report.
/// </summary>
public partial record Report5
     : IIsoXmlSerilizable<Report5>
{
    #nullable enable
    
    /// <summary>
    /// Provides the identification for the non-clearing member. This is mandatory if the clearing member identification equals a general clearing member.
    /// </summary>
    public PartyIdentificationAndAccount31? NonClearingMember { get; init; } 
    /// <summary>
    /// Provides information about the settlement obligation details.
    /// </summary>
    public SettlementObligation8? SettlementObligationDetails { get; init;  } // Warning: Don't know multiplicity.
    // ID for the above is _71U0Ay9dEeS94oXWDaBauA
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (NonClearingMember is PartyIdentificationAndAccount31 NonClearingMemberValue)
        {
            writer.WriteStartElement(null, "NonClrMmb", xmlNamespace );
            NonClearingMemberValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        // Not sure how to serialize SettlementObligationDetails, multiplicity Unknown
    }
    public static Report5 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
