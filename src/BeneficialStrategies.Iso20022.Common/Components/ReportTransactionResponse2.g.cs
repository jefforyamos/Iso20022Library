//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for ReportTransactionResponse2.  ISO2002 ID# _5YVzwQ1OEeqjM-rxn3HuXQ.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Content of the Transaction Report Response message.
/// </summary>
public partial record ReportTransactionResponse2
     : IIsoXmlSerilizable<ReportTransactionResponse2>
{
    #nullable enable
    
    /// <summary>
    /// The total number of transactions matching the search criteria.
    /// </summary>
    public required IsoPositiveNumber ReportFullSize { get; init; } 
    /// <summary>
    /// Index of the first transaction reported in this message within the list of transactions matching the search criteria.
    /// </summary>
    public required IsoPositiveNumber BlockStart { get; init; } 
    /// <summary>
    /// Index of the last transaction reported in this message.
    /// </summary>
    public required IsoPositiveNumber BlockStop { get; init; } 
    /// <summary>
    /// List of Transaction Report containing one Transaction Report for each transaction matching the Search criteria. This list may be partial according to requested block.
    /// </summary>
    public PointOfInteractionTransactionReport2? TransactionReport { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "RptFullSz", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoPositiveNumber(ReportFullSize)); // data type PositiveNumber System.UInt64
        writer.WriteEndElement();
        writer.WriteStartElement(null, "BlckStart", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoPositiveNumber(BlockStart)); // data type PositiveNumber System.UInt64
        writer.WriteEndElement();
        writer.WriteStartElement(null, "BlckStop", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoPositiveNumber(BlockStop)); // data type PositiveNumber System.UInt64
        writer.WriteEndElement();
        if (TransactionReport is PointOfInteractionTransactionReport2 TransactionReportValue)
        {
            writer.WriteStartElement(null, "TxRpt", xmlNamespace );
            TransactionReportValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static ReportTransactionResponse2 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
