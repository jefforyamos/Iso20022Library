//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for ReportingPeriod4.  ISO2002 ID# _yAlL4e5pEemXBpiFxCCWFQ.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Specifies the requested reporting period.
/// </summary>
public partial record ReportingPeriod4
     : IIsoXmlSerilizable<ReportingPeriod4>
{
    #nullable enable
    
    /// <summary>
    /// Specifies a date range.
    /// </summary>
    public required DatePeriod3 FromToDate { get; init; } 
    /// <summary>
    /// Specifies a time range.
    /// </summary>
    public required TimePeriod2 FromToTime { get; init; } 
    /// <summary>
    /// Specifies whether all matching items need to be reported or only those items that are new or have changed since the last similar request was made.
    /// </summary>
    public required QueryType3Code Type { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "FrToDt", xmlNamespace );
        FromToDate.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "FrToTm", xmlNamespace );
        FromToTime.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "Tp", xmlNamespace );
        writer.WriteValue(Type.ToString()); // Enum value
        writer.WriteEndElement();
    }
    public static ReportingPeriod4 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
