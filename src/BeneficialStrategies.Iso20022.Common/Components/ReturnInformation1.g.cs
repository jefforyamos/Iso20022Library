//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for ReturnInformation1.  ISO2002 ID# _QIhn4tp-Ed-ak6NoX_4Aeg_554532550.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Details on the returns expected by the debtor side after cancellation or modification.
/// </summary>
public partial record ReturnInformation1
     : IIsoXmlSerilizable<ReturnInformation1>
{
    #nullable enable
    
    /// <summary>
    /// Returned amount of money moved between the instructing agent and the instructed agent in the return transaction.
    /// </summary>
    public IsoCurrencyAndAmount? ReturnedInterbankSettlementAmount { get; init; } 
    /// <summary>
    /// Date on which the amount of money ceases to be available to the agent that owes it and when the amount of money becomes available to the agent to which it is due.
    /// </summary>
    public IsoISODate? InterbankSettlementDate { get; init; } 
    /// <summary>
    /// Specifies the clearing channel to be used to process the payment instruction.
    /// </summary>
    public ClearingChannel2Code? ClearingChannel { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (ReturnedInterbankSettlementAmount is IsoCurrencyAndAmount ReturnedInterbankSettlementAmountValue)
        {
            writer.WriteStartElement(null, "RtrdIntrBkSttlmAmt", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoCurrencyAndAmount(ReturnedInterbankSettlementAmountValue)); // data type CurrencyAndAmount System.Decimal
            writer.WriteEndElement();
        }
        if (InterbankSettlementDate is IsoISODate InterbankSettlementDateValue)
        {
            writer.WriteStartElement(null, "IntrBkSttlmDt", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoISODate(InterbankSettlementDateValue)); // data type ISODate System.DateOnly
            writer.WriteEndElement();
        }
        if (ClearingChannel is ClearingChannel2Code ClearingChannelValue)
        {
            writer.WriteStartElement(null, "ClrChanl", xmlNamespace );
            writer.WriteValue(ClearingChannelValue.ToString()); // Enum value
            writer.WriteEndElement();
        }
    }
    public static ReturnInformation1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
