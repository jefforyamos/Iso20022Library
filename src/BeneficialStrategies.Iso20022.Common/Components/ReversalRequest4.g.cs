//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for ReversalRequest4.  ISO2002 ID# _uVlPgU3_Eey_VecAUE-C9Q.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Data to request a Reversal.
/// </summary>
public partial record ReversalRequest4
     : IIsoXmlSerilizable<ReversalRequest4>
{
    #nullable enable
    
    /// <summary>
    /// Transaction to reverse.
    /// </summary>
    public CardPaymentTransaction120? ReversalTransaction { get; init; } 
    /// <summary>
    /// Data linked to card loyalty during payment.
    /// </summary>
    public LoyaltyRequestData3? LoyaltyData { get; init; } 
    /// <summary>
    /// Reason for this reversal.
    /// </summary>
    public required ReversalReason1Code ReversalReason { get; init; } 
    /// <summary>
    /// Amount to reverse (total or partial).
    /// </summary>
    public IsoImpliedCurrencyAndAmount? ReversedAmount { get; init; } 
    /// <summary>
    /// Specific Customer Order linked with the reversal.
    /// </summary>
    public CustomerOrder1? CustomerOrder { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (ReversalTransaction is CardPaymentTransaction120 ReversalTransactionValue)
        {
            writer.WriteStartElement(null, "RvslTx", xmlNamespace );
            ReversalTransactionValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (LoyaltyData is LoyaltyRequestData3 LoyaltyDataValue)
        {
            writer.WriteStartElement(null, "LltyData", xmlNamespace );
            LoyaltyDataValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        writer.WriteStartElement(null, "RvslRsn", xmlNamespace );
        writer.WriteValue(ReversalReason.ToString()); // Enum value
        writer.WriteEndElement();
        if (ReversedAmount is IsoImpliedCurrencyAndAmount ReversedAmountValue)
        {
            writer.WriteStartElement(null, "RvsdAmt", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoImpliedCurrencyAndAmount(ReversedAmountValue)); // data type ImpliedCurrencyAndAmount System.Decimal
            writer.WriteEndElement();
        }
        if (CustomerOrder is CustomerOrder1 CustomerOrderValue)
        {
            writer.WriteStartElement(null, "CstmrOrdr", xmlNamespace );
            CustomerOrderValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static ReversalRequest4 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
