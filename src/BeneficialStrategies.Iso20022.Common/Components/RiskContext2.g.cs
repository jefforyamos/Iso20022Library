//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for RiskContext2.  ISO2002 ID# _VFt7wcStEeuBjv5G5kw00g.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Context of the risk associated with the transaction.
/// </summary>
public partial record RiskContext2
     : IIsoXmlSerilizable<RiskContext2>
{
    #nullable enable
    
    /// <summary>
    /// Input data to be considered in a risk assessment.
    /// </summary>
    public RiskInputData1? RiskInputData { get; init; } 
    /// <summary>
    /// Indicates to the card issuer the level of risk associated with the transaction.
    /// </summary>
    public RiskAssessment2? RiskAssessment { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (RiskInputData is RiskInputData1 RiskInputDataValue)
        {
            writer.WriteStartElement(null, "RskInptData", xmlNamespace );
            RiskInputDataValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (RiskAssessment is RiskAssessment2 RiskAssessmentValue)
        {
            writer.WriteStartElement(null, "RskAssmnt", xmlNamespace );
            RiskAssessmentValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static RiskContext2 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
