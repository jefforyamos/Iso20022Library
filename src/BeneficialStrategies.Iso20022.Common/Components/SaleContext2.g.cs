//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for SaleContext2.  ISO2002 ID# _1piOoY0VEeWRYffwL7E13A.
//

using BeneficialStrategies.Iso20022.Choices;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Sale context in which the transaction is performed.
/// </summary>
public partial record SaleContext2
{
    #nullable enable
    
    /// <summary>
    /// Identification of the sale terminal (electronic cash register or point of sale terminal) or the sale system.
    /// </summary>
    public IsoMax35Text? SaleIdentification { get; init; } 
    /// <summary>
    /// Identify a sale transaction assigned by the sale system.
    /// </summary>
    public IsoMax35Text? SaleReferenceNumber { get; init; } 
    /// <summary>
    /// Identifier of the reconciliation between the Sale system and the POI system.
    /// </summary>
    public IsoMax35Text? SaleReconciliationIdentification { get; init; } 
    /// <summary>
    /// Identification of the cashier who carried out the transaction.
    /// </summary>
    public IsoMax35Text? CashierIdentification { get; init; } 
    /// <summary>
    /// Identifies the shift of the cashier.
    /// </summary>
    public IsoMax2NumericText? ShiftNumber { get; init; } 
    /// <summary>
    /// Identification of the purchase order.
    /// </summary>
    public IsoMax35Text? PurchaseOrderNumber { get; init; } 
    /// <summary>
    /// Identification of the invoice.
    /// </summary>
    public IsoMax35Text? InvoiceNumber { get; init; } 
    /// <summary>
    /// Identification allocated by the sale system and given to the customer.
    /// </summary>
    public IsoMax35Text? DeliveryNoteNumber { get; init; } 
    /// <summary>
    /// Merchant using the payment services of a payment facilitator, acting as a card acceptor.
    /// </summary>
    public Organisation26? SponsoredMerchant { get; init;  } // Warning: Don't know multiplicity.
    /// <summary>
    /// True if the payment transaction is a partial payment of the sale transaction.
    /// </summary>
    public IsoTrueFalseIndicator? SplitPayment { get; init; } 
    /// <summary>
    /// Remaining amount to complete the sale transaction, if a partial payment has been completed for the sale transaction.
    /// </summary>
    public IsoImpliedCurrencyAndAmount? RemainingAmount { get; init; } 
    /// <summary>
    /// Additional information associated with the sale transaction.
    /// </summary>
    public IsoMax70Text? AdditionalSaleData { get; init; } 
    
    #nullable disable
}
