//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for SecuritiesInstrumentClassification2.  ISO2002 ID# _NHRMYX5xEeasY4u9QTizPQ.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Details an individuation of the classification type of the financial instrument.
/// </summary>
public partial record SecuritiesInstrumentClassification2
     : IIsoXmlSerilizable<SecuritiesInstrumentClassification2>
{
    #nullable enable
    
    /// <summary>
    /// Identifier of the financial instrument classification type code.
    /// </summary>
    public required IsoCFIOct2015Identifier Identifier { get; init; } 
    /// <summary>
    /// Modification status for the record compared to the previous report.
    /// </summary>
    public Modification1Code? Modification { get; init; } 
    /// <summary>
    /// Details the validity of the specific record.
    /// Usage:
    /// Within MiFIR, the FromDate is populated while the instrument is valid. From Date To Date is only populated when the record is being invalidated.
    /// </summary>
    public required Period4Choice_ ValidityPeriod { get; init; } 
    /// <summary>
    /// Date when this record was last modified.
    /// </summary>
    public IsoISODate? LastUpdated { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Idr", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoCFIOct2015Identifier(Identifier)); // data type CFIOct2015Identifier System.String
        writer.WriteEndElement();
        if (Modification is Modification1Code ModificationValue)
        {
            writer.WriteStartElement(null, "Mod", xmlNamespace );
            writer.WriteValue(ModificationValue.ToString()); // Enum value
            writer.WriteEndElement();
        }
        writer.WriteStartElement(null, "VldtyPrd", xmlNamespace );
        ValidityPeriod.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (LastUpdated is IsoISODate LastUpdatedValue)
        {
            writer.WriteStartElement(null, "LastUpdtd", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoISODate(LastUpdatedValue)); // data type ISODate System.DateOnly
            writer.WriteEndElement();
        }
    }
    public static SecuritiesInstrumentClassification2 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
