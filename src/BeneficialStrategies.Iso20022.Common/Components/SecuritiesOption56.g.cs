//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for SecuritiesOption56.  ISO2002 ID# _ctfP95KQEeWHWpTQn1FFVg.
//

using BeneficialStrategies.Iso20022.Choices;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Specifies the security option of a corporate event.
/// </summary>
public partial record SecuritiesOption56
{
    #nullable enable
    
    /// <summary>
    /// Maximum quantity of financial instrument that may be instructed.
    /// </summary>
    public IFinancialInstrumentQuantity21Choice? MaximumQuantityToInstruct { get; init; } 
    /// <summary>
    /// Minimum quantity of financial instrument that may be instructed.
    /// </summary>
    public IFinancialInstrumentQuantity21Choice? MinimumQuantityToInstruct { get; init; } 
    /// <summary>
    /// Minimum multiple quantity of financial instrument that may be instructed.
    /// </summary>
    public IFinancialInstrumentQuantity22Choice? MinimumMultipleQuantityToInstruct { get; init; } 
    /// <summary>
    /// Quantity of equity that makes up the new board lot.
    /// </summary>
    public IFinancialInstrumentQuantity22Choice? NewBoardLotQuantity { get; init; } 
    /// <summary>
    /// New denomination of the equity following, for example, an increase or decrease in nominal value.
    /// </summary>
    public IFinancialInstrumentQuantity22Choice? NewDenominationQuantity { get; init; } 
    /// <summary>
    /// Specifies that if an order is prorated holders of odd lots who tender their full position will not have tendered position prorated but rather accepted in full.
    /// </summary>
    public IFinancialInstrumentQuantity22Choice? FrontEndOddLotQuantity { get; init; } 
    /// <summary>
    /// Represents the presence of a back end odd lot provision and the quantity of equity required after proration to be eligible for this privilege.
    /// </summary>
    public IFinancialInstrumentQuantity22Choice? BackEndOddLotQuantity { get; init; } 
    
    #nullable disable
}
