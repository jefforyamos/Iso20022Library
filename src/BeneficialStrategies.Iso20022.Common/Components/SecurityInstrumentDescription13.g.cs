//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for SecurityInstrumentDescription13.  ISO2002 ID# _KUIpdYG-EeaalK9UbuVGFw.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Identifies the security instrument by its name and typical characteristics.
/// </summary>
public partial record SecurityInstrumentDescription13
     : IIsoXmlSerilizable<SecurityInstrumentDescription13>
{
    #nullable enable
    
    /// <summary>
    /// Attributes and characteristics of the financial instrument.
    /// </summary>
    public required SecurityInstrumentDescription11 FinancialInstrumentGeneralAttributes { get; init; } 
    /// <summary>
    /// Attributes specific to debt instruments.
    /// </summary>
    public DebtInstrument4? DebtInstrumentAttributes { get; init; } 
    /// <summary>
    /// Attributes specific to derivative instruments.
    /// </summary>
    public required DerivativeInstrument6 DerivativeInstrumentAttributes { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "FinInstrmGnlAttrbts", xmlNamespace );
        FinancialInstrumentGeneralAttributes.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (DebtInstrumentAttributes is DebtInstrument4 DebtInstrumentAttributesValue)
        {
            writer.WriteStartElement(null, "DebtInstrmAttrbts", xmlNamespace );
            DebtInstrumentAttributesValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        writer.WriteStartElement(null, "DerivInstrmAttrbts", xmlNamespace );
        DerivativeInstrumentAttributes.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
    }
    public static SecurityInstrumentDescription13 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
