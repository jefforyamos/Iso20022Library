//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for SecurityMovement1.  ISO2002 ID# _UIO-tNp-Ed-ak6NoX_4Aeg_1695017809.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Provides information about the securities movement.
/// </summary>
public partial record SecurityMovement1
     : IIsoXmlSerilizable<SecurityMovement1>
{
    #nullable enable
    
    /// <summary>
    /// Identification of the movement.
    /// </summary>
    public IsoMax35Text? MovementIdentification { get; init; } 
    /// <summary>
    /// Identification of the financial instrument.
    /// </summary>
    public required SecurityIdentification7 SecurityIdentification { get; init; } 
    /// <summary>
    /// Quantitty of financial instrument.
    /// </summary>
    public required UnitOrFaceAmount1Choice_ SecuritiesQuantity { get; init; } 
    /// <summary>
    /// Provides information about the account which is debited/credited.
    /// </summary>
    public ValueList<SecuritiesAccount12> AccountDetails { get; init; } = [];
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (MovementIdentification is IsoMax35Text MovementIdentificationValue)
        {
            writer.WriteStartElement(null, "MvmntId", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(MovementIdentificationValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
        writer.WriteStartElement(null, "SctyId", xmlNamespace );
        SecurityIdentification.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "SctiesQty", xmlNamespace );
        SecuritiesQuantity.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "AcctDtls", xmlNamespace );
        AccountDetails.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
    }
    public static SecurityMovement1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
