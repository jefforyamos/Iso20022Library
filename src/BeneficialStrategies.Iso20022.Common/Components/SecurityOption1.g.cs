//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for SecurityOption1.  ISO2002 ID# _UHVm2dp-Ed-ak6NoX_4Aeg_-583360205.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Provides information about the CA security option.
/// </summary>
[DataContract]
[XmlType]
public partial record SecurityOption1
{
    #nullable enable
    
    /// <summary>
    /// Identification of the financial instrument.
    /// </summary>
    [DataMember]
    public required FinancialInstrumentDescription3 SecurityIdentification { get; init; } 
    /// <summary>
    /// Specifies whether the value is a debit or credit.
    /// </summary>
    [DataMember]
    public required CreditDebitCode CreditDebitIndicator { get; init; } 
    /// <summary>
    /// Quantity of financial instrument.
    /// </summary>
    [DataMember]
    public UnitOrFaceAmount1Choice_? SecuritiesQuantity { get; init; } 
    /// <summary>
    /// Minimum quantity of financial instrument or lot of rights/warrants that must be exercised.
    /// </summary>
    [DataMember]
    public UnitOrFaceAmount1Choice_? MinimumExercisableSecuritiesQuantity { get; init; } 
    /// <summary>
    /// Minimum multiple quantity of financial instrument or lot of rights/warrants that must be exercised.
    /// </summary>
    [DataMember]
    public UnitOrFaceAmount1Choice_? MinimumExercisableMultipleSecuritiesQuantity { get; init; } 
    /// <summary>
    /// New denomination of the financial instrument following, eg, an increase or decrease in nominal value.
    /// </summary>
    [DataMember]
    public UnitOrFaceAmount1Choice_? NewDenominationSecuritiesQuantity { get; init; } 
    /// <summary>
    /// Quantity of equity that makes up the new board lot.
    /// </summary>
    [DataMember]
    public UnitOrFaceAmount1Choice_? NewBoardLotSecuritiesQuantity { get; init; } 
    /// <summary>
    /// Specifies whether the shares are ranking for dividend or pari passu.
    /// </summary>
    [DataMember]
    public ShareRanking1FormatChoice_? ShareRanking { get; init; } 
    /// <summary>
    /// Quantity of additional intermediate securities/new equities awarded for a given quantity of securities derived from subscription.
    /// </summary>
    [DataMember]
    public QuantityToQuantityRatio1? AdditionalQuantityForSubscribedResultantSecurities { get; init; } 
    /// <summary>
    /// Provides information about the dates related to a securities movement.
    /// </summary>
    [DataMember]
    public CorporateActionDate3? DateDetails { get; init; } 
    /// <summary>
    /// Provides information about the prices related to a securities movement.
    /// </summary>
    [DataMember]
    public CorporateActionPrice4? PriceDetails { get; init; } 
    /// <summary>
    /// Period during which intermediate securities are tradable in a secondary market.
    /// </summary>
    [DataMember]
    public Period1? TradingPeriod { get; init; } 
    /// <summary>
    /// Quantity of additional securities for a given quantity of underlying securities where underlying securities are not exchanged or debited, eg, 1 for 1: 1 new equity credited for every 1 underlying equity = 2 resulting equities.
    /// </summary>
    [DataMember]
    public QuantityToQuantityRatio1? AdditionalQuantityForExistingSecurities { get; init; } 
    /// <summary>
    /// Specifies that the security is a temporary security.
    /// </summary>
    [DataMember]
    public IsoYesNoIndicator? TemporaryFinancialInstrumentIndicator { get; init; } 
    /// <summary>
    /// Specifies how fractions resulting from derived securities will be processed or how prorated decisions will be rounding, if provided with a pro ration rate.
    /// </summary>
    [DataMember]
    public FractionDispositionType1FormatChoice_? FractionDisposition { get; init; } 
    
    #nullable disable
}
