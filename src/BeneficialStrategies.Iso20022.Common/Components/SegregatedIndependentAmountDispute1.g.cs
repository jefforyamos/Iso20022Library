//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for SegregatedIndependentAmountDispute1.  ISO2002 ID# _Ulb4E9p-Ed-ak6NoX_4Aeg_1239056055.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Provides for the segregated independent amount, the dispute details like the dispute amount or the dispute date and the resolution type details.
/// </summary>
public partial record SegregatedIndependentAmountDispute1
     : IIsoXmlSerilizable<SegregatedIndependentAmountDispute1>
{
    #nullable enable
    
    /// <summary>
    /// Details of the disputed instruction.
    /// </summary>
    public required Dispute1 DisputeDetails { get; init; } 
    /// <summary>
    /// Specifies the type of dispute that is to be resolved regarding the disputed collateral amount.
    /// </summary>
    public DisputeResolutionType1Choice_? DisputeResolutionType1Choice { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "DsptDtls", xmlNamespace );
        DisputeDetails.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (DisputeResolutionType1Choice is DisputeResolutionType1Choice_ DisputeResolutionType1ChoiceValue)
        {
            writer.WriteStartElement(null, "DsptRsltnTp1Chc", xmlNamespace );
            DisputeResolutionType1ChoiceValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static SegregatedIndependentAmountDispute1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
