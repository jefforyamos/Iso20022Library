//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for ServiceAvailability1.  ISO2002 ID# _bU4edtEWEeWfZsLg1wugTw.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Provides details on the availability of a service.
/// </summary>
public partial record ServiceAvailability1
     : IIsoXmlSerilizable<ServiceAvailability1>
{
    #nullable enable
    
    /// <summary>
    /// Specifies the applicable business service.
    /// </summary>
    public IsoMax35Text? BusinessService { get; init; } 
    /// <summary>
    /// Status of service availability.
    /// </summary>
    public required SystemEventType3Choice_ AvailabilityStatus { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (BusinessService is IsoMax35Text BusinessServiceValue)
        {
            writer.WriteStartElement(null, "BizSvc", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(BusinessServiceValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
        writer.WriteStartElement(null, "AvlbtySts", xmlNamespace );
        AvailabilityStatus.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
    }
    public static ServiceAvailability1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
