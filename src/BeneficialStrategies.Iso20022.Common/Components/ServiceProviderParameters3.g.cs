//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for ServiceProviderParameters3.  ISO2002 ID# _NI6SUXISEe2OqYulmHWukQ.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Service provider parameters of the point of interaction (POI).
/// </summary>
public partial record ServiceProviderParameters3
     : IIsoXmlSerilizable<ServiceProviderParameters3>
{
    #nullable enable
    
    /// <summary>
    /// Type of action for the configuration parameters.
    /// </summary>
    public required TerminalManagementAction3Code ActionType { get; init; } 
    /// <summary>
    /// Identification of the service provider.
    /// </summary>
    public GenericIdentification176? ServiceProviderIdentification { get; init;  } // Warning: Don't know multiplicity.
    // ID for the above is _NPs203ISEe2OqYulmHWukQ
    /// <summary>
    /// Version of the service provider parameters.
    /// </summary>
    public required IsoMax256Text Version { get; init; } 
    /// <summary>
    /// Identification of payment application relevant for this service provider.
    /// </summary>
    public IsoMax35Text? ApplicationIdentification { get; init; } 
    /// <summary>
    /// Service provider host configuration.
    /// </summary>
    public AcquirerHostConfiguration9? Host { get; init; } 
    /// <summary>
    /// Identification of non financial action supported by the Service Provider.
    /// </summary>
    public NonFinancialRequestType2Code? NonFinancialActionSupported { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "ActnTp", xmlNamespace );
        writer.WriteValue(ActionType.ToString()); // Enum value
        writer.WriteEndElement();
        // Not sure how to serialize ServiceProviderIdentification, multiplicity Unknown
        writer.WriteStartElement(null, "Vrsn", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax256Text(Version)); // data type Max256Text System.String
        writer.WriteEndElement();
        if (ApplicationIdentification is IsoMax35Text ApplicationIdentificationValue)
        {
            writer.WriteStartElement(null, "ApplId", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(ApplicationIdentificationValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
        if (Host is AcquirerHostConfiguration9 HostValue)
        {
            writer.WriteStartElement(null, "Hst", xmlNamespace );
            HostValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (NonFinancialActionSupported is NonFinancialRequestType2Code NonFinancialActionSupportedValue)
        {
            writer.WriteStartElement(null, "NonFinActnSpprtd", xmlNamespace );
            writer.WriteValue(NonFinancialActionSupportedValue.ToString()); // Enum value
            writer.WriteEndElement();
        }
    }
    public static ServiceProviderParameters3 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
