//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for SpecificInstructionRequest4.  ISO2002 ID# _XuYKlRrlEeyhRdHRjakS2w.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Voting participation method at a general meeting.
/// </summary>
public partial record SpecificInstructionRequest4
     : IIsoXmlSerilizable<SpecificInstructionRequest4>
{
    #nullable enable
    
    /// <summary>
    /// Method of voting participation to the general meeting.
    /// </summary>
    public ParticipationMethod3Choice_? ParticipationMethod { get; init; } 
    /// <summary>
    /// Indicates a request to register the securities for the meeting.
    /// </summary>
    public IsoYesNoIndicator? SecuritiesRegistration { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (ParticipationMethod is ParticipationMethod3Choice_ ParticipationMethodValue)
        {
            writer.WriteStartElement(null, "PrtcptnMtd", xmlNamespace );
            ParticipationMethodValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (SecuritiesRegistration is IsoYesNoIndicator SecuritiesRegistrationValue)
        {
            writer.WriteStartElement(null, "SctiesRegn", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoYesNoIndicator(SecuritiesRegistrationValue)); // data type YesNoIndicator System.String
            writer.WriteEndElement();
        }
    }
    public static SpecificInstructionRequest4 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
