//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for SplitTradeDetails3.  ISO2002 ID# _Li4wUaAiEea9x5aZm6UTkw.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Information describing the high level details of a split trade.
/// </summary>
public partial record SplitTradeDetails3
     : IIsoXmlSerilizable<SplitTradeDetails3>
{
    #nullable enable
    
    /// <summary>
    /// Provides information on the status of a foreign exchange trade in the system.
    /// </summary>
    public TradeData16? StatusDetails { get; init; } 
    /// <summary>
    /// Amounts of the foreign exchange trade.
    /// </summary>
    public required AmountsAndValueDate1 TradeAmounts { get; init; } 
    /// <summary>
    /// Exchange rate as agreed by the traders.
    /// </summary>
    public AgreedRate3? AgreedRate { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (StatusDetails is TradeData16 StatusDetailsValue)
        {
            writer.WriteStartElement(null, "StsDtls", xmlNamespace );
            StatusDetailsValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        writer.WriteStartElement(null, "TradAmts", xmlNamespace );
        TradeAmounts.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (AgreedRate is AgreedRate3 AgreedRateValue)
        {
            writer.WriteStartElement(null, "AgrdRate", xmlNamespace );
            AgreedRateValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static SplitTradeDetails3 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
