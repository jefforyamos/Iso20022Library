//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for SpreadRate1.  ISO2002 ID# _Q-niYtp-Ed-ak6NoX_4Aeg_-1715964179.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Margin over or under an index that determines the repurchase rate expressed as a rate or an amount.
/// </summary>
public partial record SpreadRate1
     : IIsoXmlSerilizable<SpreadRate1>
{
    #nullable enable
    
    /// <summary>
    /// Specifies the sign of the rate.
    /// </summary>
    public required IsoPlusOrMinusIndicator Sign { get; init; } 
    /// <summary>
    /// Specifies if the spreadf is expressed as an amount or a rate.
    /// </summary>
    public required AmountOrRate1Choice_ RateOrAmount { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Sgn", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoPlusOrMinusIndicator(Sign)); // data type PlusOrMinusIndicator System.String
        writer.WriteEndElement();
        writer.WriteStartElement(null, "RateOrAmt", xmlNamespace );
        RateOrAmount.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
    }
    public static SpreadRate1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
