//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for Statement47.  ISO2002 ID# _wW8KkUKNEeW5mJpUa0D_fg.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// General characteristics related to a statement which reports information.
/// </summary>
[DataContract]
[XmlType]
public partial record Statement47
{
    #nullable enable
    
    /// <summary>
    /// Indicates whether the statement contains missing instructions only or all instructions.
    /// </summary>
    [DataMember]
    public required CorporateActionStatementType1Code StatementType { get; init; } 
    /// <summary>
    /// Indicates whether the statement report on account holdings for corporate action events is for single account/multiple events or multiple accounts/single event.
    /// </summary>
    [DataMember]
    public required CorporateActionStatementReportingType1Code ReportingType { get; init; } 
    /// <summary>
    /// Reference of the statement.
    /// </summary>
    [DataMember]
    public required IsoMax35Text StatementIdentification { get; init; } 
    /// <summary>
    /// Sequential number of the statement.
    /// </summary>
    [DataMember]
    public IsoMax5NumericText? ReportNumber { get; init; } 
    /// <summary>
    /// Date of the statement.
    /// </summary>
    [DataMember]
    public required DateAndDateTimeChoice_ StatementDateTime { get; init; } 
    /// <summary>
    /// Frequency of the statement.
    /// </summary>
    [DataMember]
    public required Frequency25Choice_ Frequency { get; init; } 
    /// <summary>
    /// Indicates whether the report is complete or contains changes only.
    /// </summary>
    [DataMember]
    public required UpdateType15Choice_ UpdateType { get; init; } 
    /// <summary>
    /// Indicates whether there is activity or information update reported in the statement.
    /// </summary>
    [DataMember]
    public required IsoYesNoIndicator ActivityIndicator { get; init; } 
    /// <summary>
    /// Period during which identification deadline has been set.
    /// </summary>
    [DataMember]
    public DateOrDateTimePeriodChoice_? NotificationDeadlinePeriod { get; init; } 
    
    #nullable disable
}
