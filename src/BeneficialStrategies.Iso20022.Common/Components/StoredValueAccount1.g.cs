//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for StoredValueAccount1.  ISO2002 ID# _QMJNsNtcEeipuvJHTHIw9A.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Identification of the stored value account or the stored value card (Prepaid card).
/// </summary>
public partial record StoredValueAccount1
{
    #nullable enable
    
    /// <summary>
    /// Type of stored value account.
    /// </summary>
    public StoredValueAccountType1Code? AccountType { get; init; } 
    /// <summary>
    /// Type of identification for this Stored Value Account.
    /// </summary>
    public CardIdentificationType1Code? IdentificationType { get; init; } 
    /// <summary>
    /// Identification of Stored Value Account.
    /// </summary>
    public IsoMax35Text? Identification { get; init; } 
    /// <summary>
    /// Brand to which belong the account.
    /// </summary>
    public IsoMax35Text? Brand { get; init; } 
    /// <summary>
    /// Provider of the Stored Value Account.
    /// </summary>
    public IsoMax35Text? Provider { get; init; } 
    /// <summary>
    /// Owner name of an account.
    /// </summary>
    public IsoMax45Text? OwnerName { get; init; } 
    /// <summary>
    /// Expiry date of the account of card.
    /// </summary>
    public IsoMax10Text? ExpiryDate { get; init; } 
    /// <summary>
    /// Standard or last entry mode to access the Stored Value account or card.
    /// </summary>
    public CardDataReading6Code? EntryMode { get; init; } 
    /// <summary>
    /// Currency of the Stored Value account.
    /// </summary>
    public ActiveCurrencyCode? Currency { get; init; } 
    /// <summary>
    /// Current balance of the Stored Value account.
    /// </summary>
    public IsoImpliedCurrencyAndAmount? Balance { get; init; } 
    
    #nullable disable
}
