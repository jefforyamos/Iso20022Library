//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for StoredValueRequest5.  ISO2002 ID# _UzMk8U4AEey_VecAUE-C9Q.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Data to request a Stored Value service (Prepaid card or account).
/// </summary>
public partial record StoredValueRequest5
     : IIsoXmlSerilizable<StoredValueRequest5>
{
    #nullable enable
    
    /// <summary>
    /// Sale System identification of the transaction in an unambiguous way.
    /// </summary>
    public TransactionIdentifier1? SaleTransactionIdentification { get; init; } 
    /// <summary>
    /// Data related to the stored value card.
    /// </summary>
    public StoredValueData5? Data { get; init;  } // Warning: Don't know multiplicity.
    // ID for the above is _U5bv0U4AEey_VecAUE-C9Q
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (SaleTransactionIdentification is TransactionIdentifier1 SaleTransactionIdentificationValue)
        {
            writer.WriteStartElement(null, "SaleTxId", xmlNamespace );
            SaleTransactionIdentificationValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        // Not sure how to serialize Data, multiplicity Unknown
    }
    public static StoredValueRequest5 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
