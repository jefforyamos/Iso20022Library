//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for StoredValueResponse2.  ISO2002 ID# _FW05gYYMEemxIqbaFEE8-w.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Response data to a Stored Value request.
/// </summary>
public partial record StoredValueResponse2
     : IIsoXmlSerilizable<StoredValueResponse2>
{
    #nullable enable
    
    /// <summary>
    /// Unique identification of a POI transaction.
    /// </summary>
    public required TransactionIdentifier1 POITransactionIdentification { get; init; } 
    /// <summary>
    /// Result of loading/reloading a stored value card.
    /// </summary>
    public StoredValueData2? Result { get; init; } 
    /// <summary>
    /// Customer or Merchant payment receipt.
    /// </summary>
    public PaymentReceipt1? Receipt { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "POITxId", xmlNamespace );
        POITransactionIdentification.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (Result is StoredValueData2 ResultValue)
        {
            writer.WriteStartElement(null, "Rslt", xmlNamespace );
            ResultValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (Receipt is PaymentReceipt1 ReceiptValue)
        {
            writer.WriteStartElement(null, "Rct", xmlNamespace );
            ReceiptValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static StoredValueResponse2 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
