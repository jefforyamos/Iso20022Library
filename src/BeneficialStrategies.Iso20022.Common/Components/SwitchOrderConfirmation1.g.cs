//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for SwitchOrderConfirmation1.  ISO2002 ID# _RNqrBtp-Ed-ak6NoX_4Aeg_1790539148.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Switch order confirmation details.
/// </summary>
public partial record SwitchOrderConfirmation1
     : IIsoXmlSerilizable<SwitchOrderConfirmation1>
{
    #nullable enable
    
    /// <summary>
    /// Indicates whether a confirmation amendment message will follow the confirmation cancellation instruction or not.
    /// </summary>
    public required IsoYesNoIndicator AmendmentIndicator { get; init; } 
    /// <summary>
    /// Information related to a switch execution.
    /// </summary>
    public SwitchExecution4? SwitchExecutionDetails { get; init;  } // Warning: Don't know multiplicity.
    // ID for the above is _RNqrCNp-Ed-ak6NoX_4Aeg_1791463151
    /// <summary>
    /// Additional information that cannot be captured in the structured elements and/or any other specific block.
    /// </summary>
    public Extension1? Extension { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "AmdmntInd", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoYesNoIndicator(AmendmentIndicator)); // data type YesNoIndicator System.String
        writer.WriteEndElement();
        // Not sure how to serialize SwitchExecutionDetails, multiplicity Unknown
        if (Extension is Extension1 ExtensionValue)
        {
            writer.WriteStartElement(null, "Xtnsn", xmlNamespace );
            ExtensionValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static SwitchOrderConfirmation1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
