//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for SystemPartyIdentification2.  ISO2002 ID# _knFb9e5NEeCisYr99QEiWA_164286854.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Unique identification to unambiguously identify the party within the system.
/// </summary>
public partial record SystemPartyIdentification2
     : IIsoXmlSerilizable<SystemPartyIdentification2>
{
    #nullable enable
    
    /// <summary>
    /// Starting date from which the identification is valid.
    /// </summary>
    public required IsoISODate ValidFrom { get; init; } 
    /// <summary>
    /// Unique and unambiguous way to identify a system party.
    /// </summary>
    public IsoBICFIIdentifier? Identification { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "VldFr", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoISODate(ValidFrom)); // data type ISODate System.DateOnly
        writer.WriteEndElement();
        if (Identification is IsoBICFIIdentifier IdentificationValue)
        {
            writer.WriteStartElement(null, "Id", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoBICFIIdentifier(IdentificationValue)); // data type BICFIIdentifier System.String
            writer.WriteEndElement();
        }
    }
    public static SystemPartyIdentification2 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
