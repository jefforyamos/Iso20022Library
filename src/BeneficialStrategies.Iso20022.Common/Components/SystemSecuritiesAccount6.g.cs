//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for SystemSecuritiesAccount6.  ISO2002 ID# _yNtKNTp1Eemk2e6qGBk8IQ.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Specifies the account within a system to or from which a securities entry is made. It holds information generic or market specific attributes such as opening or closing date, and defines the default setting for the  holding of settlement instructions involving positions related to the account.
/// </summary>
[DataContract]
[XmlType]
public partial record SystemSecuritiesAccount6
{
    #nullable enable
    
    /// <summary>
    /// Legal opening date of the securities account.
    /// </summary>
    [DataMember]
    public IsoISODate? OpeningDate { get; init; } 
    /// <summary>
    /// Legal closing date of the securities account.
    /// </summary>
    [DataMember]
    public IsoISODate? ClosingDate { get; init; } 
    /// <summary>
    /// Indicates whether the securities account is on hold or not.
    /// Usage:
    /// - Meaning when true: account is in hold status.
    /// - Meaning when false: account is in release status.
    /// </summary>
    [DataMember]
    public IsoTrueFalseIndicator? HoldIndicator { get; init; } 
    /// <summary>
    /// Indicates whether the securities account can hold a negative position in a security or not.
    /// </summary>
    [DataMember]
    public IsoTrueFalseIndicator? NegativePosition { get; init; } 
    /// <summary>
    /// Specifies the type of the securities account.
    /// </summary>
    [DataMember]
    public SystemSecuritiesAccountType1Choice_? Type { get; init; } 
    /// <summary>
    /// Party that legally owns the account.
    /// </summary>
    [DataMember]
    public required SystemPartyIdentification8 AccountOwner { get; init; } 
    /// <summary>
    /// Specifies the type of party owning the account.
    /// </summary>
    [DataMember]
    public SystemPartyType1Choice_? PartyType { get; init; } 
    /// <summary>
    /// Additional attributes defined by a central security depositary for a securities account.
    /// </summary>
    [DataMember]
    public ValueList<MarketSpecificAttribute1> MarketSpecificAttribute { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Defines the specific processing characteristics for a securities account to ensure configurability of specific requirements, as prescribed by national legal and regulatory requirements and practices.
    /// </summary>
    [DataMember]
    public ValueList<SystemRestriction1> Restriction { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Specifies information to identify securities accounts where allocation instructions are posted.
    /// </summary>
    [DataMember]
    public IsoExact4AlphaNumericText? EndInvestorFlag { get; init; } 
    /// <summary>
    /// Defines how the price is applied to the securities account.
    /// </summary>
    [DataMember]
    public IsoExact4AlphaNumericText? PricingScheme { get; init; } 
    
    #nullable disable
}
