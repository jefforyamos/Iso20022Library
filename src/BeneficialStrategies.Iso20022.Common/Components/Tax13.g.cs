//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for Tax13.  ISO2002 ID# _RvpWsNp-Ed-ak6NoX_4Aeg_-681693938.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Amount of money due to the government or tax authority, according to various pre-defined parameters such as thresholds or income.
/// </summary>
public partial record Tax13
     : IIsoXmlSerilizable<Tax13>
{
    #nullable enable
    
    /// <summary>
    /// Type of tax applied.
    /// </summary>
    public required TaxType9Code Type { get; init; } 
    /// <summary>
    /// Specifies types of tax not present in a code list.
    /// </summary>
    public required IsoMax35Text OtherTaxType { get; init; } 
    /// <summary>
    /// Amount of money resulting from the calculation of the tax.
    /// </summary>
    public required IsoCurrencyAndAmount Amount { get; init; } 
    /// <summary>
    /// Rate used to calculate the tax.
    /// </summary>
    public required IsoPercentageRate Rate { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Tp", xmlNamespace );
        writer.WriteValue(Type.ToString()); // Enum value
        writer.WriteEndElement();
        writer.WriteStartElement(null, "OthrTaxTp", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax35Text(OtherTaxType)); // data type Max35Text System.String
        writer.WriteEndElement();
        writer.WriteStartElement(null, "Amt", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoCurrencyAndAmount(Amount)); // data type CurrencyAndAmount System.Decimal
        writer.WriteEndElement();
        writer.WriteStartElement(null, "Rate", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoPercentageRate(Rate)); // data type PercentageRate System.Decimal
        writer.WriteEndElement();
    }
    public static Tax13 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
