//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for TaxDetails.  ISO2002 ID# _RvWbwNp-Ed-ak6NoX_4Aeg_-1792079217.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Set of characteristics defining the type of tax.
/// </summary>
public partial record TaxDetails
     : IIsoXmlSerilizable<TaxDetails>
{
    #nullable enable
    
    /// <summary>
    /// Document issued by first agent on behalf of debtor to report withholding tax to taxing authority.
    /// </summary>
    public IsoMax35Text? CertificateIdentification { get; init; } 
    /// <summary>
    /// Information on the type of tax.
    /// </summary>
    public TaxType? TaxType { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (CertificateIdentification is IsoMax35Text CertificateIdentificationValue)
        {
            writer.WriteStartElement(null, "CertId", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(CertificateIdentificationValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
        if (TaxType is TaxType TaxTypeValue)
        {
            writer.WriteStartElement(null, "TaxTp", xmlNamespace );
            TaxTypeValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static TaxDetails Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
