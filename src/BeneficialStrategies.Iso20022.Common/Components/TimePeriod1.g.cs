//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for TimePeriod1.  ISO2002 ID# __QUJoZliEeeE1Ya-LgRsuQ.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Particular time span specified between a start time and an end time. The time period cannot exceed 24 hours.
/// </summary>
public partial record TimePeriod1
     : IIsoXmlSerilizable<TimePeriod1>
{
    #nullable enable
    
    /// <summary>
    /// Time at which the time span starts.
    /// </summary>
    public required IsoISOTime FromTime { get; init; } 
    /// <summary>
    /// Time at which the time span ends.
    /// </summary>
    public required IsoISOTime ToTime { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "FrTm", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoISOTime(FromTime)); // data type ISOTime System.TimeOnly
        writer.WriteEndElement();
        writer.WriteStartElement(null, "ToTm", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoISOTime(ToTime)); // data type ISOTime System.TimeOnly
        writer.WriteEndElement();
    }
    public static TimePeriod1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
