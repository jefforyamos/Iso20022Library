//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for TotalsPerBankTransactionCode3.  ISO2002 ID# _fajckSGyEeKjd4jizyIDGA.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Set of elements used to provide the total sum of entries per bank transaction code.
/// </summary>
public partial record TotalsPerBankTransactionCode3
{
    #nullable enable
    
    /// <summary>
    /// Number of individual entries for the bank transaction code.
    /// </summary>
    public IsoMax15NumericText? NumberOfEntries { get; init; } 
    /// <summary>
    /// Total of all individual entries included in the report.
    /// </summary>
    public IsoDecimalNumber? Sum { get; init; } 
    /// <summary>
    /// Total debit or credit amount that is the result of the netted amounts for all debit and credit entries per bank transaction code.
    /// </summary>
    public AmountAndDirection35? TotalNetEntry { get; init; } 
    /// <summary>
    /// Indicates whether the bank transaction code is related to booked or forecast items.
    /// </summary>
    public IsoTrueFalseIndicator? ForecastIndicator { get; init; } 
    /// <summary>
    /// Set of elements used to fully identify the type of underlying transaction resulting in an entry.
    /// </summary>
    public required BankTransactionCodeStructure4 BankTransactionCode { get; init; } 
    /// <summary>
    /// Set of elements used to indicate when the booked amount of money will become available, that is can be accessed and starts generating interest.
    /// </summary>
    public CashBalanceAvailability2? Availability { get; init;  } // Warning: Don't know multiplicity.
    
    #nullable disable
}
