//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for Traceability3.  ISO2002 ID# _rCd1QXrUEeSfJf8ETXpBxg.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Identification of partners involved in exchange from the merchant to the issuer, with the relative timestamp of their exchanges.
/// </summary>
public partial record Traceability3
     : IIsoXmlSerilizable<Traceability3>
{
    #nullable enable
    
    /// <summary>
    /// Identification of a partner of a message exchange.
    /// </summary>
    public required GenericIdentification74 RelayIdentification { get; init; } 
    /// <summary>
    /// Date and time of incoming data exchange for relaying or processing.
    /// </summary>
    public required IsoISODateTime TraceDateTimeIn { get; init; } 
    /// <summary>
    /// Date and time of the outgoing exchange for relaying or processing.
    /// </summary>
    public required IsoISODateTime TraceDateTimeOut { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "RlayId", xmlNamespace );
        RelayIdentification.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "TracDtTmIn", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoISODateTime(TraceDateTimeIn)); // data type ISODateTime System.DateTime
        writer.WriteEndElement();
        writer.WriteStartElement(null, "TracDtTmOut", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoISODateTime(TraceDateTimeOut)); // data type ISODateTime System.DateTime
        writer.WriteEndElement();
    }
    public static Traceability3 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
