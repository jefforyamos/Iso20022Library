//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for Trade2.  ISO2002 ID# _yDLnEA2IEeSwB74WgTbh4Q.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Details of the foreign exchange trade including spot\forward\NDF\swap that is confirmed.
/// </summary>
[DataContract]
[XmlType]
public partial record Trade2
{
    #nullable enable
    
    /// <summary>
    /// Unique reference identification assigned to the trade by the instructing party. This reference will be used throughout the trade life cycle to identify the particular trade.
    /// </summary>
    [DataMember]
    public required IsoMax35Text TradeIdentification { get; init; } 
    /// <summary>
    /// Specifies the date on which the trade was executed.
    /// </summary>
    [DataMember]
    public required IsoISODate TradeDate { get; init; } 
    /// <summary>
    /// Specifies the underlying product type.
    /// </summary>
    [DataMember]
    public required UnderlyingProductIdentifier1Code ForeignExchangeTradeProduct { get; init; } 
    /// <summary>
    /// Specifies the ISO code of the trade currency.
    /// </summary>
    [DataMember]
    public CurrencyCode? TradingCurrency { get; init; } 
    /// <summary>
    /// Settlement currency of the trade, agreed by both sides of the trade.
    /// </summary>
    [DataMember]
    public CurrencyCode? SettlementCurrency { get; init; } 
    /// <summary>
    /// Identifies the type of trading method.
    /// </summary>
    [DataMember]
    public TradingMethodType1Code? TradingMethod { get; init; } 
    /// <summary>
    /// Identifies the type of the trade mode.
    /// </summary>
    [DataMember]
    public required TradingModeType1Code TradingMode { get; init; } 
    /// <summary>
    /// Clearing method of the trade, agreed by both sides of the trade.
    /// </summary>
    [DataMember]
    public required ClearingMethod1Code ClearingMethod { get; init; } 
    /// <summary>
    /// Symbol of the trade.
    /// </summary>
    [DataMember]
    public IsoMax35Text? Symbol { get; init; } 
    /// <summary>
    /// Infrastructure where the trade confirmation will take place.
    /// </summary>
    [DataMember]
    public IsoAnyBICIdentifier? PlaceOfConfirmation { get; init; } 
    /// <summary>
    /// Provides details of the foreign exchange trade including Spot Forward and NDF.
    /// </summary>
    [DataMember]
    public Trade3? ForeignExchangeDetails { get; init; } 
    /// <summary>
    /// Provides details about each leg of the multileg instrument (foreign exchange swap).
    /// </summary>
    [DataMember]
    public ValueList<InstrumentLeg6> SwapLeg { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Identification of the treasury trade product, as assigned under a formal or proprietary identification scheme.
    /// </summary>
    [DataMember]
    public SecurityIdentification22Choice_? ProductIdentification { get; init; } 
    /// <summary>
    /// Some associated trade reference needs to be specified.
    /// </summary>
    [DataMember]
    public ValueList<IsoMax70Text> AssociatedTradeReference { get; init; } = []; // Warning: Don't know multiplicity.
    
    #nullable disable
}
