//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for Trade3.  ISO2002 ID# _IWV_wA2MEeSw7Op2IIeBeQ.
//

using BeneficialStrategies.Iso20022.Choices;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Details of the foreign exchange trade including Spot\Forward\NDF that is captured.
/// </summary>
public partial record Trade3
{
    #nullable enable
    
    /// <summary>
    /// Price of the execution of the trade.
    /// </summary>
    public required IsoActiveCurrencyAnd13DecimalAmount ExecutionPrice { get; init; } 
    /// <summary>
    /// Amount of trade in trading currency.
    /// </summary>
    public required IsoCurrencyAndAmount LastQuantity { get; init; } 
    /// <summary>
    /// Specifies the settlment period of the foreign exchange trade.
    /// </summary>
    public required SettlementDateCode SettlementType { get; init; } 
    /// <summary>
    /// Specifies the date on which the trade will be settled.
    /// </summary>
    public required IsoISODate SettlementDate { get; init; } 
    /// <summary>
    /// Specifies the valuation rate used for the trade.
    /// </summary>
    public required AgreedRate3 ValuationRate { get; init; } 
    /// <summary>
    /// Specifies the forward points of the trade if needed.
    /// </summary>
    public IsoDecimalNumber? ForwardPoints { get; init; } 
    /// <summary>
    /// Amount of trade in corresponding currency.
    /// </summary>
    public required IsoCurrencyAndAmount CalculatedCounterpartyCurrencyLastQuantity { get; init; } 
    /// <summary>
    /// Specifies the value date of spot transaction.
    /// </summary>
    public required IsoISODate ValueDate { get; init; } 
    /// <summary>
    /// Measurement of the amount of the trade values converted in the US dollars.
    /// </summary>
    public required IsoActiveCurrencyAndAmount RiskAmount { get; init; } 
    /// <summary>
    /// Security identification of the trade.
    /// </summary>
    public required SecurityIdentification18 SecurityIdentification { get; init; } 
    /// <summary>
    /// Specifies the ISO code of the fixing currency.
    /// </summary>
    public CurrencyCode? FixingCurrency { get; init; } 
    /// <summary>
    /// Date at which the rate determination is made in the NDF trade.
    /// </summary>
    public IsoISODate? FixingDate { get; init; } 
    /// <summary>
    /// Indicates whether the spot trade is produced by the option.
    /// </summary>
    public IsoYesNoIndicator? OptionIndicator { get; init; } 
    /// <summary>
    /// Indicate the trade whether it's exchange delta.
    /// </summary>
    public IsoYesNoIndicator? DeltaIndicator { get; init; } 
    /// <summary>
    /// Some associated trade reference needs to be specified.
    /// </summary>
    public IsoMax70Text? AssociatedTradeReference { get; init;  } // Warning: Don't know multiplicity.
    
    #nullable disable
}
