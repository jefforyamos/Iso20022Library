//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for TradeAdditionalQueryCriteria9.  ISO2002 ID# __rPfEWTmEe2Qhbz5WMMCCA.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Query criteria regarding action type, product classification, venue of execution, asset class, corporate sector nature of counterparty.
/// </summary>
public partial record TradeAdditionalQueryCriteria9
{
    #nullable enable
    
    /// <summary>
    /// Code list of the action types allowed as query criteria.
    /// </summary>
    public TransactionOperationType8Code[] ActionType { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Indicates the execution venue of the reported transaction.
    /// </summary>
    public SecuritiesTradeVenueCriteria1Choice_? ExecutionVenue { get; init; } 
    /// <summary>
    /// Indicates the nature of the reporting counterparty (if is a CCP, a financial, non-financial counterparty or other type of counterparty).
    /// </summary>
    public PartyNatureType1Code? NatureOfCounterparty { get; init; } 
    /// <summary>
    /// Specifies the corporate sector of the reporting counterparty.
    /// </summary>
    public CorporateSectorCriteria6? CorporateSector { get; init; } 
    /// <summary>
    /// Code list of available values for asset class criteria.
    /// </summary>
    public ProductType4Code[] AssetClass { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Indicates the product classification of the reported transaction.
    /// </summary>
    public ProductClassificationCriteria1? ProductClassification { get; init; } 
    /// <summary>
    /// Information concerning the reported transaction level type.
    /// </summary>
    public ModificationLevel1Code? Level { get; init; } 
    /// <summary>
    /// Classification of derivative event type.
    /// </summary>
    public DerivativeEventType3Code[] EventType { get; init; } = []; // Warning: Don't know multiplicity.
    
    #nullable disable
}
