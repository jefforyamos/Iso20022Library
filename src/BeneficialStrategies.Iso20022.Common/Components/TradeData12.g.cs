//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for TradeData12.  ISO2002 ID# _7KIJAZR3Eeak6e8_Fc5fQg.
//

using BeneficialStrategies.Iso20022.Choices;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Provides information on the status of a trade.
/// </summary>
public partial record TradeData12
{
    #nullable enable
    
    /// <summary>
    /// Identification of the present message assigned by the party issuing the message. This identification must be unique amongst all messages of same type sent by the same party.
    /// </summary>
    public required IsoMax35Text MessageIdentification { get; init; } 
    /// <summary>
    /// Party that assigned the status to the foreign exchange trade.
    /// </summary>
    public IsoMax35Text? StatusOriginator { get; init; } 
    /// <summary>
    /// Specifies the new status of the trade.
    /// </summary>
    public required StatusAndSubStatus2 CurrentStatus { get; init; } 
    /// <summary>
    /// Additional information about the current status of the trade.
    /// </summary>
    public StatusSubType2Code? CurrentStatusSubType { get; init; } 
    /// <summary>
    /// Specifies the date and time at which the current status was assigned to all the trades, unless overwritten by a date and time assigned to an individual trade.
    /// </summary>
    public required IsoISODateTime CurrentStatusDateTime { get; init; } 
    /// <summary>
    /// Specifies the previous status of a trade.
    /// </summary>
    public IStatus28Choice? PreviousStatus { get; init; } 
    /// <summary>
    /// Additional information on the previous status of a trade in a central system.
    /// </summary>
    public StatusSubType2Code? PreviousStatusSubType { get; init; } 
    /// <summary>
    /// Specifies the product for which the status of the confirmation is reported, unless overwritten by a product type assigned to an individual trade.
    /// </summary>
    public IsoMax35Text? ProductType { get; init; } 
    /// <summary>
    /// To indicate the requested CLS settlement session that the related trade is part of.
    /// </summary>
    public IsoExact4AlphaNumericText? SettlementSessionIdentifier { get; init; } 
    /// <summary>
    /// The identification that links the quoted trades with a submitted Report issued by a central system.
    /// </summary>
    public IsoMax35Text? LinkedReportIdentification { get; init; } 
    
    #nullable disable
}
