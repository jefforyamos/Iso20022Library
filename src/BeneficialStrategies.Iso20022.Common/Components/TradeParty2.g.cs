//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for TradeParty2.  ISO2002 ID# _4NfCAdOdEeS75MhTUaTyUQ.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Specifies an entity involved in a trade activity.
/// </summary>
public partial record TradeParty2
     : IIsoXmlSerilizable<TradeParty2>
{
    #nullable enable
    
    /// <summary>
    /// Unique identification, as assigned by an organisation, to unambiguously identify a party.
    /// </summary>
    public required PartyIdentification77 PartyIdentification { get; init; } 
    /// <summary>
    /// Legally constituted organization specified for this trade party.
    /// </summary>
    public LegalOrganisation2? LegalOrganisation { get; init; } 
    /// <summary>
    /// Entity involved in an activity.
    /// </summary>
    public TaxParty3? TaxParty { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "PtyId", xmlNamespace );
        PartyIdentification.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (LegalOrganisation is LegalOrganisation2 LegalOrganisationValue)
        {
            writer.WriteStartElement(null, "LglOrg", xmlNamespace );
            LegalOrganisationValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (TaxParty is TaxParty3 TaxPartyValue)
        {
            writer.WriteStartElement(null, "TaxPty", xmlNamespace );
            TaxPartyValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static TradeParty2 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
