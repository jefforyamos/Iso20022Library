//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for TradeSettlement1.  ISO2002 ID# _TB-BBQEcEeCQm6a_G2yO_w_1181239925.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Trade settlement details for this invoice which involves the payment of an outstanding debt, account, or charge.
/// </summary>
[DataContract]
[XmlType]
public partial record TradeSettlement1
{
    #nullable enable
    
    /// <summary>
    /// Monetary value that is an exact amount due and payable, such as the amount due to the creditor.
    /// </summary>
    [DataMember]
    public ValueList<IsoCurrencyAndAmount> DuePayableAmount { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Unique and unambiguous reference assigned by the creditor.
    /// </summary>
    [DataMember]
    public ValueList<CreditorReferenceInformation2> CreditorReference { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Unique and unambiguous identifier for a payment transaction, as assigned by the originator. The payment transaction reference is used for reconciliation or to link tasks relating to the payment transaction.
    /// </summary>
    [DataMember]
    public ValueList<IsoMax35Text> PaymentReference { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Code specifying the currency of the invoice.
    /// </summary>
    [DataMember]
    public CurrencyCode? InvoiceCurrencyCode { get; init; } 
    /// <summary>
    /// Organization issuing the invoice.
    /// </summary>
    [DataMember]
    public TradeParty1? Invoicer { get; init; } 
    /// <summary>
    /// Party to whom the invoice was issued.
    /// </summary>
    [DataMember]
    public TradeParty1? Invoicee { get; init; } 
    /// <summary>
    /// Party specified to receive payment for the invoice.
    /// </summary>
    [DataMember]
    public TradeParty1? Payee { get; init; } 
    /// <summary>
    /// Party specified to initiate payment for the invoice.
    /// </summary>
    [DataMember]
    public TradeParty1? Payer { get; init; } 
    /// <summary>
    /// Currency exchange applicable to a tax.
    /// </summary>
    [DataMember]
    public CurrencyReference2? TaxCurrencyExchange { get; init; } 
    /// <summary>
    /// Currency exchange applicable to the invoice.
    /// </summary>
    [DataMember]
    public CurrencyReference2? InvoiceCurrencyExchange { get; init; } 
    /// <summary>
    /// Currency exchange applicable to the payment.
    /// </summary>
    [DataMember]
    public CurrencyReference2? PaymentCurrencyExchange { get; init; } 
    /// <summary>
    /// Means of payment (for example, credit transfer, cheque, money order, or credit card) specified to initiate payment of the invoice.
    /// </summary>
    [DataMember]
    public ValueList<PaymentMeans1> PaymentMeans { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Amount of money due to the government or tax authority, according to various pre-defined parameters such as thresholds or income.
    /// </summary>
    [DataMember]
    public ValueList<SettlementTax1> Tax { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Specifies the applicable billing period.
    /// </summary>
    [DataMember]
    public Period1? BillingPeriod { get; init; } 
    /// <summary>
    /// Allowance or charge specified.
    /// </summary>
    [DataMember]
    public ValueList<SettlementAllowanceCharge1> AllowanceCharge { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Tax subtotal calculated.
    /// </summary>
    [DataMember]
    public ValueList<SettlementSubTotalCalculatedTax1> SubTotalCalculatedTax { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Logistics service charge specified.
    /// </summary>
    [DataMember]
    public ValueList<ChargesDetails2> LogisticsCharge { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Payment terms.
    /// </summary>
    [DataMember]
    public ValueList<PaymentTerms3> PaymentTerms { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Monetary totals specified for the invoice.
    /// </summary>
    [DataMember]
    public required SettlementMonetarySummation1 MonetarySummation { get; init; } 
    /// <summary>
    /// Financial adjustment specified.
    /// </summary>
    [DataMember]
    public ValueList<DocumentAdjustment2> AdjustmentAmountAndReason { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Invoice document referenced.
    /// </summary>
    [DataMember]
    public DocumentIdentification22? InvoiceReferencedDocument { get; init; } 
    /// <summary>
    /// Pro-forma invoice document referenced.
    /// </summary>
    [DataMember]
    public DocumentIdentification22? ProformaInvoiceReferencedDocument { get; init; } 
    /// <summary>
    /// Letter of credit document referenced.
    /// </summary>
    [DataMember]
    public DocumentIdentification7? LetterOfCreditReferencedDocument { get; init; } 
    /// <summary>
    /// Financial card specified. The card is used to represent a financial account for the purpose of payment settlement.
    /// </summary>
    [DataMember]
    public ValueList<FinancialCard1> FinancialCard { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Specific purchase account for recording debits and credits for accounting purposes.
    /// </summary>
    [DataMember]
    public ValueList<AccountingAccount1> PurchaseAccountingAccount { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Factoring list document referenced.
    /// </summary>
    [DataMember]
    public ValueList<IsoMax35Text> IssuerFactoringListIdentification { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Factoring agreement document referenced.
    /// </summary>
    [DataMember]
    public ValueList<IsoMax35Text> IssuerFactoringAgreementIdentification { get; init; } = []; // Warning: Don't know multiplicity.
    
    #nullable disable
}
