//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for TradeSettlement2.  ISO2002 ID# _OFO6gVm5EeOQYsoJizpkVw.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Trade settlement details for this invoice which involves the payment of an outstanding debt, account, or charge.
/// </summary>
public partial record TradeSettlement2
{
    #nullable enable
    
    /// <summary>
    /// Payment or creditor reference.
    /// </summary>
    public CreditorReferenceInformation2? PaymentReference { get; init; } 
    /// <summary>
    /// Date when invoice should be paid.
    /// </summary>
    public IsoISODate? DueDate { get; init; } 
    /// <summary>
    /// Payable amount with currency code.
    /// </summary>
    public required IsoCurrencyAndAmount DuePayableAmount { get; init; } 
    /// <summary>
    /// If invoice currency is different from local tax reporting currency, then applied exchange rate is given in this message structure.
    /// </summary>
    public CurrencyReference3? InvoiceCurrencyExchange { get; init; } 
    /// <summary>
    /// Date when goods/services are delivered to buyer.
    /// </summary>
    public IsoISODate? DeliveryDate { get; init; } 
    /// <summary>
    /// Period during which delivery executed or agreed invoicing period.
    /// </summary>
    public Period2? BillingPeriod { get; init; } 
    /// <summary>
    /// Tax total amount with currency code.
    /// </summary>
    public required IsoCurrencyAndAmount TaxTotalAmount { get; init; } 
    /// <summary>
    /// Reason for tax exemption expressed as a code, if invoice or card transaction is out of tax processing.
    /// </summary>
    public IsoMax4Text? ExemptionReasonCode { get; init; } 
    /// <summary>
    /// Reason for a tax exemption, if invoice or card transaction is out of tax processing.
    /// </summary>
    public IsoMax500Text? ExemptionReason { get; init; } 
    /// <summary>
    /// Calculated tax subtotal.
    /// </summary>
    public SettlementSubTotalCalculatedTax2? SubTotalCalculatedTax { get; init;  } // Warning: Don't know multiplicity.
    /// <summary>
    /// Details of each early payment discount.
    /// </summary>
    public EarlyPayment1? EarlyPayments { get; init;  } // Warning: Don't know multiplicity.
    
    #nullable disable
}
