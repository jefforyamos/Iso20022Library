//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for Transaction103.  ISO2002 ID# _McaM0VaOEeeFltjJxERUxw.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Fee transaction type.
/// </summary>
[DataContract]
[XmlType]
public partial record Transaction103
{
    #nullable enable
    
    /// <summary>
    /// Type of transaction associated with the main service
    /// ISO 8583:87/93/2003 bit 3
    /// </summary>
    [DataMember]
    public required IsoExact2AlphaNumericText TransactionType { get; init; } 
    /// <summary>
    /// Provides further granularity of purpose of TransactionType
    /// </summary>
    [DataMember]
    public IsoMax35Text? TransactionSubType { get; init; } 
    /// <summary>
    /// Reason to send the message.
    /// ISO 8583:1993/2003 bit 25.
    /// The ISO 8583 maintenance agency (MA) manages this code list.
    /// </summary>
    [DataMember]
    public ValueList<IsoExact4NumericText> MessageReason { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Alternate message reason to send the message.
    /// </summary>
    [DataMember]
    public IsoMax35Text? AlternateMessageReason { get; init; } 
    /// <summary>
    /// Data to qualify for incentive or other related programmes.
    /// </summary>
    [DataMember]
    public ValueList<SpecialProgrammeQualification1> SpecialProgrammeQualification { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Identification of the transaction.
    /// </summary>
    [DataMember]
    public required TransactionIdentification13 TransactionIdentification { get; init; } 
    /// <summary>
    /// Amounts of the card transaction.
    /// </summary>
    [DataMember]
    public required TransactionAmounts1 TransactionAmounts { get; init; } 
    /// <summary>
    /// Amounts that are not part of the transaction amount and not included in reconciliation.
    /// ISO 8583 bit 54
    /// </summary>
    [DataMember]
    public ValueList<AdditionalAmounts1> AdditionalAmounts { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Fees not included in the transaction amount.
    /// </summary>
    [DataMember]
    public ValueList<AdditionalFee1> AdditionalFees { get; init; } = []; // Warning: Don't know multiplicity.
    /// <summary>
    /// Contains additional data.
    /// </summary>
    [DataMember]
    public ValueList<AdditionalData1> AdditionalData { get; init; } = []; // Warning: Don't know multiplicity.
    
    #nullable disable
}
