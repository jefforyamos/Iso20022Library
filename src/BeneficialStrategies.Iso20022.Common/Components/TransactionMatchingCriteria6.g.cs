//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for TransactionMatchingCriteria6.  ISO2002 ID# _v_bxkVoyEe23K4GXSpBSeg.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Xml.Linq;

#if NET6_0_OR_GREATER // C# 10 
#else
using System.DateOnly=System.DateTime; // So data types will degrade gracefully
using System.TimeOnly=System.DateTime; // Same with this data type
#endif
namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Compares information related to both sides of a transaction.
/// </summary>
[IsoId("_v_bxkVoyEe23K4GXSpBSeg")]
#if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
[DisplayName("Transaction Matching Criteria")]
#endif
#if DECLARE_SERIALIZABLE
[Serializable]
#endif
#if DECLARE_DATACONTRACT
[DataContract]
#endif
public partial record TransactionMatchingCriteria6
{
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    // No constructor needed for NET8 and above.
    #else
    // No constructor needed for < NET8 because this type has no required members.
    #endif
    #nullable enable
    
    /// <summary>
    /// Specifies whether the information on the reporting tracking numbers are matching or not.
    /// </summary>
    [IsoId("_wBBF8VoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Report Tracking Number")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareText2? ReportTrackingNumber { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareText2? ReportTrackingNumber { get; init; } 
    #else
    public CompareText2? ReportTrackingNumber { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the Unique Transaction Identifiers are matching or not.
    /// </summary>
    [IsoId("_wBBF81oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Unique Transaction Identifier")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareUniqueTransactionIdentifier2? UniqueTransactionIdentifier { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareUniqueTransactionIdentifier2? UniqueTransactionIdentifier { get; init; } 
    #else
    public CompareUniqueTransactionIdentifier2? UniqueTransactionIdentifier { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the Prior Unique Transaction Identifiers are matching or not.
    /// </summary>
    [IsoId("_wBBF9VoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Prior Unique Transaction Identifier")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareUniqueTransactionIdentifier2? PriorUniqueTransactionIdentifier { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareUniqueTransactionIdentifier2? PriorUniqueTransactionIdentifier { get; init; } 
    #else
    public CompareUniqueTransactionIdentifier2? PriorUniqueTransactionIdentifier { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the Subsequent Position Unique Transaction Identifiers are matching or not.
    /// </summary>
    [IsoId("_wBBF91oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Subsequent Position Unique Transaction Identifier")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareUniqueTransactionIdentifier2? SubsequentPositionUniqueTransactionIdentifier { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareUniqueTransactionIdentifier2? SubsequentPositionUniqueTransactionIdentifier { get; init; } 
    #else
    public CompareUniqueTransactionIdentifier2? SubsequentPositionUniqueTransactionIdentifier { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the delta are matching or not.
    /// </summary>
    [IsoId("_wBBF-VoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Delta")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareLongFraction19DecimalNumber1? Delta { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareLongFraction19DecimalNumber1? Delta { get; init; } 
    #else
    public CompareLongFraction19DecimalNumber1? Delta { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the trade confirmations are matching or not.
    /// </summary>
    [IsoId("_wBBF-1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Trade Confirmation")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareTradeConfirmation2? TradeConfirmation { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareTradeConfirmation2? TradeConfirmation { get; init; } 
    #else
    public CompareTradeConfirmation2? TradeConfirmation { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the trade clearing obligations are matching or not.
    /// </summary>
    [IsoId("_wBBF_VoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Trade Clearing Obligation")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareTradeClearingObligation1? TradeClearingObligation { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareTradeClearingObligation1? TradeClearingObligation { get; init; } 
    #else
    public CompareTradeClearingObligation1? TradeClearingObligation { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the trade clearing statuses are matching or not.
    /// </summary>
    [IsoId("_wBBF_1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Trade Clearing Status")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareTradeClearingStatus3? TradeClearingStatus { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareTradeClearingStatus3? TradeClearingStatus { get; init; } 
    #else
    public CompareTradeClearingStatus3? TradeClearingStatus { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the master agreement types are matching or not.
    /// </summary>
    [IsoId("_wBBGAVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Master Agreement Type")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareMasterAgreementType1? MasterAgreementType { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareMasterAgreementType1? MasterAgreementType { get; init; } 
    #else
    public CompareMasterAgreementType1? MasterAgreementType { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the master agreement versions are matching or not.
    /// </summary>
    [IsoId("_wBBGA1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Master Agreement Version")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareMax50Text1? MasterAgreementVersion { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareMax50Text1? MasterAgreementVersion { get; init; } 
    #else
    public CompareMax50Text1? MasterAgreementVersion { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the intra groups are matching or not.
    /// </summary>
    [IsoId("_wBBGBVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Intra Group")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareTrueFalseIndicator3? IntraGroup { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareTrueFalseIndicator3? IntraGroup { get; init; } 
    #else
    public CompareTrueFalseIndicator3? IntraGroup { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the post trade risk reductions are matching or not.
    /// </summary>
    [IsoId("_wBBGB1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Post Trade Risk Reduction")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public ComparePostTradeRiskReduction2? PostTradeRiskReduction { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public ComparePostTradeRiskReduction2? PostTradeRiskReduction { get; init; } 
    #else
    public ComparePostTradeRiskReduction2? PostTradeRiskReduction { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the derivative event are matching or not.
    /// </summary>
    [IsoId("_wBBGCVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Derivative Event")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareDerivativeEvent1? DerivativeEvent { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareDerivativeEvent1? DerivativeEvent { get; init; } 
    #else
    public CompareDerivativeEvent1? DerivativeEvent { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the platform identifiers are matching or not.
    /// </summary>
    [IsoId("_wBBGC1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Platform Identifier")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareMICIdentifier3? PlatformIdentifier { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareMICIdentifier3? PlatformIdentifier { get; init; } 
    #else
    public CompareMICIdentifier3? PlatformIdentifier { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the execution time stamps are matching or not.
    /// </summary>
    [IsoId("_wBBGDVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Execution Time Stamp")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareDateTime3? ExecutionTimeStamp { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareDateTime3? ExecutionTimeStamp { get; init; } 
    #else
    public CompareDateTime3? ExecutionTimeStamp { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the effective dates are matching or not.
    /// </summary>
    [IsoId("_wBBGD1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Effective Date")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareDate3? EffectiveDate { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareDate3? EffectiveDate { get; init; } 
    #else
    public CompareDate3? EffectiveDate { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the expiration dates are matching or not.
    /// </summary>
    [IsoId("_wBBGEVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Expiration Date")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareDate3? ExpirationDate { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareDate3? ExpirationDate { get; init; } 
    #else
    public CompareDate3? ExpirationDate { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the early termination dates are matching or not.
    /// </summary>
    [IsoId("_wBBGE1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Early Termination Date")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareDate3? EarlyTerminationDate { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareDate3? EarlyTerminationDate { get; init; } 
    #else
    public CompareDate3? EarlyTerminationDate { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the settlement dates are matching or not.
    /// </summary>
    [IsoId("_wBBGFVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Settlement Date")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareDate3? SettlementDate { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareDate3? SettlementDate { get; init; } 
    #else
    public CompareDate3? SettlementDate { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the delivery types are matching or not.
    /// </summary>
    [IsoId("_wBBGF1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Delivery Type")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareDeliveryType1? DeliveryType { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareDeliveryType1? DeliveryType { get; init; } 
    #else
    public CompareDeliveryType1? DeliveryType { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the the transaction prices are matching or not.
    /// </summary>
    [IsoId("_wBBGGVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Transaction Price")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareUnitPrice5? TransactionPrice { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareUnitPrice5? TransactionPrice { get; init; } 
    #else
    public CompareUnitPrice5? TransactionPrice { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the unadjusted effective dates are matching or not.
    /// </summary>
    [IsoId("_wBBGG1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Price Schedule Unadjusted Effective Date")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareDate3? PriceScheduleUnadjustedEffectiveDate { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareDate3? PriceScheduleUnadjustedEffectiveDate { get; init; } 
    #else
    public CompareDate3? PriceScheduleUnadjustedEffectiveDate { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the unadjusted end dates are matching or not.
    /// </summary>
    [IsoId("_wBBGHVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Price Schedule Unadjusted End Date")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareDate3? PriceScheduleUnadjustedEndDate { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareDate3? PriceScheduleUnadjustedEndDate { get; init; } 
    #else
    public CompareDate3? PriceScheduleUnadjustedEndDate { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the transaction price in effect between the unadjusted effective and end date are matching or not.
    /// </summary>
    [IsoId("_wBBGH1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Transaction Schedule Price")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareUnitPrice5? TransactionSchedulePrice { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareUnitPrice5? TransactionSchedulePrice { get; init; } 
    #else
    public CompareUnitPrice5? TransactionSchedulePrice { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the package prices are matching or not.
    /// </summary>
    [IsoId("_wBBGIVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Package Price")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareUnitPrice5? PackagePrice { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareUnitPrice5? PackagePrice { get; init; } 
    #else
    public CompareUnitPrice5? PackagePrice { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the notional amount first legs are matching or not.
    /// </summary>
    [IsoId("_wBBGI1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Notional Amount First Leg")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareAmountAndDirection3? NotionalAmountFirstLeg { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareAmountAndDirection3? NotionalAmountFirstLeg { get; init; } 
    #else
    public CompareAmountAndDirection3? NotionalAmountFirstLeg { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the unadjusted effective dates are matching or not.
    /// </summary>
    [IsoId("_wBBGJVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Notional Amount First Leg Unadjusted Effective Date")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareDate3? NotionalAmountFirstLegUnadjustedEffectiveDate { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareDate3? NotionalAmountFirstLegUnadjustedEffectiveDate { get; init; } 
    #else
    public CompareDate3? NotionalAmountFirstLegUnadjustedEffectiveDate { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the unadjusted end dates are matching or not.
    /// </summary>
    [IsoId("_wBBGJ1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Notional Amount First Leg Unadjusted End Date")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareDate3? NotionalAmountFirstLegUnadjustedEndDate { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareDate3? NotionalAmountFirstLegUnadjustedEndDate { get; init; } 
    #else
    public CompareDate3? NotionalAmountFirstLegUnadjustedEndDate { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the notional amount in effect on associated effective date of first legs are matching or not.
    /// </summary>
    [IsoId("_wBBGKVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Notional Amount First Leg Schedule Amount")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareAmountAndDirection3? NotionalAmountFirstLegScheduleAmount { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareAmountAndDirection3? NotionalAmountFirstLegScheduleAmount { get; init; } 
    #else
    public CompareAmountAndDirection3? NotionalAmountFirstLegScheduleAmount { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the notional quantity first legs are matching or not.
    /// </summary>
    [IsoId("_wBBGK1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Notional Quantity First Leg")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareLongFraction19DecimalNumber1? NotionalQuantityFirstLeg { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareLongFraction19DecimalNumber1? NotionalQuantityFirstLeg { get; init; } 
    #else
    public CompareLongFraction19DecimalNumber1? NotionalQuantityFirstLeg { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the unadjusted effective dates are matching or not.
    /// </summary>
    [IsoId("_wBBGLVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Notional Quantity First Leg Unadjusted Effective Date")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareDate3? NotionalQuantityFirstLegUnadjustedEffectiveDate { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareDate3? NotionalQuantityFirstLegUnadjustedEffectiveDate { get; init; } 
    #else
    public CompareDate3? NotionalQuantityFirstLegUnadjustedEffectiveDate { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the unadjusted end dates are matching or not.
    /// </summary>
    [IsoId("_wBBGL1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Notional Quantity First Leg Unadjusted End Date")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareDate3? NotionalQuantityFirstLegUnadjustedEndDate { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareDate3? NotionalQuantityFirstLegUnadjustedEndDate { get; init; } 
    #else
    public CompareDate3? NotionalQuantityFirstLegUnadjustedEndDate { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the notional quantity in effect on associated effective date of first legs are matching or not.
    /// </summary>
    [IsoId("_wBBGMVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Notional Quantity First Leg Schedule Quantity")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareLongFraction19DecimalNumber1? NotionalQuantityFirstLegScheduleQuantity { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareLongFraction19DecimalNumber1? NotionalQuantityFirstLegScheduleQuantity { get; init; } 
    #else
    public CompareLongFraction19DecimalNumber1? NotionalQuantityFirstLegScheduleQuantity { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the notional amount second legs are matching or not.
    /// </summary>
    [IsoId("_wBBGM1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Notional Amount Second Leg")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareNotionalAmount1? NotionalAmountSecondLeg { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareNotionalAmount1? NotionalAmountSecondLeg { get; init; } 
    #else
    public CompareNotionalAmount1? NotionalAmountSecondLeg { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the unadjusted effective dates are matching or not.
    /// </summary>
    [IsoId("_wBBGNVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Notional Amount Second Leg Unadjusted Effective Date")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareDate3? NotionalAmountSecondLegUnadjustedEffectiveDate { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareDate3? NotionalAmountSecondLegUnadjustedEffectiveDate { get; init; } 
    #else
    public CompareDate3? NotionalAmountSecondLegUnadjustedEffectiveDate { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the unadjusted end dates are matching or not.
    /// </summary>
    [IsoId("_wBBGN1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Notional Amount Second Leg Unadjusted End Date")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareDate3? NotionalAmountSecondLegUnadjustedEndDate { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareDate3? NotionalAmountSecondLegUnadjustedEndDate { get; init; } 
    #else
    public CompareDate3? NotionalAmountSecondLegUnadjustedEndDate { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the notional amount in effect on associated effective date of second legs are matching or not.
    /// </summary>
    [IsoId("_wBBGOVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Notional Amount Second Leg Schedule Amount")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareAmountAndDirection3? NotionalAmountSecondLegScheduleAmount { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareAmountAndDirection3? NotionalAmountSecondLegScheduleAmount { get; init; } 
    #else
    public CompareAmountAndDirection3? NotionalAmountSecondLegScheduleAmount { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the notional quantity second legs are matching or not.
    /// </summary>
    [IsoId("_wBBGO1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Notional Quantity Second Leg")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareLongFraction19DecimalNumber1? NotionalQuantitySecondLeg { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareLongFraction19DecimalNumber1? NotionalQuantitySecondLeg { get; init; } 
    #else
    public CompareLongFraction19DecimalNumber1? NotionalQuantitySecondLeg { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the unadjusted effective dates are matching or not.
    /// </summary>
    [IsoId("_wBBGPVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Notional Quantity Second Leg Unadjusted Effective Date")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareDate3? NotionalQuantitySecondLegUnadjustedEffectiveDate { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareDate3? NotionalQuantitySecondLegUnadjustedEffectiveDate { get; init; } 
    #else
    public CompareDate3? NotionalQuantitySecondLegUnadjustedEffectiveDate { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the unadjusted end dates are matching or not.
    /// </summary>
    [IsoId("_wBBGP1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Notional Quantity Second Leg Unadjusted End Date")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareDate3? NotionalQuantitySecondLegUnadjustedEndDate { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareDate3? NotionalQuantitySecondLegUnadjustedEndDate { get; init; } 
    #else
    public CompareDate3? NotionalQuantitySecondLegUnadjustedEndDate { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the notional quantity in effect on associated effective date of second legs are matching or not.
    /// </summary>
    [IsoId("_wBBGQVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Notional Quantity Second Leg Schedule Quantity")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareLongFraction19DecimalNumber1? NotionalQuantitySecondLegScheduleQuantity { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareLongFraction19DecimalNumber1? NotionalQuantitySecondLegScheduleQuantity { get; init; } 
    #else
    public CompareLongFraction19DecimalNumber1? NotionalQuantitySecondLegScheduleQuantity { get; set; } 
    #endif
    
    /// <summary>
    /// Payment related to elements not reported in dedicated fields.
    /// </summary>
    [IsoId("_wBBGQ1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Other Payment")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareOtherPayment1? OtherPayment { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareOtherPayment1? OtherPayment { get; init; } 
    #else
    public CompareOtherPayment1? OtherPayment { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the interest fixed rate legs are matching or not.
    /// </summary>
    [IsoId("_wBBGRVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Interest Fixed Rate First Leg")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareUnitPrice7? InterestFixedRateFirstLeg { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareUnitPrice7? InterestFixedRateFirstLeg { get; init; } 
    #else
    public CompareUnitPrice7? InterestFixedRateFirstLeg { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the day counts are matching or not.
    /// </summary>
    [IsoId("_wBBGR1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Interest Fixed Rate First Leg Day Count")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareDayCount1? InterestFixedRateFirstLegDayCount { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareDayCount1? InterestFixedRateFirstLegDayCount { get; init; } 
    #else
    public CompareDayCount1? InterestFixedRateFirstLegDayCount { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the payment frequency units are matching or not.
    /// </summary>
    [IsoId("_wBBGSVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Interest Fixed Rate First Leg Payment Frequency Unit")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareFrequencyUnit1? InterestFixedRateFirstLegPaymentFrequencyUnit { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareFrequencyUnit1? InterestFixedRateFirstLegPaymentFrequencyUnit { get; init; } 
    #else
    public CompareFrequencyUnit1? InterestFixedRateFirstLegPaymentFrequencyUnit { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the payment frequency values are matching or not.
    /// </summary>
    [IsoId("_wBBGS1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Interest Fixed Rate First Leg Payment Frequency Value")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareNumber5? InterestFixedRateFirstLegPaymentFrequencyValue { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareNumber5? InterestFixedRateFirstLegPaymentFrequencyValue { get; init; } 
    #else
    public CompareNumber5? InterestFixedRateFirstLegPaymentFrequencyValue { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the interest floating rate identifiers are matching or not.
    /// </summary>
    [IsoId("_wBBGTVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Interest Floating Rate First Leg Identification")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareISINIdentifier4? InterestFloatingRateFirstLegIdentification { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareISINIdentifier4? InterestFloatingRateFirstLegIdentification { get; init; } 
    #else
    public CompareISINIdentifier4? InterestFloatingRateFirstLegIdentification { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the interest floating rate codes are matching or not.
    /// </summary>
    [IsoId("_wBBGT1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Interest Floating Rate First Leg Code")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareBenchmarkCode1? InterestFloatingRateFirstLegCode { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareBenchmarkCode1? InterestFloatingRateFirstLegCode { get; init; } 
    #else
    public CompareBenchmarkCode1? InterestFloatingRateFirstLegCode { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the interest floating rate names are matching or not.
    /// </summary>
    [IsoId("_wBBGUVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Interest Floating Rate First Leg Name")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareMax350Text1? InterestFloatingRateFirstLegName { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareMax350Text1? InterestFloatingRateFirstLegName { get; init; } 
    #else
    public CompareMax350Text1? InterestFloatingRateFirstLegName { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the day counts are matching or not.
    /// </summary>
    [IsoId("_wBBGU1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Interest Floating Rate First Leg Day Count")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareDayCount1? InterestFloatingRateFirstLegDayCount { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareDayCount1? InterestFloatingRateFirstLegDayCount { get; init; } 
    #else
    public CompareDayCount1? InterestFloatingRateFirstLegDayCount { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the payment frequency units are matching or not.
    /// </summary>
    [IsoId("_wBBGVVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Interest Floating Rate First Leg Payment Frequency Unit")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareFrequencyUnit1? InterestFloatingRateFirstLegPaymentFrequencyUnit { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareFrequencyUnit1? InterestFloatingRateFirstLegPaymentFrequencyUnit { get; init; } 
    #else
    public CompareFrequencyUnit1? InterestFloatingRateFirstLegPaymentFrequencyUnit { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the payment frequency values are matching or not.
    /// </summary>
    [IsoId("_wBBGV1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Interest Floating Rate First Leg Payment Frequency Value")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareNumber5? InterestFloatingRateFirstLegPaymentFrequencyValue { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareNumber5? InterestFloatingRateFirstLegPaymentFrequencyValue { get; init; } 
    #else
    public CompareNumber5? InterestFloatingRateFirstLegPaymentFrequencyValue { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the reference period units are matching or not.
    /// </summary>
    [IsoId("_wBBGWVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Interest Floating Rate First Leg Reference Period Unit")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareFrequencyUnit1? InterestFloatingRateFirstLegReferencePeriodUnit { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareFrequencyUnit1? InterestFloatingRateFirstLegReferencePeriodUnit { get; init; } 
    #else
    public CompareFrequencyUnit1? InterestFloatingRateFirstLegReferencePeriodUnit { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the reference period values are matching or not.
    /// </summary>
    [IsoId("_wBBGW1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Interest Floating Rate First Leg Reference Period Value")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareNumber5? InterestFloatingRateFirstLegReferencePeriodValue { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareNumber5? InterestFloatingRateFirstLegReferencePeriodValue { get; init; } 
    #else
    public CompareNumber5? InterestFloatingRateFirstLegReferencePeriodValue { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the reset frequency units are matching or not.
    /// </summary>
    [IsoId("_wBBGXVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Interest Floating Rate First Leg Reset Frequency Unit")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareFrequencyUnit1? InterestFloatingRateFirstLegResetFrequencyUnit { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareFrequencyUnit1? InterestFloatingRateFirstLegResetFrequencyUnit { get; init; } 
    #else
    public CompareFrequencyUnit1? InterestFloatingRateFirstLegResetFrequencyUnit { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the reset frequency values are matching or not.
    /// </summary>
    [IsoId("_wBBGX1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Interest Floating Rate First Leg Reset Frequency Value")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareNumber5? InterestFloatingRateFirstLegResetFrequencyValue { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareNumber5? InterestFloatingRateFirstLegResetFrequencyValue { get; init; } 
    #else
    public CompareNumber5? InterestFloatingRateFirstLegResetFrequencyValue { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the spreads are matching or not.
    /// </summary>
    [IsoId("_wBBGYVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Interest Floating Rate First Leg Spread")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareUnitPrice8? InterestFloatingRateFirstLegSpread { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareUnitPrice8? InterestFloatingRateFirstLegSpread { get; init; } 
    #else
    public CompareUnitPrice8? InterestFloatingRateFirstLegSpread { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the interest fixed rate legs are matching or not.
    /// </summary>
    [IsoId("_wBBGY1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Interest Rate Fixed Second Leg")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareUnitPrice7? InterestRateFixedSecondLeg { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareUnitPrice7? InterestRateFixedSecondLeg { get; init; } 
    #else
    public CompareUnitPrice7? InterestRateFixedSecondLeg { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the day counts are matching or not.
    /// </summary>
    [IsoId("_wBBGZVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Interest Fixed Rate Second Leg Day Count")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareDayCount1? InterestFixedRateSecondLegDayCount { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareDayCount1? InterestFixedRateSecondLegDayCount { get; init; } 
    #else
    public CompareDayCount1? InterestFixedRateSecondLegDayCount { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the payment frequency units are matching or not.
    /// </summary>
    [IsoId("_wBBGZ1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Interest Fixed Rate Second Leg Payment Frequency Unit")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareFrequencyUnit1? InterestFixedRateSecondLegPaymentFrequencyUnit { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareFrequencyUnit1? InterestFixedRateSecondLegPaymentFrequencyUnit { get; init; } 
    #else
    public CompareFrequencyUnit1? InterestFixedRateSecondLegPaymentFrequencyUnit { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the payment frequency values are matching or not.
    /// </summary>
    [IsoId("_wBBGaVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Interest Fixed Rate Second Leg Payment Frequency Value")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareNumber5? InterestFixedRateSecondLegPaymentFrequencyValue { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareNumber5? InterestFixedRateSecondLegPaymentFrequencyValue { get; init; } 
    #else
    public CompareNumber5? InterestFixedRateSecondLegPaymentFrequencyValue { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the interest floating rate identifiers are matching or not.
    /// </summary>
    [IsoId("_wBBGa1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Interest Floating Rate Second Leg Identification")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareISINIdentifier4? InterestFloatingRateSecondLegIdentification { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareISINIdentifier4? InterestFloatingRateSecondLegIdentification { get; init; } 
    #else
    public CompareISINIdentifier4? InterestFloatingRateSecondLegIdentification { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the interest floating rate codes are matching or not.
    /// </summary>
    [IsoId("_wBBGbVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Interest Floating Rate Second Leg Code")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareBenchmarkCode1? InterestFloatingRateSecondLegCode { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareBenchmarkCode1? InterestFloatingRateSecondLegCode { get; init; } 
    #else
    public CompareBenchmarkCode1? InterestFloatingRateSecondLegCode { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the interest floating rate names are matching or not.
    /// </summary>
    [IsoId("_wBBGb1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Interest Floating Rate Second Leg Name")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareMax350Text1? InterestFloatingRateSecondLegName { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareMax350Text1? InterestFloatingRateSecondLegName { get; init; } 
    #else
    public CompareMax350Text1? InterestFloatingRateSecondLegName { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the day counts are matching or not.
    /// </summary>
    [IsoId("_wBBGcVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Interest Floating Rate Second Leg Day Count")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareDayCount1? InterestFloatingRateSecondLegDayCount { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareDayCount1? InterestFloatingRateSecondLegDayCount { get; init; } 
    #else
    public CompareDayCount1? InterestFloatingRateSecondLegDayCount { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the payment frequency units are matching or not.
    /// </summary>
    [IsoId("_wBBGc1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Interest Floating Rate Second Leg Payment Frequency Unit")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareFrequencyUnit1? InterestFloatingRateSecondLegPaymentFrequencyUnit { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareFrequencyUnit1? InterestFloatingRateSecondLegPaymentFrequencyUnit { get; init; } 
    #else
    public CompareFrequencyUnit1? InterestFloatingRateSecondLegPaymentFrequencyUnit { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the payment frequency values are matching or not.
    /// </summary>
    [IsoId("_wBBGdVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Interest Floating Rate Second Leg Payment Frequency Value")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareNumber5? InterestFloatingRateSecondLegPaymentFrequencyValue { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareNumber5? InterestFloatingRateSecondLegPaymentFrequencyValue { get; init; } 
    #else
    public CompareNumber5? InterestFloatingRateSecondLegPaymentFrequencyValue { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the reference period units are matching or not.
    /// </summary>
    [IsoId("_wBBGd1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Interest Floating Rate Second Leg Reference Period Unit")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareFrequencyUnit1? InterestFloatingRateSecondLegReferencePeriodUnit { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareFrequencyUnit1? InterestFloatingRateSecondLegReferencePeriodUnit { get; init; } 
    #else
    public CompareFrequencyUnit1? InterestFloatingRateSecondLegReferencePeriodUnit { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the reference period values are matching or not.
    /// </summary>
    [IsoId("_wBBGeVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Interest Floating Rate Second Leg Reference Period Value")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareNumber5? InterestFloatingRateSecondLegReferencePeriodValue { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareNumber5? InterestFloatingRateSecondLegReferencePeriodValue { get; init; } 
    #else
    public CompareNumber5? InterestFloatingRateSecondLegReferencePeriodValue { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the reset frequency units are matching or not.
    /// </summary>
    [IsoId("_wBBGe1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Interest Floating Rate Second Leg Reset Frequency Unit")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareFrequencyUnit1? InterestFloatingRateSecondLegResetFrequencyUnit { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareFrequencyUnit1? InterestFloatingRateSecondLegResetFrequencyUnit { get; init; } 
    #else
    public CompareFrequencyUnit1? InterestFloatingRateSecondLegResetFrequencyUnit { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the reset frequency values are matching or not.
    /// </summary>
    [IsoId("_wBBGfVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Interest Floating Rate Second Leg Reset Frequency Value")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareNumber5? InterestFloatingRateSecondLegResetFrequencyValue { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareNumber5? InterestFloatingRateSecondLegResetFrequencyValue { get; init; } 
    #else
    public CompareNumber5? InterestFloatingRateSecondLegResetFrequencyValue { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the spreads are matching or not.
    /// </summary>
    [IsoId("_wBBGf1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Interest Floating Rate Second Leg Spread")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareUnitPrice8? InterestFloatingRateSecondLegSpread { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareUnitPrice8? InterestFloatingRateSecondLegSpread { get; init; } 
    #else
    public CompareUnitPrice8? InterestFloatingRateSecondLegSpread { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the package spreads are matching or not.
    /// </summary>
    [IsoId("_wBBGgVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Package Spread")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareUnitPrice8? PackageSpread { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareUnitPrice8? PackageSpread { get; init; } 
    #else
    public CompareUnitPrice8? PackageSpread { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the currency exchange rates are matching or not.
    /// </summary>
    [IsoId("_wBBGg1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Currency Exchange Rate")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareExchangeRate1? CurrencyExchangeRate { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareExchangeRate1? CurrencyExchangeRate { get; init; } 
    #else
    public CompareExchangeRate1? CurrencyExchangeRate { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the forward currency exchange rates are matching or not.
    /// </summary>
    [IsoId("_wBBGhVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Currency Forward Exchange Rate")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareExchangeRate1? CurrencyForwardExchangeRate { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareExchangeRate1? CurrencyForwardExchangeRate { get; init; } 
    #else
    public CompareExchangeRate1? CurrencyForwardExchangeRate { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the currency exchange rate basis are matching or not.
    /// </summary>
    [IsoId("_wBBGh1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Currency Exchange Rate Basis")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareExchangeRateBasis1? CurrencyExchangeRateBasis { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareExchangeRateBasis1? CurrencyExchangeRateBasis { get; init; } 
    #else
    public CompareExchangeRateBasis1? CurrencyExchangeRateBasis { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the commodities are matching or not.
    /// </summary>
    [IsoId("_wBBGiVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Commodity")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareCommodityAssetClass4? Commodity { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareCommodityAssetClass4? Commodity { get; init; } 
    #else
    public CompareCommodityAssetClass4? Commodity { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the delivery points or zones are matching or not.
    /// </summary>
    [IsoId("_wBBGi1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Energy Delivery Point Or Zone")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareDeliveryInterconnectionPoint1? EnergyDeliveryPointOrZone { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareDeliveryInterconnectionPoint1? EnergyDeliveryPointOrZone { get; init; } 
    #else
    public CompareDeliveryInterconnectionPoint1? EnergyDeliveryPointOrZone { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the interconnection points are matching or not.
    /// </summary>
    [IsoId("_wBBGjVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Energy Inter Connection Point")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareDeliveryInterconnectionPoint1? EnergyInterConnectionPoint { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareDeliveryInterconnectionPoint1? EnergyInterConnectionPoint { get; init; } 
    #else
    public CompareDeliveryInterconnectionPoint1? EnergyInterConnectionPoint { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the load types are matching or not.
    /// </summary>
    [IsoId("_wBBGj1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Energy Load Type")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareEnergyLoadType1? EnergyLoadType { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareEnergyLoadType1? EnergyLoadType { get; init; } 
    #else
    public CompareEnergyLoadType1? EnergyLoadType { get; set; } 
    #endif
    
    /// <summary>
    /// Attributes related to delivery of derivative contracts.
    /// </summary>
    [IsoId("_wBBGkVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Delivery Attribute")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareEnergyDeliveryAttribute1? DeliveryAttribute { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareEnergyDeliveryAttribute1? DeliveryAttribute { get; init; } 
    #else
    public CompareEnergyDeliveryAttribute1? DeliveryAttribute { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the option types are matching or not.
    /// </summary>
    [IsoId("_wBBGk1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Option Type")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareOptionType1? OptionType { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareOptionType1? OptionType { get; init; } 
    #else
    public CompareOptionType1? OptionType { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the exercise styles are matching or not.
    /// </summary>
    [IsoId("_wBBGlVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Option Exercise Style")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareOptionStyle1? OptionExerciseStyle { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareOptionStyle1? OptionExerciseStyle { get; init; } 
    #else
    public CompareOptionStyle1? OptionExerciseStyle { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the strike prices are matching or not.
    /// </summary>
    [IsoId("_wBBGl1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Option Strike Price")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareUnitPrice4? OptionStrikePrice { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareUnitPrice4? OptionStrikePrice { get; init; } 
    #else
    public CompareUnitPrice4? OptionStrikePrice { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the unadjusted effective dates are matching or not.
    /// </summary>
    [IsoId("_wBBGmVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Option Strike Price Schedule Unadjusted Effective Date")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareDate3? OptionStrikePriceScheduleUnadjustedEffectiveDate { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareDate3? OptionStrikePriceScheduleUnadjustedEffectiveDate { get; init; } 
    #else
    public CompareDate3? OptionStrikePriceScheduleUnadjustedEffectiveDate { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the unadjusted end dates are matching or not.
    /// </summary>
    [IsoId("_wBBGm1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Option Strike Price Schedule Unadjusted End Date")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareDate3? OptionStrikePriceScheduleUnadjustedEndDate { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareDate3? OptionStrikePriceScheduleUnadjustedEndDate { get; init; } 
    #else
    public CompareDate3? OptionStrikePriceScheduleUnadjustedEndDate { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the strike price in effect on associated effective dates are matching or not.
    /// </summary>
    [IsoId("_wBBGnVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Option Strike Price Schedule Amount")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareUnitPrice4? OptionStrikePriceScheduleAmount { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareUnitPrice4? OptionStrikePriceScheduleAmount { get; init; } 
    #else
    public CompareUnitPrice4? OptionStrikePriceScheduleAmount { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the premium amounts are matching or not.
    /// </summary>
    [IsoId("_wBBGn1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Option Premium Amount")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareActiveOrHistoricCurrencyAndAmount4? OptionPremiumAmount { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareActiveOrHistoricCurrencyAndAmount4? OptionPremiumAmount { get; init; } 
    #else
    public CompareActiveOrHistoricCurrencyAndAmount4? OptionPremiumAmount { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the premium payment dates are matching or not.
    /// </summary>
    [IsoId("_wBBGoVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Option Premium Payment Date")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareDate3? OptionPremiumPaymentDate { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareDate3? OptionPremiumPaymentDate { get; init; } 
    #else
    public CompareDate3? OptionPremiumPaymentDate { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the maturity date of the underlying are matching or not.
    /// </summary>
    [IsoId("_wBBGo1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Option Maturity Date Of Underlying")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareDate3? OptionMaturityDateOfUnderlying { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareDate3? OptionMaturityDateOfUnderlying { get; init; } 
    #else
    public CompareDate3? OptionMaturityDateOfUnderlying { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the credity seniority are matching or not.
    /// </summary>
    [IsoId("_wBBGpVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Credit Seniority")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareSeniorityType1? CreditSeniority { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareSeniorityType1? CreditSeniority { get; init; } 
    #else
    public CompareSeniorityType1? CreditSeniority { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the credit reference parties are matching or not.
    /// </summary>
    [IsoId("_wBBGp1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Credit Reference Party")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareReferenceParty1? CreditReferenceParty { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareReferenceParty1? CreditReferenceParty { get; init; } 
    #else
    public CompareReferenceParty1? CreditReferenceParty { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the credit series are matching or not.
    /// </summary>
    [IsoId("_wBBGqVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Credit Series")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareNumber7? CreditSeries { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareNumber7? CreditSeries { get; init; } 
    #else
    public CompareNumber7? CreditSeries { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the credit versions are matching or not.
    /// </summary>
    [IsoId("_wBBGq1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Credit Version")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareNumber7? CreditVersion { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareNumber7? CreditVersion { get; init; } 
    #else
    public CompareNumber7? CreditVersion { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the index factors are matching or not.
    /// </summary>
    [IsoId("_wBBGrVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Credit Index Factor")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public ComparePercentageRate3? CreditIndexFactor { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public ComparePercentageRate3? CreditIndexFactor { get; init; } 
    #else
    public ComparePercentageRate3? CreditIndexFactor { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the credit tranches are matching or not.
    /// </summary>
    [IsoId("_wBBGr1oyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Credit Tranche")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareTrancheIndicator1? CreditTranche { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareTrancheIndicator1? CreditTranche { get; init; } 
    #else
    public CompareTrancheIndicator1? CreditTranche { get; set; } 
    #endif
    
    /// <summary>
    /// Specifies whether the information on the levels are matching or not.
    /// </summary>
    [IsoId("_wBBGsVoyEe23K4GXSpBSeg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Level")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public CompareReportingLevelType2? Level { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public CompareReportingLevelType2? Level { get; init; } 
    #else
    public CompareReportingLevelType2? Level { get; set; } 
    #endif
    
    
    #nullable disable
    
}
