//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for TransactionReportItems3.  ISO2002 ID# _Pcav1tp-Ed-ak6NoX_4Aeg_-340644138.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Detailed description of the items that correspond to the parameters set in a request and for which a report has been generated.
/// </summary>
public partial record TransactionReportItems3
{
    #nullable enable
    
    /// <summary>
    /// Unique identification assigned by the matching application to the transaction.|This identification is to be used in any communication between the parties.
    /// </summary>
    public required IsoMax35Text TransactionIdentification { get; init; } 
    /// <summary>
    /// Unique identification assigned by the matching application to the baseline when it is established.
    /// </summary>
    public DocumentIdentification3? EstablishedBaselineIdentification { get; init; } 
    /// <summary>
    /// Identifies the status of the transaction by means of a code.
    /// </summary>
    public required TransactionStatus4 TransactionStatus { get; init; } 
    /// <summary>
    /// Reference to the transaction for each financial institution which is a party to the transaction.
    /// </summary>
    public IReadOnlyCollection<DocumentIdentification5> UserTransactionReference { get; init; } = [];
    /// <summary>
    /// Reference to the purchase order of the underlying transaction.
    /// </summary>
    public required DocumentIdentification7 PurchaseOrderReference { get; init; } 
    /// <summary>
    /// Party that buys goods or services, or a financial instrument.
    /// </summary>
    public required PartyIdentification26 Buyer { get; init; } 
    /// <summary>
    /// Party that sells goods or services, or a financial instrument.
    /// </summary>
    public required PartyIdentification26 Seller { get; init; } 
    /// <summary>
    /// Financial institution of the buyer.
    /// </summary>
    public required BICIdentification1 BuyerBank { get; init; } 
    /// <summary>
    /// Country of the buyer bank.
    /// </summary>
    public required CountryCode BuyerBankCountry { get; init; } 
    /// <summary>
    /// Financial institution of the seller.
    /// </summary>
    public required BICIdentification1 SellerBank { get; init; } 
    /// <summary>
    /// Country of the seller bank.
    /// </summary>
    public required CountryCode SellerBankCountry { get; init; } 
    /// <summary>
    /// Financial institution that is an obligor bank to the transaction.
    /// </summary>
    public BICIdentification1? ObligorBank { get; init;  } // Warning: Don't know multiplicity.
    /// <summary>
    /// Financial institution that is a data set submitting bank to the transaction.
    /// </summary>
    public BICIdentification1? SubmittingBank { get; init;  } // Warning: Don't know multiplicity.
    /// <summary>
    /// Amount of baseline not yet utilised.
    /// </summary>
    public required IsoCurrencyAndAmount OutstandingAmount { get; init; } 
    /// <summary>
    /// Total net amount as specified in the baseline.
    /// </summary>
    public required IsoCurrencyAndAmount TotalNetAmount { get; init; } 
    /// <summary>
    /// Next processing step required.
    /// </summary>
    public PendingActivity2? PendingRequestForAction { get; init;  } // Warning: Don't know multiplicity.
    
    #nullable disable
}
