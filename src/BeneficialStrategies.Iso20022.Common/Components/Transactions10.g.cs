//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for Transactions10.  ISO2002 ID# _7tkDpQKxEe2rHs6fbn9-0A.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Reports on transactions.
/// </summary>
public partial record Transactions10
     : IIsoXmlSerilizable<Transactions10>
{
    #nullable enable
    
    /// <summary>
    /// Common detailed payment instruction information.
    /// </summary>
    public PaymentCommon5? PaymentCommonInformation { get; init; } 
    /// <summary>
    /// Indicates the total number and sum of the transactions.
    /// </summary>
    public NumberAndSumOfTransactions2? TransactionsSummary { get; init; } 
    /// <summary>
    /// Reports either on the transaction information or on a business error.
    /// </summary>
    public TransactionReport7? TransactionReport { get; init;  } // Warning: Don't know multiplicity.
    // ID for the above is _8Wpc6wKxEe2rHs6fbn9-0A
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (PaymentCommonInformation is PaymentCommon5 PaymentCommonInformationValue)
        {
            writer.WriteStartElement(null, "PmtCmonInf", xmlNamespace );
            PaymentCommonInformationValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (TransactionsSummary is NumberAndSumOfTransactions2 TransactionsSummaryValue)
        {
            writer.WriteStartElement(null, "TxsSummry", xmlNamespace );
            TransactionsSummaryValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        // Not sure how to serialize TransactionReport, multiplicity Unknown
    }
    public static Transactions10 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
