//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for TransportByAir3.  ISO2002 ID# _St7j49p-Ed-ak6NoX_4Aeg_1854659956.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Information related to the transportation of goods by air.
/// </summary>
public partial record TransportByAir3
     : IIsoXmlSerilizable<TransportByAir3>
{
    #nullable enable
    
    /// <summary>
    /// Place from where the goods must leave.
    /// </summary>
    public AirportName1Choice_? DepartureAirport { get; init; } 
    /// <summary>
    /// Place where the goods must arrive.
    /// </summary>
    public AirportName1Choice_? DestinationAirport { get; init;  } // Warning: Don't know multiplicity.
    // ID for the above is _St7j5dp-Ed-ak6NoX_4Aeg_1854660141
    /// <summary>
    /// Identifies the party that is responsible for the conveyance of the goods from one place to another.
    /// </summary>
    public IsoMax35Text? AirCarrierName { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (DepartureAirport is AirportName1Choice_ DepartureAirportValue)
        {
            writer.WriteStartElement(null, "DprtureAirprt", xmlNamespace );
            DepartureAirportValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        // Not sure how to serialize DestinationAirport, multiplicity Unknown
        if (AirCarrierName is IsoMax35Text AirCarrierNameValue)
        {
            writer.WriteStartElement(null, "AirCrrierNm", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(AirCarrierNameValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
    }
    public static TransportByAir3 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
