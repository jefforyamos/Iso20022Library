//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for Undertaking2.  ISO2002 ID# _916yAnltEeG7BsjMvd1mEw_562975782.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Independent undertaking, such as a demand guarantee or standby letter of credit, that provides financial assurance, to be honoured on the presentation of documents that comply with its terms and conditions.
/// </summary>
public partial record Undertaking2
{
    #nullable enable
    
    /// <summary>
    /// Undertaking name.
    /// </summary>
    public UndertakingName1Code? Name { get; init; } 
    /// <summary>
    /// Party in whose favour the counter-undertaking is issued.
    /// </summary>
    public PartyIdentification43? Beneficiary { get; init; } 
    /// <summary>
    /// Details related to the expiry terms of the counter-undertaking.
    /// </summary>
    public ExpiryDetails2? ExpiryDetails { get; init; } 
    /// <summary>
    /// Details related to the amount of the counter-undertaking.
    /// </summary>
    public UndertakingAmount1? CounterUndertakingAmount { get; init; } 
    /// <summary>
    /// Indicates whether the applicant/obligor or beneficiary is responsible for payment of the confirmation charges.
    /// </summary>
    public ExternalTypeOfParty1Code? ConfirmationChargesPayableBy { get; init; } 
    /// <summary>
    /// Rules and laws governing the counter-undertaking.
    /// </summary>
    public GovernanceRules1? GovernanceRulesAndLaw { get; init; } 
    /// <summary>
    /// Indication as to whether a claim is to utilise a standard claim form of the issuing institution.
    /// </summary>
    public IsoYesNoIndicator? StandardClaimDocumentIndicator { get; init; } 
    /// <summary>
    /// Additional information related to the counter-undertaking.
    /// </summary>
    public IsoMax2000Text[] AdditionalInformation { get; init; } = [];
    
    #nullable disable
}
