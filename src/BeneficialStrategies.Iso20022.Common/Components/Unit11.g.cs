//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for Unit11.  ISO2002 ID# _b2mNAW1bEeiqaPNRWUnGNA.
//

using BeneficialStrategies.Iso20022.Choices;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Information about units to transfer.
/// </summary>
public partial record Unit11
{
    #nullable enable
    
    /// <summary>
    /// Quantity of units.
    /// </summary>
    public required IsoDecimalNumber UnitsNumber { get; init; } 
    /// <summary>
    /// Date the investor or its agent placed the original order.
    /// </summary>
    public IsoISODate? OrderDate { get; init; } 
    /// <summary>
    /// Date the investor purchased the financial instrument.
    /// </summary>
    public IsoISODate? AcquisitionDate { get; init; } 
    /// <summary>
    /// Certificate representing the security that is delivered.
    /// </summary>
    public IsoMax35Text? CertificateNumber { get; init;  } // Warning: Don't know multiplicity.
    /// <summary>
    /// Tax group to which the purchased investment fund units belong. The investor indicates to the intermediary operating pooled nominees, which type of unit is to be sold.
    /// </summary>
    public UKTaxGroupUnit1Code? Group1Or2Units { get; init; } 
    /// <summary>
    /// Reference to the units number. This may be the order reference of the original acquisition, the identification of a lot, a client reference, a sub-position reference or other related reference.
    /// </summary>
    public IsoMax35Text? Reference { get; init; } 
    /// <summary>
    /// Information related to the price. This may specify the price of original order confirmation.
    /// </summary>
    public UnitPrice23? PriceDetails { get; init; } 
    /// <summary>
    /// Fees and taxes. This may specify the fees and taxes related to the original order confirmation.
    /// </summary>
    public TotalFeesAndTaxes41? TransactionOverhead { get; init; } 
    /// <summary>
    /// Amount not covered in the price, fee or tax.
    /// </summary>
    public OtherAmount1? OtherAmount { get; init;  } // Warning: Don't know multiplicity.
    
    #nullable disable
}
