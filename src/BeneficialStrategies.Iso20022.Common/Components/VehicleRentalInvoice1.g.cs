//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for VehicleRentalInvoice1.  ISO2002 ID# _cYeOxvTZEeife6veM7daYw.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Invoice related to a vehicle rental service.
/// </summary>
public partial record VehicleRentalInvoice1
{
    #nullable enable
    
    /// <summary>
    /// Indicates that the cardholder failed to pick up the vehicle and was therefore charged a no-show fee; vehicle was not actually rented. 
    /// </summary>
    public IsoTrueFalseIndicator? NoShowIndicator { get; init; } 
    /// <summary>
    /// Indicates that an adjustment was made to a vehicle rental charge (for example, additional charges added). 
    /// </summary>
    public IsoTrueFalseIndicator? AdjustedIndicator { get; init; } 
    /// <summary>
    /// Location to which vehicle was returned.
    /// </summary>
    public Address1? ReturnLocation { get; init; } 
    /// <summary>
    /// Date the vehicle was picked-up by the customer.  In the case of a no-show transaction or a prepaid transaction, this contains the scheduled pickup date.
    /// </summary>
    public IsoISODate? CheckOutDate { get; init; } 
    /// <summary>
    /// Time the vehicle was picked-up by the customer.  In the case of a no-show transaction or a prepaid transaction, this contains the scheduled pickup time.
    /// </summary>
    public IsoISOTime? CheckOutTime { get; init; } 
    /// <summary>
    /// Date when the vehicle was returned to the rental agency.
    /// </summary>
    public IsoISODate? CheckInDate { get; init; } 
    /// <summary>
    /// Time when the vehicle was returned to the rental agency.
    /// </summary>
    public IsoISOTime? CheckInTime { get; init; } 
    /// <summary>
    /// Duration of rental in days.
    /// </summary>
    public IsoMax4NumericText? Duration { get; init; } 
    /// <summary>
    /// Contains the details of the vehicle class invoiced to the renter regardless of the class of vehicle actually provided. 
    /// </summary>
    public Vehicle4? VehicleClassInvoiced { get; init; } 
    /// <summary>
    /// Contains the details of the vehicle class of the vehicle actually provided to the renter at the time of vehicle pick-up. This may be an upgrade class of vehicle, above that invoiced to the renter. 
    /// </summary>
    public Vehicle4? VehicleClassProvided { get; init; } 
    /// <summary>
    /// Distance travelled during vehicle rental.
    /// </summary>
    public Distance1? TravelDistance { get; init; } 
    /// <summary>
    /// Vehicle rental charge.
    /// </summary>
    public RentalRate1? RentalCharge { get; init;  } // Warning: Don't know multiplicity.
    /// <summary>
    /// Provides the identifier assigned by the card acceptor that best categorizes the items being purchased in a standardized commodity group.
    /// </summary>
    public IsoMax35Text? SummaryCommodityIdentification { get; init; } 
    /// <summary>
    /// Indicates whether or not insurance was purchased. 
    /// </summary>
    public IsoTrueFalseIndicator? InsuranceIndicator { get; init; } 
    /// <summary>
    /// Contains the details of additional amount for a specific vehicle rental service type. 
    /// </summary>
    public Amount9? AdditionalAmount { get; init;  } // Warning: Don't know multiplicity.
    /// <summary>
    /// Taxes related to the products or services. 
    /// </summary>
    public Tax33? Tax { get; init;  } // Warning: Don't know multiplicity.
    
    #nullable disable
}
