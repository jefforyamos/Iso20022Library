//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for VerificationReport1.  ISO2002 ID# _Qo3U19p-Ed-ak6NoX_4Aeg_380722125.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Set of elements used to provide information concerning the verification of identification data for which verification was requested.
/// </summary>
public partial record VerificationReport1
     : IIsoXmlSerilizable<VerificationReport1>
{
    #nullable enable
    
    /// <summary>
    /// Unique identification, as assigned by a sending party, to unambiguously identify the party and account identification information group within the original message.
    /// </summary>
    public required IsoMax35Text OriginalIdentification { get; init; } 
    /// <summary>
    /// Identifies whether the party and/or account information received is correct.
    /// </summary>
    public required IsoIdentificationVerificationIndicator Verification { get; init; } 
    /// <summary>
    /// Specifies the reason why the verified identification information is incorrect.
    /// </summary>
    public VerificationReason1Choice_? Reason { get; init; } 
    /// <summary>
    /// Provides party and/or account identification information as given in the original message.
    /// </summary>
    public IdentificationInformation1? OriginalPartyAndAccountIdentification { get; init; } 
    /// <summary>
    /// Provides party and/or account identification information.
    /// </summary>
    public IdentificationInformation1? UpdatedPartyAndAccountIdentification { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "OrgnlId", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax35Text(OriginalIdentification)); // data type Max35Text System.String
        writer.WriteEndElement();
        writer.WriteStartElement(null, "Vrfctn", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoIdentificationVerificationIndicator(Verification)); // data type IdentificationVerificationIndicator System.String
        writer.WriteEndElement();
        if (Reason is VerificationReason1Choice_ ReasonValue)
        {
            writer.WriteStartElement(null, "Rsn", xmlNamespace );
            ReasonValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (OriginalPartyAndAccountIdentification is IdentificationInformation1 OriginalPartyAndAccountIdentificationValue)
        {
            writer.WriteStartElement(null, "OrgnlPtyAndAcctId", xmlNamespace );
            OriginalPartyAndAccountIdentificationValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (UpdatedPartyAndAccountIdentification is IdentificationInformation1 UpdatedPartyAndAccountIdentificationValue)
        {
            writer.WriteStartElement(null, "UpdtdPtyAndAcctId", xmlNamespace );
            UpdatedPartyAndAccountIdentificationValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static VerificationReport1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
