//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for VerificationResult1.  ISO2002 ID# _T2ITcEbXEeeIjf8aP9KbJA.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Result of verifications performed prior or after the transaction.
/// </summary>
public partial record VerificationResult1
     : IIsoXmlSerilizable<VerificationResult1>
{
    #nullable enable
    
    /// <summary>
    /// Type of the verification or authentication.
    /// </summary>
    public IsoMax35Text? Type { get; init; } 
    /// <summary>
    /// Entity who actually performed the verification.
    /// ISO 8583:93 bit 22-9
    /// </summary>
    public VerificationEntity1Code? Entity { get; init; } 
    /// <summary>
    /// Other national or private entity in charge of the verification.
    /// </summary>
    public IsoMax35Text? OtherEntity { get; init; } 
    /// <summary>
    /// Result of the verification.
    /// ISO 8583 : 2003 bit 49 dataset 72
    /// </summary>
    public Verification2Code? Result { get; init; } 
    /// <summary>
    /// Additional result of the verification, for instance for electronic commerce.
    /// </summary>
    public IsoMax500Text? OtherResult { get; init; } 
    /// <summary>
    /// Details of the result.
    /// </summary>
    public AdditionalData1? ResultDetails { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (Type is IsoMax35Text TypeValue)
        {
            writer.WriteStartElement(null, "Tp", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(TypeValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
        if (Entity is VerificationEntity1Code EntityValue)
        {
            writer.WriteStartElement(null, "Ntty", xmlNamespace );
            writer.WriteValue(EntityValue.ToString()); // Enum value
            writer.WriteEndElement();
        }
        if (OtherEntity is IsoMax35Text OtherEntityValue)
        {
            writer.WriteStartElement(null, "OthrNtty", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax35Text(OtherEntityValue)); // data type Max35Text System.String
            writer.WriteEndElement();
        }
        if (Result is Verification2Code ResultValue)
        {
            writer.WriteStartElement(null, "Rslt", xmlNamespace );
            writer.WriteValue(ResultValue.ToString()); // Enum value
            writer.WriteEndElement();
        }
        if (OtherResult is IsoMax500Text OtherResultValue)
        {
            writer.WriteStartElement(null, "OthrRslt", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax500Text(OtherResultValue)); // data type Max500Text System.String
            writer.WriteEndElement();
        }
        if (ResultDetails is AdditionalData1 ResultDetailsValue)
        {
            writer.WriteStartElement(null, "RsltDtls", xmlNamespace );
            ResultDetailsValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static VerificationResult1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
