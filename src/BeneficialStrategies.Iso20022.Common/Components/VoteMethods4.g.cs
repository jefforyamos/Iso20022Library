//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for VoteMethods4.  ISO2002 ID# _usSbdxrmEeyhRdHRjakS2w.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Information about the vote methods to be used.
/// </summary>
public partial record VoteMethods4
     : IIsoXmlSerilizable<VoteMethods4>
{
    #nullable enable
    
    /// <summary>
    /// Network address through which a voting party can cast its vote via a structured message.
    /// </summary>
    public SimpleValueList<IsoAnyBICDec2014Identifier> VoteThroughNetwork { get; init; } = [];
    /// <summary>
    /// Address where the voting ballot can be sent.
    /// </summary>
    public MailAddress1? VoteByMail { get; init; } 
    /// <summary>
    /// Electronic address, e-mail or web site, where a security holder can vote.
    /// </summary>
    public ValueList<CommunicationAddress12> ElectronicVote { get; init; } = [];
    /// <summary>
    /// Telephone number providing access to an automated voting system.
    /// </summary>
    public SimpleValueList<IsoMax35Text> VoteByTelephone { get; init; } = [];
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "VoteThrghNtwk", xmlNamespace );
        VoteThroughNetwork.Serialize(writer, xmlNamespace, "AnyBICDec2014Identifier", SerializationFormatter.IsoAnyBICDec2014Identifier );
        writer.WriteEndElement();
        if (VoteByMail is MailAddress1 VoteByMailValue)
        {
            writer.WriteStartElement(null, "VoteByMail", xmlNamespace );
            VoteByMailValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        writer.WriteStartElement(null, "ElctrncVote", xmlNamespace );
        ElectronicVote.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "VoteByTel", xmlNamespace );
        VoteByTelephone.Serialize(writer, xmlNamespace, "Max35Text", SerializationFormatter.IsoMax35Text );
        writer.WriteEndElement();
    }
    public static VoteMethods4 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
