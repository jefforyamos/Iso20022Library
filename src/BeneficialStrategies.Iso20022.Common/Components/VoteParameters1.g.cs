//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for VoteParameters1.  ISO2002 ID# _TlNxMNp-Ed-ak6NoX_4Aeg_-865781669.
//

using BeneficialStrategies.Iso20022.Choices;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Information describing how the voting process is organised.
/// </summary>
public partial record VoteParameters1
{
    #nullable enable
    
    /// <summary>
    /// Number of holdings required for a vote.
    /// </summary>
    public IsoDecimalNumber? SecuritiesQuantityRequiredToVote { get; init; } 
    /// <summary>
    /// Specifies whether it is allowed to only vote on a part of the entire holding, leaving part of the position un-voted.
    /// </summary>
    public required IsoYesNoIndicator PartialVoteAllowed { get; init; } 
    /// <summary>
    /// Specifies whether it is allowed to vote in different directions for the entire holding.
    /// </summary>
    public required IsoYesNoIndicator SplitVoteAllowed { get; init; } 
    /// <summary>
    /// Date and time by which the vote instructions should be submitted to the intermediary.
    /// </summary>
    public IDateFormat2Choice? VoteDeadline { get; init; } 
    /// <summary>
    /// Date and time by which the vote instructions should be submitted to the intermediary (STP mode).
    /// </summary>
    public IDateFormat2Choice? VoteSTPDeadline { get; init; } 
    /// <summary>
    /// Date and time by which the vote instructions should be submitted to the issuer.
    /// </summary>
    public IDateFormat2Choice? VoteMarketDeadline { get; init; } 
    /// <summary>
    /// Indicates the different methods that can be used to vote.
    /// </summary>
    public VoteMethods? VoteMethods { get; init; } 
    /// <summary>
    /// Electronic location, e-mail or URL address, where the voting ballot can be requested.
    /// </summary>
    public CommunicationAddress4? VotingBallotElectronicAddress { get; init; } 
    /// <summary>
    /// Specifies the postal address where the voting ballot can be requested.
    /// </summary>
    public PostalAddress1? VotingBallotRequestAddress { get; init; } 
    /// <summary>
    /// Date till which the instructing party can revoke, change or withdraw its voting instruction. This deadline is specified by an intermediary.
    /// </summary>
    public IDateFormat2Choice? RevocabilityDeadline { get; init; } 
    /// <summary>
    /// Date till which the instructing party can revoke, change or withdraw its voting instruction. This deadline is specified by an intermediary (STP mode).
    /// </summary>
    public IDateFormat2Choice? RevocabilitySTPDeadline { get; init; } 
    /// <summary>
    /// Date till which the instructing party can revoke, change or withdraw its voting instruction. This deadline is set by the issuer.
    /// </summary>
    public IDateFormat2Choice? RevocabilityMarketDeadline { get; init; } 
    /// <summary>
    /// Indicates whether beneficiary details (eg name and address) must be supplied in order to take part to a meeting.
    /// </summary>
    public required IsoYesNoIndicator BeneficialOwnerDisclosure { get; init; } 
    /// <summary>
    /// Identifies the possible types of voting instructions. When used at the resolution level, it supersedes the value specified in the meeting notice.
    /// </summary>
    // public IReadOnlyCollection<VoteInstruction2Code> VoteInstructionType { get; init; }
    /// <summary>
    /// Cash premium paid to the security holder when voting.
    /// </summary>
    public IncentivePremium2? IncentivePremium { get; init; } 
    /// <summary>
    /// Date and time by which the vote instructions should be submitted to the intermediary to take advantage of the premium.
    /// </summary>
    public IDateFormat2Choice? VoteWithPremiumDeadline { get; init; } 
    /// <summary>
    /// Date and time by which the vote instructions should be submitted to the intermediary to take advantage of the premium (STP mode).
    /// </summary>
    public IDateFormat2Choice? VoteWithPremiumSTPDeadline { get; init; } 
    /// <summary>
    /// Date and time by which the vote instructions should be submitted to the issuer to take advantage of the premium.
    /// </summary>
    public IDateFormat2Choice? VoteWithPremiumMarketDeadline { get; init; } 
    /// <summary>
    /// Additional information on specific requirements for allowing a person to vote.
    /// </summary>
    public IsoMax350Text? AdditionalVotingRequirements { get; init; } 
    
    #nullable disable
}
