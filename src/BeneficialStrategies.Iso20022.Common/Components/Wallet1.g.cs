//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentGenerator for Wallet1.  ISO2002 ID# _kmWJIEanEeeIjf8aP9KbJA.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;

namespace BeneficialStrategies.Iso20022.Components;

/// <summary>
/// Container for tenders used by the customer to perform the payment transaction.
/// </summary>
public partial record Wallet1
     : IIsoXmlSerilizable<Wallet1>
{
    #nullable enable
    
    /// <summary>
    /// Identification of the provider of the wallet.
    /// </summary>
    public PartyIdentification197? Provider { get; init; } 
    /// <summary>
    /// Additional data associated with wallet.
    /// </summary>
    public IsoMax256Text? AdditionalWalletData { get; init; } 
    
    #nullable disable
    
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (Provider is PartyIdentification197 ProviderValue)
        {
            writer.WriteStartElement(null, "Prvdr", xmlNamespace );
            ProviderValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (AdditionalWalletData is IsoMax256Text AdditionalWalletDataValue)
        {
            writer.WriteStartElement(null, "AddtlWlltData", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax256Text(AdditionalWalletDataValue)); // data type Max256Text System.String
            writer.WriteEndElement();
        }
    }
    public static Wallet1 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}
