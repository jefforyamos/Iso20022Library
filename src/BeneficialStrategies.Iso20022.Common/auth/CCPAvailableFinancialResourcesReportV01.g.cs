//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for CCPAvailableFinancialResourcesReportV01.  ISO2002 ID# _omGWYeUREem3X-64-NKdqg.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.Components;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Xml.Linq;

#if NET6_0_OR_GREATER // C# 10 
#else
using System.DateOnly=System.DateTime; // So data types will degrade gracefully
using System.TimeOnly=System.DateTime; // Same with this data type
#endif


namespace BeneficialStrategies.Iso20022.auth;

/// <summary>
/// This record is an implementation of the auth.064.001.01 ISO standard message type.
/// There are significant differences between different variants of the same message. It is crucial that you select exactly the implementation you intend to send or receive.
/// The CCPAvailableFinancialResourcesReport message is sent from the central counterparty to the national competent authority. It is used to inform the national competent authority of the aggregate quantum of resources available in each default waterfall to absorb losses resulting from the failure of one or more clearing member(s).
/// </summary>
[Description(@"The CCPAvailableFinancialResourcesReport message is sent from the central counterparty to the national competent authority. It is used to inform the national competent authority of the aggregate quantum of resources available in each default waterfall to absorb losses resulting from the failure of one or more clearing member(s).")]
[IsoId("_omGWYeUREem3X-64-NKdqg")]
#if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
[DisplayName("CCP Available Financial Resources Report V")]
#endif
#if DECLARE_SERIALIZABLE
[Serializable]
#endif
#if DECLARE_DATACONTRACT
[DataContract]
#endif
public partial record CCPAvailableFinancialResourcesReportV01 : IOuterRecord<CCPAvailableFinancialResourcesReportV01,CCPAvailableFinancialResourcesReportV01Document>
{
    
    /// <summary>
    /// The official ISO 20022 designation for this version of this message.
    /// </summary>
    public const string IsoIdentifier = "auth.064.001.01";
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "CCPAvlblFinRsrcsRpt";
    
    /// <summary>
    /// The XML namespace in which this message is delivered.
    /// </summary>
    public static string IsoXmlNamspace => CCPAvailableFinancialResourcesReportV01Document.DocumentNamespace;
    
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    // No constructor needed for NET8 and above.
    #else
    /// <summary>
    /// Constructs a CCPAvailableFinancialResourcesReportV01 instance using the members the ISO20022 deems required.
    /// It is higly recommended that you update to .NET 8 or above so you can use required initialization syntax instead
    /// </summary>
    public CCPAvailableFinancialResourcesReportV01( AvailableFinancialResourcesAmount1 reqAvailableFinancialResourcesAmount )
    {
        AvailableFinancialResourcesAmount = reqAvailableFinancialResourcesAmount;
    }
    #endif
    #nullable enable
    
    /// <summary>
    /// Construct used by a central counterparty to define the size of the aggregate quantum of resources available from a clearing member.
    /// </summary>
    [IsoId("_omGWaeUREem3X-64-NKdqg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Available Financial Resources Amount")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public required AvailableFinancialResourcesAmount1 AvailableFinancialResourcesAmount { get; init; } 
    #elif NET7_0_OR_GREATER // C# 11 Records, required members
    public AvailableFinancialResourcesAmount1 AvailableFinancialResourcesAmount { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public AvailableFinancialResourcesAmount1 AvailableFinancialResourcesAmount { get; init; } 
    #else
    public AvailableFinancialResourcesAmount1 AvailableFinancialResourcesAmount { get; set; } 
    #endif
    
    /// <summary>
    /// Breakdown of other CCP prefunded resources required as part of the default waterfall.
    /// </summary>
    [IsoId("_omGWa-UREem3X-64-NKdqg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Other Prefunded Resources")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public ReportingAssetBreakdown1? OtherPrefundedResources { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public ReportingAssetBreakdown1? OtherPrefundedResources { get; init; } 
    #else
    public ReportingAssetBreakdown1? OtherPrefundedResources { get; set; } 
    #endif
    
    /// <summary>
    /// Additional information that cannot be captured in the structured elements and/or any other specific block.
    /// </summary>
    [IsoId("_omGWbeUREem3X-64-NKdqg")]
    #if NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    [DisplayName("Supplementary Data")]
    #endif
    #if DECLARE_DATACONTRACT
    [DataMember]
    #endif
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public SupplementaryData1? SupplementaryData { get; init; } 
    #elif NET5_0_OR_GREATER // C# 9 Records, init-only setters, data annotations native
    public SupplementaryData1? SupplementaryData { get; init; } 
    #else
    public SupplementaryData1? SupplementaryData { get; set; } 
    #endif
    
    
    #nullable disable
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="CCPAvailableFinancialResourcesReportV01Document"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public CCPAvailableFinancialResourcesReportV01Document ToDocument()
    {
        return new CCPAvailableFinancialResourcesReportV01Document { Message = this };
    }
}

/// <summary>
/// This is the outer document that contains the XML serialization wrapper and necessary namespaces for proper serialization.
/// For a more complete description of the business meaning of the message, see the underlying <seealso cref="CCPAvailableFinancialResourcesReportV01"/>.
/// </summary>
[Serializable]
public partial record CCPAvailableFinancialResourcesReportV01Document : IOuterDocument<CCPAvailableFinancialResourcesReportV01>
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:auth.064.001.01";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "Document";
    
    /// <summary>
    /// The instance of <seealso cref="CCPAvailableFinancialResourcesReportV01"/> is required.
    /// </summary>
    #if NET8_0_OR_GREATER // C# 12 Global type alias
    public required CCPAvailableFinancialResourcesReportV01 Message { get; init; }
    #else
    public CCPAvailableFinancialResourcesReportV01 Message { get; init; }
    #endif
}
