//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for InformationRequestResponseV01.  ISO2002 ID# _6iqtkDzdEeGl7N0Cd54dlw.
//

using System.ComponentModel.DataAnnotations;
using BeneficialStrategies.Iso20022.Components;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;
using Helper = BeneficialStrategies.Iso20022.Framework.IsoXmlSerializationHelper<BeneficialStrategies.Iso20022.auth.InformationRequestResponseV01>;

namespace BeneficialStrategies.Iso20022.auth;


/// <summary>
/// This record is an implementation of the auth.002.001.01 ISO standard message type.
/// There are significant differences between different variants of the same message. It is crucial that you select exactly the implementation you intend to send or receive.
/// This message is sent by the financial institution to the authorities (police, customs, tax authorities, enforcement authorities) to provide a part or all of the requested information.
/// The financial institution previously received a request for financial information in the scope of a financial investigation.
/// 
/// Depending on whether the response can be provided STP within the authorities financial investigations messages, the requested information may be 
/// •	provided in part or in full within the response message itself, or 
/// •	only referred to in the response message.
/// </summary>
[Serializable]
[Description(@"This message is sent by the financial institution to the authorities (police, customs, tax authorities, enforcement authorities) to provide a part or all of the requested information.|The financial institution previously received a request for financial information in the scope of a financial investigation.||Depending on whether the response can be provided STP within the authorities financial investigations messages, the requested information may be |•	provided in part or in full within the response message itself, or |•	only referred to in the response message.")]
public partial record InformationRequestResponseV01 : IOuterRecord<InformationRequestResponseV01,InformationRequestResponseV01Document>
    ,IIsoXmlSerilizable<InformationRequestResponseV01>, ISerializeInsideARootElement
{
    
    /// <summary>
    /// The official ISO 20022 designation for this version of this message.
    /// </summary>
    public const string IsoIdentifier = "auth.002.001.01";
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "InfReqRspn";
    
    /// <summary>
    /// The XML namespace in which this message is delivered.
    /// </summary>
    public static string IsoXmlNamspace => InformationRequestResponseV01Document.DocumentNamespace;
    
    #nullable enable
    /// <summary>
    /// Unique identification for the specific investigation as know by the responding party.
    /// </summary>
    [IsoId("_DSEUezzjEeGl7N0Cd54dlw")]
    [Description(@"Unique identification for the specific investigation as know by the responding party.")]
    [DataMember(Name="RspnId")]
    [XmlElement(ElementName="RspnId")]
    [Required]
    public required IsoMax35Text ResponseIdentification { get; init; }
    
    /// <summary>
    /// Unique identification for the specific investigation as known by the requesting party.
    /// </summary>
    [IsoId("_gF8WOzzoEeGl7N0Cd54dlw")]
    [Description(@"Unique identification for the specific investigation as known by the requesting party.")]
    [DataMember(Name="InvstgtnId")]
    [XmlElement(ElementName="InvstgtnId")]
    [Required]
    public required IsoMax35Text InvestigationIdentification { get; init; }
    
    /// <summary>
    /// Provides the status of the response.
    /// </summary>
    [IsoId("_t0ETGzzoEeGl7N0Cd54dlw")]
    [Description(@"Provides the status of the response.")]
    [DataMember(Name="RspnSts")]
    [XmlElement(ElementName="RspnSts")]
    [Required]
    public required StatusResponse1Code ResponseStatus { get; init; }
    
    /// <summary>
    /// Specifies the the search criteria for the financial institution to perform the search on. The search criteria can be an account, a customer identification or a payment instrument type.
    /// </summary>
    [IsoId("_U4B7wV0zEeGwFY7pvwHH-g")]
    [Description(@"Specifies the the search criteria for the financial institution to perform the search on. The search criteria can be an account, a customer identification or a payment instrument type.")]
    [DataMember(Name="SchCrit")]
    [XmlElement(ElementName="SchCrit")]
    [Required]
    public required SearchCriteria1Choice_ SearchCriteria { get; init; }
    
    /// <summary>
    /// Provides the return indicators and the investigation result.
    /// </summary>
    [IsoId("_UbboITzuEeGl7N0Cd54dlw")]
    [Description(@"Provides the return indicators and the investigation result.")]
    [DataMember(Name="RtrInd")]
    [XmlElement(ElementName="RtrInd")]
    [Required]
    public required ReturnIndicator1 ReturnIndicator { get; init; }
    
    /// <summary>
    /// Additional information that can not be captured in the structured fields and/or any other specific block.
    /// </summary>
    [IsoId("_ICHsnzzvEeGl7N0Cd54dlw")]
    [Description(@"Additional information that can not be captured in the structured fields and/or any other specific block.")]
    [DataMember(Name="SplmtryData")]
    [XmlElement(ElementName="SplmtryData")]
    public SupplementaryData1? SupplementaryData { get; init; }
    
    #nullable disable
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="InformationRequestResponseV01Document"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public InformationRequestResponseV01Document ToDocument()
    {
        return new InformationRequestResponseV01Document { Message = this };
    }
    public static XName RootElement => Helper.CreateXName("InfReqRspn");
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "RspnId", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax35Text(ResponseIdentification)); // data type Max35Text System.String
        writer.WriteEndElement();
        writer.WriteStartElement(null, "InvstgtnId", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax35Text(InvestigationIdentification)); // data type Max35Text System.String
        writer.WriteEndElement();
        writer.WriteStartElement(null, "RspnSts", xmlNamespace );
        writer.WriteValue(ResponseStatus.ToString()); // Enum value
        writer.WriteEndElement();
        writer.WriteStartElement(null, "SchCrit", xmlNamespace );
        SearchCriteria.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "RtrInd", xmlNamespace );
        ReturnIndicator.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (SupplementaryData is SupplementaryData1 SupplementaryDataValue)
        {
            writer.WriteStartElement(null, "SplmtryData", xmlNamespace );
            SupplementaryDataValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static InformationRequestResponseV01 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}

/// <summary>
/// This is the outer document that contains the XML serialization wrapper and necessary namespaces for proper serialization.
/// For a more complete description of the business meaning of the message, see the underlying <seealso cref="InformationRequestResponseV01"/>.
/// </summary>
[Serializable]
public partial record InformationRequestResponseV01Document : IOuterDocument<InformationRequestResponseV01>, IXmlSerializable
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:auth.002.001.01";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "Document";
    
    /// <summary>
    /// The instance of <seealso cref="InformationRequestResponseV01"/> is required.
    /// </summary>
    [DataMember(Name=InformationRequestResponseV01.XmlTag)]
    public required InformationRequestResponseV01 Message { get; init; }
    public void WriteXml(XmlWriter writer)
    {
        writer.WriteStartElement(null, DocumentElementName, DocumentNamespace );
        writer.WriteStartElement(InformationRequestResponseV01.XmlTag);
        Message.Serialize(writer, DocumentNamespace);
        writer.WriteEndElement();
        writer.WriteEndElement();
        writer.WriteEndDocument();
    }
    
    public void ReadXml(XmlReader reader)
    {
        throw new NotImplementedException();
    }
    
    public System.Xml.Schema.XmlSchema GetSchema() => null;
}
