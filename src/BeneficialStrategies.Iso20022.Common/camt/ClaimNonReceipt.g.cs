//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for ClaimNonReceipt.  ISO2002 ID# _QSbl2NE-Ed-BzquC8wXy7w_1911280425.
//

using System.ComponentModel.DataAnnotations;
using BeneficialStrategies.Iso20022.Components;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;
using Helper = BeneficialStrategies.Iso20022.Framework.IsoXmlSerializationHelper<BeneficialStrategies.Iso20022.camt.ClaimNonReceipt>;

namespace BeneficialStrategies.Iso20022.camt;


/// <summary>
/// This record is an implementation of the camt.027.001.01 ISO standard message type.
/// There are significant differences between different variants of the same message. It is crucial that you select exactly the implementation you intend to send or receive.
/// Scope|The Claim Non Receipt message is sent by a case creator/case assigner to a case assignee.|This message allows to initiate an investigation in case the beneficiary of a payment has not received an expected payment.|Usage|Note 1: Although there are cases where a creditor would contact the creditor's bank when claiming non-receipt, the activity only retained the scenario where the beneficiary claims non-receipt with its debtor, the debtor in its turn contacting the first agent. Therefore the investigation follows the same route as the original instruction.|Note 2: This message is also used to report a missing cover. The rationale behind this is that the beneficiary of the cover (receiver of the payment instruction) missing the cover would be in the very same position as a beneficiary expecting a credit to its account and would therefore trigger the same processes.|In case of a Missing cover, the case will be assigned to the sender of the payment instruction, before following the route of the payment instruction.
/// </summary>
[Serializable]
[Description(@"Scope|The Claim Non Receipt message is sent by a case creator/case assigner to a case assignee.|This message allows to initiate an investigation in case the beneficiary of a payment has not received an expected payment.|Usage|Note 1: Although there are cases where a creditor would contact the creditor's bank when claiming non-receipt, the activity only retained the scenario where the beneficiary claims non-receipt with its debtor, the debtor in its turn contacting the first agent. Therefore the investigation follows the same route as the original instruction.|Note 2: This message is also used to report a missing cover. The rationale behind this is that the beneficiary of the cover (receiver of the payment instruction) missing the cover would be in the very same position as a beneficiary expecting a credit to its account and would therefore trigger the same processes.|In case of a Missing cover, the case will be assigned to the sender of the payment instruction, before following the route of the payment instruction.")]
public partial record ClaimNonReceipt : IOuterRecord<ClaimNonReceipt,ClaimNonReceiptDocument>
    ,IIsoXmlSerilizable<ClaimNonReceipt>, ISerializeInsideARootElement
{
    
    /// <summary>
    /// The official ISO 20022 designation for this version of this message.
    /// </summary>
    public const string IsoIdentifier = "camt.027.001.01";
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "camt.027.001.01";
    
    /// <summary>
    /// The XML namespace in which this message is delivered.
    /// </summary>
    public static string IsoXmlNamspace => ClaimNonReceiptDocument.DocumentNamespace;
    
    #nullable enable
    /// <summary>
    /// Identifies an assignment.
    /// </summary>
    [IsoId("_QSlW0NE-Ed-BzquC8wXy7w_830291630")]
    [Description(@"Identifies an assignment.")]
    [DataMember(Name="Assgnmt")]
    [XmlElement(ElementName="Assgnmt")]
    [Required]
    public required CaseAssignment Assignment { get; init; }
    
    /// <summary>
    /// Identifies a case.
    /// </summary>
    [IsoId("_QSlW0dE-Ed-BzquC8wXy7w_843221783")]
    [Description(@"Identifies a case.")]
    [DataMember(Name="Case")]
    [XmlElement(ElementName="Case")]
    [Required]
    public required Case Case { get; init; }
    
    /// <summary>
    /// Identifies the payment instruction for which the Creditor has not received the funds.|Note: |In case of a missing cover, it must be the Field 20 of the received MT103.|In case of a claim non receipt initiated by the Debtor, it must be the identification of the instruction (Field 20 of MT103, Instruction Identification of the Payment Initiation or the Bulk Credit Transfer).
    /// </summary>
    [IsoId("_QSlW0tE-Ed-BzquC8wXy7w_857073686")]
    [Description(@"Identifies the payment instruction for which the Creditor has not received the funds.|Note: |In case of a missing cover, it must be the Field 20 of the received MT103.|In case of a claim non receipt initiated by the Debtor, it must be the identification of the instruction (Field 20 of MT103, Instruction Identification of the Payment Initiation or the Bulk Credit Transfer).")]
    [DataMember(Name="Undrlyg")]
    [XmlElement(ElementName="Undrlyg")]
    [Required]
    public required PaymentInstructionExtract Underlying { get; init; }
    
    /// <summary>
    /// Indicates if the claim non receipt is a missing cover. The absence of the component means that the message is not for a missing cover.
    /// </summary>
    [IsoId("_QSlW09E-Ed-BzquC8wXy7w_-476196427")]
    [Description(@"Indicates if the claim non receipt is a missing cover. The absence of the component means that the message is not for a missing cover.")]
    [DataMember(Name="MssngCover")]
    [XmlElement(ElementName="MssngCover")]
    public MissingCover? MissingCover { get; init; }
    
    #nullable disable
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="ClaimNonReceiptDocument"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public ClaimNonReceiptDocument ToDocument()
    {
        return new ClaimNonReceiptDocument { Message = this };
    }
    public static XName RootElement => Helper.CreateXName("camt.027.001.01");
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Assgnmt", xmlNamespace );
        Assignment.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "Case", xmlNamespace );
        Case.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "Undrlyg", xmlNamespace );
        Underlying.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (MissingCover is MissingCover MissingCoverValue)
        {
            writer.WriteStartElement(null, "MssngCover", xmlNamespace );
            MissingCoverValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static ClaimNonReceipt Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}

/// <summary>
/// This is the outer document that contains the XML serialization wrapper and necessary namespaces for proper serialization.
/// For a more complete description of the business meaning of the message, see the underlying <seealso cref="ClaimNonReceipt"/>.
/// </summary>
[Serializable]
public partial record ClaimNonReceiptDocument : IOuterDocument<ClaimNonReceipt>, IXmlSerializable
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:camt.027.001.01";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "Document";
    
    /// <summary>
    /// The instance of <seealso cref="ClaimNonReceipt"/> is required.
    /// </summary>
    [DataMember(Name=ClaimNonReceipt.XmlTag)]
    public required ClaimNonReceipt Message { get; init; }
    public void WriteXml(XmlWriter writer)
    {
        writer.WriteStartElement(null, DocumentElementName, DocumentNamespace );
        writer.WriteStartElement(ClaimNonReceipt.XmlTag);
        Message.Serialize(writer, DocumentNamespace);
        writer.WriteEndElement();
        writer.WriteEndElement();
        writer.WriteEndDocument();
    }
    
    public void ReadXml(XmlReader reader)
    {
        throw new NotImplementedException();
    }
    
    public System.Xml.Schema.XmlSchema GetSchema() => null;
}
