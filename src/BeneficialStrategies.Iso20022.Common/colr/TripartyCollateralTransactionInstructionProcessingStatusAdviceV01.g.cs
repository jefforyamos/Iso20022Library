//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for TripartyCollateralTransactionInstructionProcessingStatusAdviceV01.  ISO2002 ID# _2uaNCys7EeySlt9bF77XfA.
//
namespace BeneficialStrategies.Iso20022.colr;

/// <summary>
/// Scope: 
/// This message is sent by a triparty agent after the receipt of a collateral instruction from its client.
/// In this message, the Sender is the triparty agent and the Receiver is either the collateral taker or the collateral giver or their account servicer.
/// Usage:
/// This message provides the status of the Triparty collateral transaction or instruction.
/// </summary>
[Serializable]
[DataContract(Name = XmlTag)]
[XmlType(TypeName = XmlTag)]
[Description(@"Scope: |This message is sent by a triparty agent after the receipt of a collateral instruction from its client.||In this message, the Sender is the triparty agent and the Receiver is either the collateral taker or the collateral giver or their account servicer.||Usage:|This message provides the status of the Triparty collateral transaction or instruction.")]
public partial record TripartyCollateralTransactionInstructionProcessingStatusAdviceV01 : IOuterRecord
{
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "TrptyCollTxInstrPrcgStsAdvc";
    
    /* ------------------------------------------ Underlying data types not ready yet
    /// <summary>
    /// Provides unambiguous transaction identification information.
    /// </summary>
    [IsoId("_2uaNEys7EeySlt9bF77XfA")]
    [Description(@"Provides unambiguous transaction identification information.|")]
    [DataMember(Name="TxInstrId")]
    [XmlElement(ElementName="TxInstrId")]
    [Required]
    public required TransactionIdentifications46 TransactionInstructionIdentification { get; init; }
    
    /// <summary>
    /// Reference to the unambiguous identification of the cancellation request as per the account owner.
    /// </summary>
    [IsoId("_2uaNFSs7EeySlt9bF77XfA")]
    [Description(@"Reference to the unambiguous identification of the cancellation request as per the account owner.")]
    [DataMember(Name="CxlReqRef")]
    [XmlElement(ElementName="CxlReqRef")]
    public IsoMax35Text? CancellationRequestReference { get; init; }
    
    /// <summary>
    /// Page number of the message and continuation indicator to indicate that the multi-part preliminary advice is to continue or that the message is the last page of the multi-part preliminary advice.
    /// </summary>
    [IsoId("_2uaNFys7EeySlt9bF77XfA")]
    [Description(@"Page number of the message and continuation indicator to indicate that the multi-part preliminary advice is to continue or that the message is the last page of the multi-part preliminary advice.")]
    [DataMember(Name="Pgntn")]
    [XmlElement(ElementName="Pgntn")]
    [Required]
    public required Pagination1 Pagination { get; init; }
    
    /// <summary>
    /// Provides the status of an instruction.
    /// </summary>
    [IsoId("_2uaNGSs7EeySlt9bF77XfA")]
    [Description(@"Provides the status of an instruction.")]
    [DataMember(Name="InstrPrcgSts")]
    [XmlElement(ElementName="InstrPrcgSts")]
    public IProcessingStatus82Choice? InstructionProcessingStatus { get; init; }
    
    /// <summary>
    /// Provides the matching status of the instruction.
    /// </summary>
    [IsoId("_2uaNGys7EeySlt9bF77XfA")]
    [Description(@"Provides the matching status of the instruction.")]
    [DataMember(Name="MtchgSts")]
    [XmlElement(ElementName="MtchgSts")]
    public IMatchingStatus33Choice? MatchingStatus { get; init; }
    
    /// <summary>
    /// Provides the status of a cancellation request or status query.
    /// </summary>
    [IsoId("_2uaNHSs7EeySlt9bF77XfA")]
    [Description(@"Provides the status of a cancellation request or status query.|")]
    [DataMember(Name="CxlPrcgSts")]
    [XmlElement(ElementName="CxlPrcgSts")]
    public ICancellationStatus30Choice? CancellationProcessingStatus { get; init; }
    
    /// <summary>
    /// provides general information about the instruction and collateral transaction the message refers to.
    /// </summary>
    [IsoId("_2uaNHys7EeySlt9bF77XfA")]
    [Description(@"provides general information about the instruction and collateral transaction the message refers to.|")]
    [DataMember(Name="GnlParams")]
    [XmlElement(ElementName="GnlParams")]
    [Required]
    public required CollateralParameters12 GeneralParameters { get; init; }
    
    /// <summary>
    /// Identifies the chain of collateral parties.
    /// </summary>
    [IsoId("_2uaNISs7EeySlt9bF77XfA")]
    [Description(@"Identifies the chain of collateral parties.|")]
    [DataMember(Name="CollPties")]
    [XmlElement(ElementName="CollPties")]
    [Required]
    public required CollateralParties8 CollateralParties { get; init; }
    
    /// <summary>
    /// Specifies the information related to the deal.
    /// </summary>
    [IsoId("_2uaNIys7EeySlt9bF77XfA")]
    [Description(@"Specifies the information related to the deal.")]
    [DataMember(Name="DealTxDtls")]
    [XmlElement(ElementName="DealTxDtls")]
    [Required]
    public required DealTransactionDetails7 DealTransactionDetails { get; init; }
    
    /// <summary>
    /// Identifies the dates related to the triparty collateral instruction or transactions.
    /// </summary>
    [IsoId("_2uaNJSs7EeySlt9bF77XfA")]
    [Description(@"Identifies the dates related to the triparty collateral instruction or transactions.|")]
    [DataMember(Name="DealTxDt")]
    [XmlElement(ElementName="DealTxDt")]
    [Required]
    public required CollateralDate2 DealTransactionDate { get; init; }
    
    /// <summary>
    /// Securities movements.
    /// </summary>
    [IsoId("_2uaNJys7EeySlt9bF77XfA")]
    [Description(@"Securities movements.")]
    [DataMember(Name="SctiesMvmnt")]
    [XmlElement(ElementName="SctiesMvmnt")]
    public SecuritiesMovement8? SecuritiesMovement { get; init; }
    
    /// <summary>
    ///  Cash movement
    /// </summary>
    [IsoId("_2uaNKSs7EeySlt9bF77XfA")]
    [Description(@" Cash movement")]
    [DataMember(Name="CshMvmnt")]
    [XmlElement(ElementName="CshMvmnt")]
    public CashMovement7? CashMovement { get; init; }
    
    /// <summary>
    /// Additional information that cannot be captured in the structured elements and/or any other specific block.
    /// </summary>
    [IsoId("_2uaNKys7EeySlt9bF77XfA")]
    [Description(@"Additional information that cannot be captured in the structured elements and/or any other specific block.")]
    [DataMember(Name="SplmtryData")]
    [XmlElement(ElementName="SplmtryData")]
    public SupplementaryData1? SupplementaryData { get; init; }
    
    */
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="TripartyCollateralTransactionInstructionProcessingStatusAdviceV01Document"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public TripartyCollateralTransactionInstructionProcessingStatusAdviceV01Document ToDocument()
    {
        return new TripartyCollateralTransactionInstructionProcessingStatusAdviceV01Document { Message = this };
    }
}

/// <summary>
/// This is the outer document that contains the XML serialization wrapper and necessary namespaces for proper serialization.
/// For a more complete description of the business meaning of the message, see the underlying <seealso cref="TripartyCollateralTransactionInstructionProcessingStatusAdviceV01"/>.
/// </summary>
[Serializable]
[DataContract(Name = DocumentElementName, Namespace = DocumentNamespace )]
[XmlRoot(ElementName = DocumentElementName, Namespace = DocumentNamespace )]
public partial record TripartyCollateralTransactionInstructionProcessingStatusAdviceV01Document : IOuterDocument<TripartyCollateralTransactionInstructionProcessingStatusAdviceV01>
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:colr.020.001.01";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "Document";
    
    /// <summary>
    /// The instance of <seealso cref="TripartyCollateralTransactionInstructionProcessingStatusAdviceV01"/> is required.
    /// </summary>
    public required TripartyCollateralTransactionInstructionProcessingStatusAdviceV01 Message { get; init; }
}
