//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for ForeignExchangeTradeCaptureReportV01.  ISO2002 ID# _OqvAMkRZEeSWxNI5mwqKGQ.
//
namespace BeneficialStrategies.Iso20022.fxtr;

/// <summary>
/// Scope
/// The ForeignExchangeTradeCaptureReport message is sent by a trading system to a participant for notification and providing details of a treasury trade.
/// Usage
/// The report is sent by the trading system to the two trading parties after their trade has been executed. 
/// The report can also be sent by the trading system to a trading parties to respond their inquiry (TradeCaptureRequest). 
/// Note that multiple reports can be sent to respond one inquiry message.
/// The message may contains trade details and trading parties' information.
/// </summary>
[Serializable]
[DataContract(Name = XmlTag)]
[XmlType(TypeName = XmlTag)]
[Description(@"Scope|The ForeignExchangeTradeCaptureReport message is sent by a trading system to a participant for notification and providing details of a treasury trade.|Usage|The report is sent by the trading system to the two trading parties after their trade has been executed. |The report can also be sent by the trading system to a trading parties to respond their inquiry (TradeCaptureRequest). |Note that multiple reports can be sent to respond one inquiry message.|The message may contains trade details and trading parties' information.")]
public partial record ForeignExchangeTradeCaptureReportV01 : IOuterRecord
{
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "FXTradCaptrRpt";
    
    /* ------------------------------------------ Underlying data types not ready yet
    public required string SomeProperty { get; init; }
    */
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="ForeignExchangeTradeCaptureReportV01Document"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public ForeignExchangeTradeCaptureReportV01Document ToDocument()
    {
        return new ForeignExchangeTradeCaptureReportV01Document { Message = this };
    }
}

/// <summary>
/// Scope
/// The ForeignExchangeTradeCaptureReport message is sent by a trading system to a participant for notification and providing details of a treasury trade.
/// Usage
/// The report is sent by the trading system to the two trading parties after their trade has been executed. 
/// The report can also be sent by the trading system to a trading parties to respond their inquiry (TradeCaptureRequest). 
/// Note that multiple reports can be sent to respond one inquiry message.
/// The message may contains trade details and trading parties' information.
/// This is the outer document that contains <seealso cref="ForeignExchangeTradeCaptureReportV01"/>.
/// </summary>
[Serializable]
[DataContract(Name = DocumentElementName, Namespace = DocumentNamespace )]
[XmlRoot(ElementName = DocumentElementName, Namespace = DocumentNamespace )]
public partial record ForeignExchangeTradeCaptureReportV01Document : IOuterDocument<ForeignExchangeTradeCaptureReportV01>
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:fxtr.031.001.01";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "Document";
    
    /// <summary>
    /// The instance of <seealso cref="ForeignExchangeTradeCaptureReportV01"/> is required.
    /// </summary>
    public required ForeignExchangeTradeCaptureReportV01 Message { get; init; }
}
