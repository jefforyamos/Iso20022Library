//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for ForeignExchangeTradeConfirmationStatusAdviceAcknowledgementV01.  ISO2002 ID# _4rvHkER_EeStEe_B2dcrqg.
//

using System.ComponentModel.DataAnnotations;
using BeneficialStrategies.Iso20022.Components;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.fxtr;


/// <summary>
/// Scope
/// The ForeignExchangeTradeConfirmationStatusAdviceAcknowledgement message is sent from a market participant to a Central matching utility (CMU) in response to the FXTradeConfirmationStatusAdvice previously sent by the CMU in the scenario of trades matched by both participants.
/// Usage
/// The acknowledgement is sent by the trading member to the CMU after they received the confirmation status advice. 
/// Note that one confirmation status advice acknowledgement responds to one confirmation status advice.
/// </summary>
[Serializable]
[DataContract(Name = XmlTag)]
[XmlType(TypeName = XmlTag)]
[Description(@"Scope|The ForeignExchangeTradeConfirmationStatusAdviceAcknowledgement message is sent from a market participant to a Central matching utility (CMU) in response to the FXTradeConfirmationStatusAdvice previously sent by the CMU in the scenario of trades matched by both participants.||Usage|The acknowledgement is sent by the trading member to the CMU after they received the confirmation status advice. |Note that one confirmation status advice acknowledgement responds to one confirmation status advice.")]
public partial record ForeignExchangeTradeConfirmationStatusAdviceAcknowledgementV01 : IOuterRecord
{
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "FXTradConfStsAdvcAck";
    
    #nullable enable
    /// <summary>
    /// Identification of the advice acknowledgement.
    /// </summary>
    [IsoId("_BRy-cESAEeStEe_B2dcrqg")]
    [Description(@"Identification of the advice acknowledgement.")]
    [DataMember(Name="AdvcAckId")]
    [XmlElement(ElementName="AdvcAckId")]
    public MessageIdentification1? AdviceAcknowledgementIdentification { get; init; }
    
    /// <summary>
    /// Identification of the request.
    /// </summary>
    [IsoId("__tUJkESjEeS6cOLECtYLrA")]
    [Description(@"Identification of the request.")]
    [DataMember(Name="ReqId")]
    [XmlElement(ElementName="ReqId")]
    [Required]
    public required MessageIdentification1 RequestIdentification { get; init; }
    
    /// <summary>
    /// Specifies the date on which the trade was executed.
    /// </summary>
    [IsoId("_TqsBUESAEeStEe_B2dcrqg")]
    [Description(@"Specifies the date on which the trade was executed.")]
    [DataMember(Name="TradDt")]
    [XmlElement(ElementName="TradDt")]
    [Required]
    public required IsoISODate TradeDate { get; init; }
    
    /// <summary>
    /// Unique reference identification assigned to the trade by the instructing party. This reference will be used throughout the trade life cycle to identify the particular trade.
    /// </summary>
    [IsoId("_qe6B0IsSEeS_1fMypAW06w")]
    [Description(@"Unique reference identification assigned to the trade by the instructing party. This reference will be used throughout the trade life cycle to identify the particular trade.")]
    [DataMember(Name="TradId")]
    [XmlElement(ElementName="TradId")]
    [Required]
    public required IsoMax35Text TradeIdentification { get; init; }
    
    /// <summary>
    /// Identifies the type of the trade mode.
    /// </summary>
    [IsoId("_wbqUIIsSEeS_1fMypAW06w")]
    [Description(@"Identifies the type of the trade mode.")]
    [DataMember(Name="TradgMd")]
    [XmlElement(ElementName="TradgMd")]
    [Required]
    public required TradingModeType1Code TradingMode { get; init; }
    
    /// <summary>
    /// Identifies the status of the confirmation acknowledgement.
    /// </summary>
    [IsoId("_viJsEESvEeSTS-T7FO4CUQ")]
    [Description(@"Identifies the status of the confirmation acknowledgement.")]
    [DataMember(Name="AffirmSts")]
    [XmlElement(ElementName="AffirmSts")]
    [Required]
    public required AffirmStatus1Code AffirmationStatus { get; init; }
    
    /// <summary>
    /// Identifies the status of the confirmation.
    /// </summary>
    [IsoId("_pYBHsIsREeS_1fMypAW06w")]
    [Description(@"Identifies the status of the confirmation.")]
    [DataMember(Name="ConfSts")]
    [XmlElement(ElementName="ConfSts")]
    [Required]
    public required TradeConfirmationStatus1Code ConfirmationStatus { get; init; }
    
    /// <summary>
    /// Market in which a trade transaction has been executed.
    /// </summary>
    [IsoId("_RD1T0ESAEeStEe_B2dcrqg")]
    [Description(@"Market in which a trade transaction has been executed.")]
    [DataMember(Name="MktId")]
    [XmlElement(ElementName="MktId")]
    [Required]
    public required MarketIdentification88 MarketIdentification { get; init; }
    
    /// <summary>
    /// Free format text string.
    /// </summary>
    [IsoId("_aiEI0ESAEeStEe_B2dcrqg")]
    [Description(@"Free format text string.")]
    [DataMember(Name="AddtlInf")]
    [XmlElement(ElementName="AddtlInf")]
    public AdditionalInformation5? AdditionalInformation { get; init; }
    
    /// <summary>
    /// Additional information that cannot be captured in the structured elements and/or any other specific block.
    /// </summary>
    [IsoId("_1wlvYKHlEeS69KkQis5bYg")]
    [Description(@"Additional information that cannot be captured in the structured elements and/or any other specific block.")]
    [DataMember(Name="SplmtryData")]
    [XmlElement(ElementName="SplmtryData")]
    public SupplementaryData1? SupplementaryData { get; init; }
    
    #nullable disable
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="ForeignExchangeTradeConfirmationStatusAdviceAcknowledgementV01Document"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public ForeignExchangeTradeConfirmationStatusAdviceAcknowledgementV01Document ToDocument()
    {
        return new ForeignExchangeTradeConfirmationStatusAdviceAcknowledgementV01Document { Message = this };
    }
}

/// <summary>
/// This is the outer document that contains the XML serialization wrapper and necessary namespaces for proper serialization.
/// For a more complete description of the business meaning of the message, see the underlying <seealso cref="ForeignExchangeTradeConfirmationStatusAdviceAcknowledgementV01"/>.
/// </summary>
[Serializable]
[DataContract(Name = DocumentElementName, Namespace = DocumentNamespace )]
[XmlRoot(ElementName = DocumentElementName, Namespace = DocumentNamespace )]
public partial record ForeignExchangeTradeConfirmationStatusAdviceAcknowledgementV01Document : IOuterDocument<ForeignExchangeTradeConfirmationStatusAdviceAcknowledgementV01>
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:fxtr.038.001.01";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "Document";
    
    /// <summary>
    /// The instance of <seealso cref="ForeignExchangeTradeConfirmationStatusAdviceAcknowledgementV01"/> is required.
    /// </summary>
    public required ForeignExchangeTradeConfirmationStatusAdviceAcknowledgementV01 Message { get; init; }
}
