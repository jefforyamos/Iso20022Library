//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for ForeignExchangeTradeWithdrawalNotificationV03.  ISO2002 ID# _K7tXYS53EeKwTrPDLMbLxA.
//

using System.ComponentModel.DataAnnotations;
using BeneficialStrategies.Iso20022.Components;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;
using Helper = BeneficialStrategies.Iso20022.Framework.IsoXmlSerializationHelper<BeneficialStrategies.Iso20022.fxtr.ForeignExchangeTradeWithdrawalNotificationV03>;

namespace BeneficialStrategies.Iso20022.fxtr;


/// <summary>
/// This record is an implementation of the fxtr.013.001.03 ISO standard message type.
/// There are significant differences between different variants of the same message. It is crucial that you select exactly the implementation you intend to send or receive.
/// Scope
/// The ForeignExchangeTradeWithdrawalNotification message is sent by a central system to notify the withdrawal of a foreign exchange trade which was previously notified to the receiver as an alleged trade.
/// Usage
/// The ForeignExchangeTradeWithdrawalNotification message is used to confirm the cancellation of a previously notified trade.
/// </summary>
[Serializable]
[Description(@"Scope|The ForeignExchangeTradeWithdrawalNotification message is sent by a central system to notify the withdrawal of a foreign exchange trade which was previously notified to the receiver as an alleged trade.|Usage|The ForeignExchangeTradeWithdrawalNotification message is used to confirm the cancellation of a previously notified trade.")]
public partial record ForeignExchangeTradeWithdrawalNotificationV03 : IOuterRecord<ForeignExchangeTradeWithdrawalNotificationV03,ForeignExchangeTradeWithdrawalNotificationV03Document>
    ,IIsoXmlSerilizable<ForeignExchangeTradeWithdrawalNotificationV03>, ISerializeInsideARootElement
{
    
    /// <summary>
    /// The official ISO 20022 designation for this version of this message.
    /// </summary>
    public const string IsoIdentifier = "fxtr.013.001.03";
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "FXTradWdrwlNtfctn";
    
    /// <summary>
    /// The XML namespace in which this message is delivered.
    /// </summary>
    public static string IsoXmlNamspace => ForeignExchangeTradeWithdrawalNotificationV03Document.DocumentNamespace;
    
    #nullable enable
    /// <summary>
    /// Identification of the present message assigned by the party issuing the message. This identification must be unique amongst all messages of same type sent by the same party.
    /// </summary>
    [IsoId("_oEmmtzqMEeKXK8qRvydwAw")]
    [Description(@"Identification of the present message assigned by the party issuing the message. This identification must be unique amongst all messages of same type sent by the same party.")]
    [DataMember(Name="MsgId")]
    [XmlElement(ElementName="MsgId")]
    [Required]
    public required IsoMax35Text MessageIdentification { get; init; }
    
    /// <summary>
    /// Reference to the unique system identification assigned to the trade by the central matching system.
    /// </summary>
    [IsoId("_g9h2VTqMEeKXK8qRvydwAw")]
    [Description(@"Reference to the unique system identification assigned to the trade by the central matching system.")]
    [DataMember(Name="MtchgSysUnqRef")]
    [XmlElement(ElementName="MtchgSysUnqRef")]
    [Required]
    public required IsoMax35Text MatchingSystemUniqueReference { get; init; }
    
    /// <summary>
    /// Reason for the withdrawal notification.
    /// </summary>
    [IsoId("_eHZflZEkEeKcLcxonNWTXg")]
    [Description(@"Reason for the withdrawal notification.")]
    [DataMember(Name="WdrwlRsn")]
    [XmlElement(ElementName="WdrwlRsn")]
    public WithdrawalReason1? WithdrawalReason { get; init; }
    
    /// <summary>
    /// To indicate the requested CLS Settlement Session that the related trade is part of.
    /// </summary>
    [IsoId("_QVqk05TkEeKShbaq9ixROw")]
    [Description(@"To indicate the requested CLS Settlement Session that the related trade is part of.")]
    [DataMember(Name="SttlmSsnIdr")]
    [XmlElement(ElementName="SttlmSsnIdr")]
    public IsoExact4AlphaNumericText? SettlementSessionIdentifier { get; init; }
    
    /// <summary>
    /// Additional information that cannot be captured in the structured elements and/or any other specific block.
    /// </summary>
    [IsoId("_GJJnaS53EeKwTrPDLMbLxA")]
    [Description(@"Additional information that cannot be captured in the structured elements and/or any other specific block.")]
    [DataMember(Name="SplmtryData")]
    [XmlElement(ElementName="SplmtryData")]
    public SupplementaryData1? SupplementaryData { get; init; }
    
    #nullable disable
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="ForeignExchangeTradeWithdrawalNotificationV03Document"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public ForeignExchangeTradeWithdrawalNotificationV03Document ToDocument()
    {
        return new ForeignExchangeTradeWithdrawalNotificationV03Document { Message = this };
    }
    public static XName RootElement => Helper.CreateXName("FXTradWdrwlNtfctn");
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "MsgId", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax35Text(MessageIdentification)); // data type Max35Text System.String
        writer.WriteEndElement();
        writer.WriteStartElement(null, "MtchgSysUnqRef", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax35Text(MatchingSystemUniqueReference)); // data type Max35Text System.String
        writer.WriteEndElement();
        if (WithdrawalReason is WithdrawalReason1 WithdrawalReasonValue)
        {
            writer.WriteStartElement(null, "WdrwlRsn", xmlNamespace );
            WithdrawalReasonValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (SettlementSessionIdentifier is IsoExact4AlphaNumericText SettlementSessionIdentifierValue)
        {
            writer.WriteStartElement(null, "SttlmSsnIdr", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoExact4AlphaNumericText(SettlementSessionIdentifierValue)); // data type Exact4AlphaNumericText System.String
            writer.WriteEndElement();
        }
        if (SupplementaryData is SupplementaryData1 SupplementaryDataValue)
        {
            writer.WriteStartElement(null, "SplmtryData", xmlNamespace );
            SupplementaryDataValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static ForeignExchangeTradeWithdrawalNotificationV03 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}

/// <summary>
/// This is the outer document that contains the XML serialization wrapper and necessary namespaces for proper serialization.
/// For a more complete description of the business meaning of the message, see the underlying <seealso cref="ForeignExchangeTradeWithdrawalNotificationV03"/>.
/// </summary>
[Serializable]
public partial record ForeignExchangeTradeWithdrawalNotificationV03Document : IOuterDocument<ForeignExchangeTradeWithdrawalNotificationV03>, IXmlSerializable
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:fxtr.013.001.03";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "Document";
    
    /// <summary>
    /// The instance of <seealso cref="ForeignExchangeTradeWithdrawalNotificationV03"/> is required.
    /// </summary>
    [DataMember(Name=ForeignExchangeTradeWithdrawalNotificationV03.XmlTag)]
    public required ForeignExchangeTradeWithdrawalNotificationV03 Message { get; init; }
    public void WriteXml(XmlWriter writer)
    {
        writer.WriteStartElement(null, DocumentElementName, DocumentNamespace );
        writer.WriteStartElement(ForeignExchangeTradeWithdrawalNotificationV03.XmlTag);
        Message.Serialize(writer, DocumentNamespace);
        writer.WriteEndElement();
        writer.WriteEndElement();
        writer.WriteEndDocument();
    }
    
    public void ReadXml(XmlReader reader)
    {
        throw new NotImplementedException();
    }
    
    public System.Xml.Schema.XmlSchema GetSchema() => null;
}
