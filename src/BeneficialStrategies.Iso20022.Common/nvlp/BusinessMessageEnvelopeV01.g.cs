//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for BusinessMessageEnvelopeV01.  ISO2002 ID# _C7O-UQJ9Ee2MF-ort1OTzA.
//
namespace BeneficialStrategies.Iso20022.nvlp;

/// <summary>
/// The BusinessMessageEnvelope is a technical message container used to bundle a business application header with a message definition, typically to support processing or transport. It may contain and define additional data elements that apply to the message instance container.
/// </summary>
[Serializable]
[DataContract(Name = XmlTag)]
[XmlType(TypeName = XmlTag)]
[Description(@"The BusinessMessageEnvelope is a technical message container used to bundle a business application header with a message definition, typically to support processing or transport. It may contain and define additional data elements that apply to the message instance container.")]
public partial record BusinessMessageEnvelopeV01 : IOuterRecord
{
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "BizMsgEnvlp";
    
    /* ------------------------------------------ Underlying data types not ready yet
    /// <summary>
    /// ISO 20022 Business Application Header instance.
    /// Rule: The external schema must be an official ISO 20022 Business Application Header.
    /// </summary>
    [IsoId("_vln_FAJ9Ee2o0-v8T2Svrw")]
    [Description(@"ISO 20022 Business Application Header instance.|Rule: The external schema must be an official ISO 20022 Business Application Header.")]
    [DataMember(Name="Hdr")]
    [XmlElement(ElementName="Hdr")]
    public LaxPayload? Header { get; init; }
    
    /// <summary>
    /// ISO 20022 Message Definition instance.
    /// Rule: The external schema must be an official ISO 20022 Message Definition.
    /// </summary>
    [IsoId("_vln_FQJ9Ee2o0-v8T2Svrw")]
    [Description(@"ISO 20022 Message Definition instance.|Rule: The external schema must be an official ISO 20022 Message Definition.")]
    [DataMember(Name="Doc")]
    [XmlElement(ElementName="Doc")]
    [Required]
    public required LaxPayload Document { get; init; }
    
    /// <summary>
    /// Reference related to the delivery of the business message whilst in transit from sending to receiving business application.
    /// </summary>
    [IsoId("_vln_FgJ9Ee2o0-v8T2Svrw")]
    [Description(@"Reference related to the delivery of the business message whilst in transit from sending to receiving business application.")]
    [DataMember(Name="Ref")]
    [XmlElement(ElementName="Ref")]
    public Reference22? Reference { get; init; }
    
    /// <summary>
    /// Additional information that cannot be captured in the structured fields and/or any other specific block.
    /// </summary>
    [IsoId("_vln_FwJ9Ee2o0-v8T2Svrw")]
    [Description(@"Additional information that cannot be captured in the structured fields and/or any other specific block.")]
    [DataMember(Name="SplmtryData")]
    [XmlElement(ElementName="SplmtryData")]
    public SupplementaryData1? SupplementaryData { get; init; }
    
    */
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="BusinessMessageEnvelopeV01Document"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public BusinessMessageEnvelopeV01Document ToDocument()
    {
        return new BusinessMessageEnvelopeV01Document { Message = this };
    }
}

/// <summary>
/// This is the outer document that contains the XML serialization wrapper and necessary namespaces for proper serialization.
/// For a more complete description of the business meaning of the message, see the underlying <seealso cref="BusinessMessageEnvelopeV01"/>.
/// </summary>
[Serializable]
[DataContract(Name = DocumentElementName, Namespace = DocumentNamespace )]
[XmlRoot(ElementName = DocumentElementName, Namespace = DocumentNamespace )]
public partial record BusinessMessageEnvelopeV01Document : IOuterDocument<BusinessMessageEnvelopeV01>
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:nvlp.001.001.01";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "BizMsgEnvlp";
    
    /// <summary>
    /// The instance of <seealso cref="BusinessMessageEnvelopeV01"/> is required.
    /// </summary>
    public required BusinessMessageEnvelopeV01 Message { get; init; }
}
