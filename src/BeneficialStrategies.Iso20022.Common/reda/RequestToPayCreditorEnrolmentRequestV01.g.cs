//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for RequestToPayCreditorEnrolmentRequestV01.  ISO2002 ID# _rNNBpeHzEeqbls7Gk4-ckA.
//
namespace BeneficialStrategies.Iso20022.reda;

/// <summary>
/// The RequestToPayCreditorEnrolmentRequest message is sent by the creditor RTP (Request To Pay) provider to an RTP directory provider and optionally by the creditor to a creditor RTP provider to request the creditor registration in the RTP directory. 
/// The message may also be forwarded to any authorised third party, as defined in the local scheme.
/// </summary>
[Serializable]
[DataContract(Name = XmlTag)]
[XmlType(TypeName = XmlTag)]
[Description(@"The RequestToPayCreditorEnrolmentRequest message is sent by the creditor RTP (Request To Pay) provider to an RTP directory provider and optionally by the creditor to a creditor RTP provider to request the creditor registration in the RTP directory. |The message may also be forwarded to any authorised third party, as defined in the local scheme.")]
public partial record RequestToPayCreditorEnrolmentRequestV01 : IOuterRecord
{
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "ReqToPayCdtrEnrlmntReq";
    
    /* ------------------------------------------ Underlying data types not ready yet
    /// <summary>
    /// Set of characteristics to identify the message and parties playing a role in the creditor enrolment request.
    /// </summary>
    [IsoId("_rNNBp-HzEeqbls7Gk4-ckA")]
    [Description(@"Set of characteristics to identify the message and parties playing a role in the creditor enrolment request.")]
    [DataMember(Name="Hdr")]
    [XmlElement(ElementName="Hdr")]
    [Required]
    public required EnrolmentHeader2 Header { get; init; }
    
    /// <summary>
    /// Specific attributes of the creditor and service enrolment provided by the creditor for its enrolment.
    /// </summary>
    [IsoId("_rNNBqeHzEeqbls7Gk4-ckA")]
    [Description(@"Specific attributes of the creditor and service enrolment provided by the creditor for its enrolment.")]
    [DataMember(Name="CdtrEnrlmnt")]
    [XmlElement(ElementName="CdtrEnrlmnt")]
    [Required]
    public required CreditorEnrolment3 CreditorEnrolment { get; init; }
    
    /// <summary>
    /// Specific attributes requested from the debtor for its activation as specified by the creditor in the creditor enrolment request.
    /// </summary>
    [IsoId("_rNNBq-HzEeqbls7Gk4-ckA")]
    [Description(@"Specific attributes requested from the debtor for its activation as specified by the creditor in the creditor enrolment request.")]
    [DataMember(Name="ActvtnData")]
    [XmlElement(ElementName="ActvtnData")]
    [Required]
    public required CreditorInvoice3 ActivationData { get; init; }
    
    /// <summary>
    /// Additional information that cannot be captured in the structured elements and/or any other specific block.
    /// </summary>
    [IsoId("_rNNBreHzEeqbls7Gk4-ckA")]
    [Description(@"Additional information that cannot be captured in the structured elements and/or any other specific block.")]
    [DataMember(Name="SplmtryData")]
    [XmlElement(ElementName="SplmtryData")]
    public SupplementaryData1? SupplementaryData { get; init; }
    
    */
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="RequestToPayCreditorEnrolmentRequestV01Document"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public RequestToPayCreditorEnrolmentRequestV01Document ToDocument()
    {
        return new RequestToPayCreditorEnrolmentRequestV01Document { Message = this };
    }
}

/// <summary>
/// This is the outer document that contains the XML serialization wrapper and necessary namespaces for proper serialization.
/// For a more complete description of the business meaning of the message, see the underlying <seealso cref="RequestToPayCreditorEnrolmentRequestV01"/>.
/// </summary>
[Serializable]
[DataContract(Name = DocumentElementName, Namespace = DocumentNamespace )]
[XmlRoot(ElementName = DocumentElementName, Namespace = DocumentNamespace )]
public partial record RequestToPayCreditorEnrolmentRequestV01Document : IOuterDocument<RequestToPayCreditorEnrolmentRequestV01>
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:reda.066.001.01";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "Document";
    
    /// <summary>
    /// The instance of <seealso cref="RequestToPayCreditorEnrolmentRequestV01"/> is required.
    /// </summary>
    public required RequestToPayCreditorEnrolmentRequestV01 Message { get; init; }
}
