//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for MarginReportV02.  ISO2002 ID# _-hxndaMOEeCojJW5vEuTEQ_-1836673720.
//

using System.ComponentModel.DataAnnotations;
using BeneficialStrategies.Iso20022.Components;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;
using Helper = BeneficialStrategies.Iso20022.Framework.IsoXmlSerializationHelper<BeneficialStrategies.Iso20022.secl.MarginReportV02>;

namespace BeneficialStrategies.Iso20022.secl;


/// <summary>
/// This record is an implementation of the secl.005.001.02 ISO standard message type.
/// There are significant differences between different variants of the same message. It is crucial that you select exactly the implementation you intend to send or receive.
/// Scope
/// The MarginReport message is sent by the central counterparty (CCP) to a clearing member to report on:
/// - the exposure resulting from the trade positions
/// - the value of the collateral held by the CCP (market value of this collateral) and
/// - the resulting difference representing the risk encountered by the CCP.
/// 
/// The message definition is intended for use with the ISO20022 Business Application Header.
/// 
/// Usage
/// There are four possibilities to report the above information. Indeed, the margin report may be structured as follows:
/// - per clearing member: the report will only show the information for the clearing member, or
/// - per clearing member and per financial instrument: the report will show the information for the clearing member, structured by security identification, or
/// - per clearing member and per non clearing member: the report will show the information for the clearing member (that is for global clearing member only) structured by non clearing member(s), or
/// - per clearing member and per non clearing member and per security identification: the report will show the information for the clearing member (global clearing member only) structured by non clearing member(s) and by security identification.
/// </summary>
[Serializable]
[Description(@"Scope|The MarginReport message is sent by the central counterparty (CCP) to a clearing member to report on:|- the exposure resulting from the trade positions|- the value of the collateral held by the CCP (market value of this collateral) and|- the resulting difference representing the risk encountered by the CCP.||The message definition is intended for use with the ISO20022 Business Application Header.||Usage|There are four possibilities to report the above information. Indeed, the margin report may be structured as follows:|- per clearing member: the report will only show the information for the clearing member, or|- per clearing member and per financial instrument: the report will show the information for the clearing member, structured by security identification, or|- per clearing member and per non clearing member: the report will show the information for the clearing member (that is for global clearing member only) structured by non clearing member(s), or|- per clearing member and per non clearing member and per security identification: the report will show the information for the clearing member (global clearing member only) structured by non clearing member(s) and by security identification.")]
public partial record MarginReportV02 : IOuterRecord<MarginReportV02,MarginReportV02Document>
    ,IIsoXmlSerilizable<MarginReportV02>, ISerializeInsideARootElement
{
    
    /// <summary>
    /// The official ISO 20022 designation for this version of this message.
    /// </summary>
    public const string IsoIdentifier = "secl.005.001.02";
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "MrgnRpt";
    
    /// <summary>
    /// The XML namespace in which this message is delivered.
    /// </summary>
    public static string IsoXmlNamspace => MarginReportV02Document.DocumentNamespace;
    
    #nullable enable
    /// <summary>
    /// Provides parameters of the margin report such as the creation date and time, the report currency or the calculation date and time.
    /// </summary>
    [IsoId("_-hxndqMOEeCojJW5vEuTEQ_-1337157018")]
    [Description(@"Provides parameters of the margin report such as the creation date and time, the report currency or the calculation date and time.")]
    [DataMember(Name="RptParams")]
    [XmlElement(ElementName="RptParams")]
    [Required]
    public required ReportParameters3 ReportParameters { get; init; }
    
    /// <summary>
    /// Page number of the message (within a report) and continuation indicator to indicate that the report is to continue or that the message is the last page of the report.
    /// </summary>
    [IsoId("_-h7YcKMOEeCojJW5vEuTEQ_1347382157")]
    [Description(@"Page number of the message (within a report) and continuation indicator to indicate that the report is to continue or that the message is the last page of the report.")]
    [DataMember(Name="Pgntn")]
    [XmlElement(ElementName="Pgntn")]
    [Required]
    public required Pagination Pagination { get; init; }
    
    /// <summary>
    /// Provides the identification of the account owner, that is the clearing member (individual clearing member or general clearing member).
    /// </summary>
    [IsoId("_-h7YcaMOEeCojJW5vEuTEQ_1960737925")]
    [Description(@"Provides the identification of the account owner, that is the clearing member (individual clearing member or general clearing member).")]
    [DataMember(Name="ClrMmb")]
    [XmlElement(ElementName="ClrMmb")]
    [Required]
    public required PartyIdentification35Choice_ ClearingMember { get; init; }
    
    /// <summary>
    /// Provides details on the valuation of the collateral on deposit.
    /// </summary>
    [IsoId("_-h7YcqMOEeCojJW5vEuTEQ_-1484768145")]
    [Description(@"Provides details on the valuation of the collateral on deposit.")]
    [DataMember(Name="RptSummry")]
    [XmlElement(ElementName="RptSummry")]
    public MarginCalculation1? ReportSummary { get; init; }
    
    /// <summary>
    /// Provides the margin report details.
    /// </summary>
    [IsoId("_-h7Yc6MOEeCojJW5vEuTEQ_963665572")]
    [Description(@"Provides the margin report details.")]
    [DataMember(Name="RptDtls")]
    [XmlElement(ElementName="RptDtls")]
    [Required]
    public required MarginReport2 ReportDetails { get; init; }
    
    /// <summary>
    /// Additional information that can't be captured in the structured fields and/or any other specific block.
    /// </summary>
    [IsoId("_-h7YdKMOEeCojJW5vEuTEQ_-33406781")]
    [Description(@"Additional information that can't be captured in the structured fields and/or any other specific block.")]
    [DataMember(Name="SplmtryData")]
    [XmlElement(ElementName="SplmtryData")]
    public SupplementaryData1? SupplementaryData { get; init; }
    
    #nullable disable
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="MarginReportV02Document"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public MarginReportV02Document ToDocument()
    {
        return new MarginReportV02Document { Message = this };
    }
    public static XName RootElement => Helper.CreateXName("MrgnRpt");
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "RptParams", xmlNamespace );
        ReportParameters.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "Pgntn", xmlNamespace );
        Pagination.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "ClrMmb", xmlNamespace );
        ClearingMember.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (ReportSummary is MarginCalculation1 ReportSummaryValue)
        {
            writer.WriteStartElement(null, "RptSummry", xmlNamespace );
            ReportSummaryValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        writer.WriteStartElement(null, "RptDtls", xmlNamespace );
        ReportDetails.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (SupplementaryData is SupplementaryData1 SupplementaryDataValue)
        {
            writer.WriteStartElement(null, "SplmtryData", xmlNamespace );
            SupplementaryDataValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static MarginReportV02 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}

/// <summary>
/// This is the outer document that contains the XML serialization wrapper and necessary namespaces for proper serialization.
/// For a more complete description of the business meaning of the message, see the underlying <seealso cref="MarginReportV02"/>.
/// </summary>
[Serializable]
public partial record MarginReportV02Document : IOuterDocument<MarginReportV02>, IXmlSerializable
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:secl.005.001.02";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "Document";
    
    /// <summary>
    /// The instance of <seealso cref="MarginReportV02"/> is required.
    /// </summary>
    [DataMember(Name=MarginReportV02.XmlTag)]
    public required MarginReportV02 Message { get; init; }
    public void WriteXml(XmlWriter writer)
    {
        writer.WriteStartElement(null, DocumentElementName, DocumentNamespace );
        writer.WriteStartElement(MarginReportV02.XmlTag);
        Message.Serialize(writer, DocumentNamespace);
        writer.WriteEndElement();
        writer.WriteEndElement();
        writer.WriteEndDocument();
    }
    
    public void ReadXml(XmlReader reader)
    {
        throw new NotImplementedException();
    }
    
    public System.Xml.Schema.XmlSchema GetSchema() => null;
}
