//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for AgentCAElectionAmendmentRequestV01.  ISO2002 ID# _TNAo_tEwEd-BzquC8wXy7w_1507742806.
//

using System.ComponentModel.DataAnnotations;
using BeneficialStrategies.Iso20022.Components;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;
using Helper = BeneficialStrategies.Iso20022.Framework.IsoXmlSerializationHelper<BeneficialStrategies.Iso20022.seev.AgentCAElectionAmendmentRequestV01>;

namespace BeneficialStrategies.Iso20022.seev;


/// <summary>
/// This record is an implementation of the seev.013.001.01 ISO standard message type.
/// There are significant differences between different variants of the same message. It is crucial that you select exactly the implementation you intend to send or receive.
/// Scope
/// This message is sent by a CSD to the issuer (or its agent) to request the authorisation of an amendment of a previously sent Agent Corporate Action Election Advice message.
/// Usage
/// This message is used to request the amendment of a previously sent Agent Corporate Action Election Advice message.
/// Once the amendment request has been accepted by the issuer (or its agent), the CSD will process any resource movement and send an Agent Corporate Action Election Advice message with the function, option change, to confirm that the amendment has been booked at the CSD.
/// This message is used when the terms and conditions of the corporate action event allow amendments.
/// </summary>
[Serializable]
[Description(@"Scope|This message is sent by a CSD to the issuer (or its agent) to request the authorisation of an amendment of a previously sent Agent Corporate Action Election Advice message.|Usage|This message is used to request the amendment of a previously sent Agent Corporate Action Election Advice message.|Once the amendment request has been accepted by the issuer (or its agent), the CSD will process any resource movement and send an Agent Corporate Action Election Advice message with the function, option change, to confirm that the amendment has been booked at the CSD.|This message is used when the terms and conditions of the corporate action event allow amendments.")]
public partial record AgentCAElectionAmendmentRequestV01 : IOuterRecord<AgentCAElectionAmendmentRequestV01,AgentCAElectionAmendmentRequestV01Document>
    ,IIsoXmlSerilizable<AgentCAElectionAmendmentRequestV01>, ISerializeInsideARootElement
{
    
    /// <summary>
    /// The official ISO 20022 designation for this version of this message.
    /// </summary>
    public const string IsoIdentifier = "seev.013.001.01";
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "AgtCAElctnAmdmntReq";
    
    /// <summary>
    /// The XML namespace in which this message is delivered.
    /// </summary>
    public static string IsoXmlNamspace => AgentCAElectionAmendmentRequestV01Document.DocumentNamespace;
    
    #nullable enable
    /// <summary>
    /// Identification assigned by the Sender to unambiguously identify the request.
    /// </summary>
    [IsoId("_TNAo_9EwEd-BzquC8wXy7w_32107139")]
    [Description(@"Identification assigned by the Sender to unambiguously identify the request.")]
    [DataMember(Name="Id")]
    [XmlElement(ElementName="Id")]
    [Required]
    public required DocumentIdentification8 Identification { get; init; }
    
    /// <summary>
    /// Identification of the linked Agent CA Election Advice for which an amendment is requested.
    /// </summary>
    [IsoId("_TNApANEwEd-BzquC8wXy7w_61660705")]
    [Description(@"Identification of the linked Agent CA Election Advice for which an amendment is requested.")]
    [DataMember(Name="AgtCAElctnAdvcId")]
    [XmlElement(ElementName="AgtCAElctnAdvcId")]
    [Required]
    public required DocumentIdentification8 AgentCAElectionAdviceIdentification { get; init; }
    
    /// <summary>
    /// General information about the corporate action event.
    /// </summary>
    [IsoId("_TNApAdEwEd-BzquC8wXy7w_-1916344559")]
    [Description(@"General information about the corporate action event.")]
    [DataMember(Name="CorpActnGnlInf")]
    [XmlElement(ElementName="CorpActnGnlInf")]
    [Required]
    public required CorporateActionInformation1 CorporateActionGeneralInformation { get; init; }
    
    /// <summary>
    /// Provides information about the account.
    /// </summary>
    [IsoId("_TNJy4NEwEd-BzquC8wXy7w_-148394854")]
    [Description(@"Provides information about the account.")]
    [DataMember(Name="AcctDtls")]
    [XmlElement(ElementName="AcctDtls")]
    [Required]
    public required SecuritiesAccount7 AccountDetails { get; init; }
    
    /// <summary>
    /// Provides information about the original election to be amended.
    /// </summary>
    [IsoId("_TNJy4dEwEd-BzquC8wXy7w_915892144")]
    [Description(@"Provides information about the original election to be amended.")]
    [DataMember(Name="OrgnlElctnDtls")]
    [XmlElement(ElementName="OrgnlElctnDtls")]
    [Required]
    public required CorporateActionElection1 OriginalElectionDetails { get; init; }
    
    /// <summary>
    /// Provides information about the amendments to the election.
    /// </summary>
    [IsoId("_TNJy4tEwEd-BzquC8wXy7w_934364367")]
    [Description(@"Provides information about the amendments to the election.")]
    [DataMember(Name="AmddElctnDtls")]
    [XmlElement(ElementName="AmddElctnDtls")]
    [Required]
    public required CorporateActionElection2 AmendedElectionDetails { get; init; }
    
    /// <summary>
    /// Contact responsible for the transaction identified in the message.
    /// </summary>
    [IsoId("_TNJy49EwEd-BzquC8wXy7w_459673267")]
    [Description(@"Contact responsible for the transaction identified in the message.")]
    [DataMember(Name="CtctDtls")]
    [XmlElement(ElementName="CtctDtls")]
    public ContactPerson1? ContactDetails { get; init; }
    
    #nullable disable
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="AgentCAElectionAmendmentRequestV01Document"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public AgentCAElectionAmendmentRequestV01Document ToDocument()
    {
        return new AgentCAElectionAmendmentRequestV01Document { Message = this };
    }
    public static XName RootElement => Helper.CreateXName("AgtCAElctnAmdmntReq");
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Id", xmlNamespace );
        Identification.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "AgtCAElctnAdvcId", xmlNamespace );
        AgentCAElectionAdviceIdentification.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "CorpActnGnlInf", xmlNamespace );
        CorporateActionGeneralInformation.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "AcctDtls", xmlNamespace );
        AccountDetails.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "OrgnlElctnDtls", xmlNamespace );
        OriginalElectionDetails.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "AmddElctnDtls", xmlNamespace );
        AmendedElectionDetails.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (ContactDetails is ContactPerson1 ContactDetailsValue)
        {
            writer.WriteStartElement(null, "CtctDtls", xmlNamespace );
            ContactDetailsValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static AgentCAElectionAmendmentRequestV01 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}

/// <summary>
/// This is the outer document that contains the XML serialization wrapper and necessary namespaces for proper serialization.
/// For a more complete description of the business meaning of the message, see the underlying <seealso cref="AgentCAElectionAmendmentRequestV01"/>.
/// </summary>
[Serializable]
public partial record AgentCAElectionAmendmentRequestV01Document : IOuterDocument<AgentCAElectionAmendmentRequestV01>, IXmlSerializable
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:seev.013.001.01";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "Document";
    
    /// <summary>
    /// The instance of <seealso cref="AgentCAElectionAmendmentRequestV01"/> is required.
    /// </summary>
    [DataMember(Name=AgentCAElectionAmendmentRequestV01.XmlTag)]
    public required AgentCAElectionAmendmentRequestV01 Message { get; init; }
    public void WriteXml(XmlWriter writer)
    {
        writer.WriteStartElement(null, DocumentElementName, DocumentNamespace );
        writer.WriteStartElement(AgentCAElectionAmendmentRequestV01.XmlTag);
        Message.Serialize(writer, DocumentNamespace);
        writer.WriteEndElement();
        writer.WriteEndElement();
        writer.WriteEndDocument();
    }
    
    public void ReadXml(XmlReader reader)
    {
        throw new NotImplementedException();
    }
    
    public System.Xml.Schema.XmlSchema GetSchema() => null;
}
