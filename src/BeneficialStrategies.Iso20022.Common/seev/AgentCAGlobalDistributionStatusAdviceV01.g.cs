//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for AgentCAGlobalDistributionStatusAdviceV01.  ISO2002 ID# _TN5ZxdEwEd-BzquC8wXy7w_893376547.
//

using System.ComponentModel.DataAnnotations;
using BeneficialStrategies.Iso20022.Components;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;
using Helper = BeneficialStrategies.Iso20022.Framework.IsoXmlSerializationHelper<BeneficialStrategies.Iso20022.seev.AgentCAGlobalDistributionStatusAdviceV01>;

namespace BeneficialStrategies.Iso20022.seev;


/// <summary>
/// This record is an implementation of the seev.018.001.01 ISO standard message type.
/// There are significant differences between different variants of the same message. It is crucial that you select exactly the implementation you intend to send or receive.
/// Scope
/// This message is sent by an issuer (or its agent) to the CSD to authorise/prohibit the CSD to process the entitlement movements.
/// Usage
/// This message is used to authorise/prohibit the CSD to process the movements requested in the Global Distribution Authorisation Request message.
/// Once the amendment request has been accepted by the issuer (or its agent), the CSD will process any resource movement and send an Agent Corporate Action Election Advice message with the function, option change, to confirm that the amendment has been booked at the CSD.
/// The issuer (or its agent) can provide the status in 2 different ways:
/// - Provide a global status, in which case the building block Global Movement Status must be present; or
/// - Provide a status by individual movements, in which case, the building block Individual Movement Status must be present. An individual movement cannot be rejected.
/// </summary>
[Serializable]
[Description(@"Scope|This message is sent by an issuer (or its agent) to the CSD to authorise/prohibit the CSD to process the entitlement movements.|Usage|This message is used to authorise/prohibit the CSD to process the movements requested in the Global Distribution Authorisation Request message.|Once the amendment request has been accepted by the issuer (or its agent), the CSD will process any resource movement and send an Agent Corporate Action Election Advice message with the function, option change, to confirm that the amendment has been booked at the CSD.|The issuer (or its agent) can provide the status in 2 different ways:|- Provide a global status, in which case the building block Global Movement Status must be present; or|- Provide a status by individual movements, in which case, the building block Individual Movement Status must be present. An individual movement cannot be rejected.")]
public partial record AgentCAGlobalDistributionStatusAdviceV01 : IOuterRecord<AgentCAGlobalDistributionStatusAdviceV01,AgentCAGlobalDistributionStatusAdviceV01Document>
    ,IIsoXmlSerilizable<AgentCAGlobalDistributionStatusAdviceV01>, ISerializeInsideARootElement
{
    
    /// <summary>
    /// The official ISO 20022 designation for this version of this message.
    /// </summary>
    public const string IsoIdentifier = "seev.018.001.01";
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "AgtCAGblDstrbtnStsAdvc";
    
    /// <summary>
    /// The XML namespace in which this message is delivered.
    /// </summary>
    public static string IsoXmlNamspace => AgentCAGlobalDistributionStatusAdviceV01Document.DocumentNamespace;
    
    #nullable enable
    /// <summary>
    /// Identification assigned by the Sender to unambiguously identify the status advice.
    /// </summary>
    [IsoId("_TN5ZxtEwEd-BzquC8wXy7w_1263163020")]
    [Description(@"Identification assigned by the Sender to unambiguously identify the status advice.")]
    [DataMember(Name="Id")]
    [XmlElement(ElementName="Id")]
    [Required]
    public required DocumentIdentification8 Identification { get; init; }
    
    /// <summary>
    /// Identification of the linked Agent CA Global Distribution Authorisation Request for which a status is given.
    /// </summary>
    [IsoId("_TN5Zx9EwEd-BzquC8wXy7w_1294561939")]
    [Description(@"Identification of the linked Agent CA Global Distribution Authorisation Request for which a status is given.")]
    [DataMember(Name="AgtCAGblDstrbtnAuthstnReqId")]
    [XmlElement(ElementName="AgtCAGblDstrbtnAuthstnReqId")]
    [Required]
    public required DocumentIdentification8 AgentCAGlobalDistributionAuthorisationRequestIdentification { get; init; }
    
    /// <summary>
    /// General information about the corporate action event.
    /// </summary>
    [IsoId("_TN5ZyNEwEd-BzquC8wXy7w_1839061522")]
    [Description(@"General information about the corporate action event.")]
    [DataMember(Name="CorpActnGnlInf")]
    [XmlElement(ElementName="CorpActnGnlInf")]
    [Required]
    public required CorporateActionInformation1 CorporateActionGeneralInformation { get; init; }
    
    /// <summary>
    /// Provides information about the status of the global movement.
    /// </summary>
    [IsoId("_TN5ZydEwEd-BzquC8wXy7w_-2081880842")]
    [Description(@"Provides information about the status of the global movement.")]
    [DataMember(Name="GblMvmntSts")]
    [XmlElement(ElementName="GblMvmntSts")]
    [Required]
    public required GlobalDistributionStatus1 GlobalMovementStatus { get; init; }
    
    /// <summary>
    /// Provides information about the status of an individual movement.
    /// </summary>
    [IsoId("_TN5ZytEwEd-BzquC8wXy7w_-1885018018")]
    [Description(@"Provides information about the status of an individual movement.")]
    [DataMember(Name="IndvMvmntSts")]
    [XmlElement(ElementName="IndvMvmntSts")]
    [Required]
    public required IndividualMovementStatus1 IndividualMovementStatus { get; init; }
    
    #nullable disable
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="AgentCAGlobalDistributionStatusAdviceV01Document"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public AgentCAGlobalDistributionStatusAdviceV01Document ToDocument()
    {
        return new AgentCAGlobalDistributionStatusAdviceV01Document { Message = this };
    }
    public static XName RootElement => Helper.CreateXName("AgtCAGblDstrbtnStsAdvc");
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Id", xmlNamespace );
        Identification.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "AgtCAGblDstrbtnAuthstnReqId", xmlNamespace );
        AgentCAGlobalDistributionAuthorisationRequestIdentification.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "CorpActnGnlInf", xmlNamespace );
        CorporateActionGeneralInformation.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "GblMvmntSts", xmlNamespace );
        GlobalMovementStatus.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "IndvMvmntSts", xmlNamespace );
        IndividualMovementStatus.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
    }
    public static AgentCAGlobalDistributionStatusAdviceV01 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}

/// <summary>
/// This is the outer document that contains the XML serialization wrapper and necessary namespaces for proper serialization.
/// For a more complete description of the business meaning of the message, see the underlying <seealso cref="AgentCAGlobalDistributionStatusAdviceV01"/>.
/// </summary>
[Serializable]
public partial record AgentCAGlobalDistributionStatusAdviceV01Document : IOuterDocument<AgentCAGlobalDistributionStatusAdviceV01>, IXmlSerializable
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:seev.018.001.01";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "Document";
    
    /// <summary>
    /// The instance of <seealso cref="AgentCAGlobalDistributionStatusAdviceV01"/> is required.
    /// </summary>
    [DataMember(Name=AgentCAGlobalDistributionStatusAdviceV01.XmlTag)]
    public required AgentCAGlobalDistributionStatusAdviceV01 Message { get; init; }
    public void WriteXml(XmlWriter writer)
    {
        writer.WriteStartElement(null, DocumentElementName, DocumentNamespace );
        writer.WriteStartElement(AgentCAGlobalDistributionStatusAdviceV01.XmlTag);
        Message.Serialize(writer, DocumentNamespace);
        writer.WriteEndElement();
        writer.WriteEndElement();
        writer.WriteEndDocument();
    }
    
    public void ReadXml(XmlReader reader)
    {
        throw new NotImplementedException();
    }
    
    public System.Xml.Schema.XmlSchema GetSchema() => null;
}
