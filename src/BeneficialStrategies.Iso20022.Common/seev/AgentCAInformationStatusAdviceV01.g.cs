//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for AgentCAInformationStatusAdviceV01.  ISO2002 ID# _TOM7y9EwEd-BzquC8wXy7w_11240695.
//

using System.ComponentModel.DataAnnotations;
using BeneficialStrategies.Iso20022.Components;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;
using Helper = BeneficialStrategies.Iso20022.Framework.IsoXmlSerializationHelper<BeneficialStrategies.Iso20022.seev.AgentCAInformationStatusAdviceV01>;

namespace BeneficialStrategies.Iso20022.seev;


/// <summary>
/// This record is an implementation of the seev.024.001.01 ISO standard message type.
/// There are significant differences between different variants of the same message. It is crucial that you select exactly the implementation you intend to send or receive.
/// Scope
/// This message is sent by an issuer (or its agent) to a CSD to report the status, or change in status, of an information advice.
/// Usage
/// This message must be used in response to an Agent Corporate Action Information Advice in the case of a rejection. However, it may also be used to report other statuses.
/// The information advice identification must be present to link this message to the information advice for which the status is provided.
/// </summary>
[Serializable]
[Description(@"Scope|This message is sent by an issuer (or its agent) to a CSD to report the status, or change in status, of an information advice.|Usage|This message must be used in response to an Agent Corporate Action Information Advice in the case of a rejection. However, it may also be used to report other statuses.|The information advice identification must be present to link this message to the information advice for which the status is provided.")]
public partial record AgentCAInformationStatusAdviceV01 : IOuterRecord<AgentCAInformationStatusAdviceV01,AgentCAInformationStatusAdviceV01Document>
    ,IIsoXmlSerilizable<AgentCAInformationStatusAdviceV01>, ISerializeInsideARootElement
{
    
    /// <summary>
    /// The official ISO 20022 designation for this version of this message.
    /// </summary>
    public const string IsoIdentifier = "seev.024.001.01";
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "AgtCAInfStsAdvc";
    
    /// <summary>
    /// The XML namespace in which this message is delivered.
    /// </summary>
    public static string IsoXmlNamspace => AgentCAInformationStatusAdviceV01Document.DocumentNamespace;
    
    #nullable enable
    /// <summary>
    /// Identification assigned by the Sender to unambiguously identify the status advice.
    /// </summary>
    [IsoId("_TOM7zNEwEd-BzquC8wXy7w_1654735985")]
    [Description(@"Identification assigned by the Sender to unambiguously identify the status advice.")]
    [DataMember(Name="Id")]
    [XmlElement(ElementName="Id")]
    [Required]
    public required DocumentIdentification8 Identification { get; init; }
    
    /// <summary>
    /// Identification of the linked Agent CA Information Advice for which a status is given.
    /// </summary>
    [IsoId("_TOWFsNEwEd-BzquC8wXy7w_1665816866")]
    [Description(@"Identification of the linked Agent CA Information Advice for which a status is given.")]
    [DataMember(Name="AgtCAInfAdvcId")]
    [XmlElement(ElementName="AgtCAInfAdvcId")]
    [Required]
    public required DocumentIdentification8 AgentCAInformationAdviceIdentification { get; init; }
    
    /// <summary>
    /// Additional information about the corporate action such as the delivery details.
    /// </summary>
    [IsoId("_TOWFsdEwEd-BzquC8wXy7w_693722719")]
    [Description(@"Additional information about the corporate action such as the delivery details.")]
    [DataMember(Name="CorpActnAddtlInf")]
    [XmlElement(ElementName="CorpActnAddtlInf")]
    public CorporateActionAdditionalInformation1? CorporateActionAdditionalInformation { get; init; }
    
    /// <summary>
    /// Status of the information advice sent by the CSD.
    /// </summary>
    [IsoId("_TOWFstEwEd-BzquC8wXy7w_-904563755")]
    [Description(@"Status of the information advice sent by the CSD.")]
    [DataMember(Name="InfStsDtls")]
    [XmlElement(ElementName="InfStsDtls")]
    [Required]
    public required CorporateActionInformationStatus1Choice_ InformationStatusDetails { get; init; }
    
    #nullable disable
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="AgentCAInformationStatusAdviceV01Document"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public AgentCAInformationStatusAdviceV01Document ToDocument()
    {
        return new AgentCAInformationStatusAdviceV01Document { Message = this };
    }
    public static XName RootElement => Helper.CreateXName("AgtCAInfStsAdvc");
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Id", xmlNamespace );
        Identification.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "AgtCAInfAdvcId", xmlNamespace );
        AgentCAInformationAdviceIdentification.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (CorporateActionAdditionalInformation is CorporateActionAdditionalInformation1 CorporateActionAdditionalInformationValue)
        {
            writer.WriteStartElement(null, "CorpActnAddtlInf", xmlNamespace );
            CorporateActionAdditionalInformationValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        writer.WriteStartElement(null, "InfStsDtls", xmlNamespace );
        InformationStatusDetails.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
    }
    public static AgentCAInformationStatusAdviceV01 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}

/// <summary>
/// This is the outer document that contains the XML serialization wrapper and necessary namespaces for proper serialization.
/// For a more complete description of the business meaning of the message, see the underlying <seealso cref="AgentCAInformationStatusAdviceV01"/>.
/// </summary>
[Serializable]
public partial record AgentCAInformationStatusAdviceV01Document : IOuterDocument<AgentCAInformationStatusAdviceV01>, IXmlSerializable
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:seev.024.001.01";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "Document";
    
    /// <summary>
    /// The instance of <seealso cref="AgentCAInformationStatusAdviceV01"/> is required.
    /// </summary>
    [DataMember(Name=AgentCAInformationStatusAdviceV01.XmlTag)]
    public required AgentCAInformationStatusAdviceV01 Message { get; init; }
    public void WriteXml(XmlWriter writer)
    {
        writer.WriteStartElement(null, DocumentElementName, DocumentNamespace );
        writer.WriteStartElement(AgentCAInformationStatusAdviceV01.XmlTag);
        Message.Serialize(writer, DocumentNamespace);
        writer.WriteEndElement();
        writer.WriteEndElement();
        writer.WriteEndDocument();
    }
    
    public void ReadXml(XmlReader reader)
    {
        throw new NotImplementedException();
    }
    
    public System.Xml.Schema.XmlSchema GetSchema() => null;
}
