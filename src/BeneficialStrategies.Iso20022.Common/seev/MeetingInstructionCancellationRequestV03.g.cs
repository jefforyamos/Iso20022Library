//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for MeetingInstructionCancellationRequestV03.  ISO2002 ID# _TnYQwNEwEd-BzquC8wXy7w_355910963.
//

using System.ComponentModel.DataAnnotations;
using BeneficialStrategies.Iso20022.Components;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;
using Helper = BeneficialStrategies.Iso20022.Framework.IsoXmlSerializationHelper<BeneficialStrategies.Iso20022.seev.MeetingInstructionCancellationRequestV03>;

namespace BeneficialStrategies.Iso20022.seev;


/// <summary>
/// This record is an implementation of the seev.005.001.03 ISO standard message type.
/// There are significant differences between different variants of the same message. It is crucial that you select exactly the implementation you intend to send or receive.
/// Scope
/// The MeetingInstructionCancellationRequest message is sent by the same party that sent the MeetingInstruction message. It is sent to request the cancellation of all instructions included in the original the MeetingInstruction message.
/// Usage
/// This message must be answered by a MeetingInstructionStatus message. Some instructions in the previously sent MeetingInstruction message may have already been executed and cannot be cancelled. This information should appear clearly in the status message.
/// </summary>
[Serializable]
[Description(@"Scope|The MeetingInstructionCancellationRequest message is sent by the same party that sent the MeetingInstruction message. It is sent to request the cancellation of all instructions included in the original the MeetingInstruction message.|Usage|This message must be answered by a MeetingInstructionStatus message. Some instructions in the previously sent MeetingInstruction message may have already been executed and cannot be cancelled. This information should appear clearly in the status message.")]
public partial record MeetingInstructionCancellationRequestV03 : IOuterRecord<MeetingInstructionCancellationRequestV03,MeetingInstructionCancellationRequestV03Document>
    ,IIsoXmlSerilizable<MeetingInstructionCancellationRequestV03>, ISerializeInsideARootElement
{
    
    /// <summary>
    /// The official ISO 20022 designation for this version of this message.
    /// </summary>
    public const string IsoIdentifier = "seev.005.001.03";
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "MtgInstrCxlReq";
    
    /// <summary>
    /// The XML namespace in which this message is delivered.
    /// </summary>
    public static string IsoXmlNamspace => MeetingInstructionCancellationRequestV03Document.DocumentNamespace;
    
    #nullable enable
    /// <summary>
    /// Uniquely identifies the cancellation request.
    /// </summary>
    [IsoId("_TnYQwdEwEd-BzquC8wXy7w_1015295249")]
    [Description(@"Uniquely identifies the cancellation request.")]
    [DataMember(Name="Id")]
    [XmlElement(ElementName="Id")]
    [Required]
    public required MessageIdentification1 Identification { get; init; }
    
    /// <summary>
    /// Identifies the instruction to be cancelled.
    /// </summary>
    [IsoId("_TnYQwtEwEd-BzquC8wXy7w_1044847089")]
    [Description(@"Identifies the instruction to be cancelled.")]
    [DataMember(Name="PrvsRef")]
    [XmlElement(ElementName="PrvsRef")]
    [Required]
    public required MessageIdentification PreviousReference { get; init; }
    
    /// <summary>
    /// Series of elements which allow to identify a meeting.
    /// </summary>
    [IsoId("_TnYQw9EwEd-BzquC8wXy7w_1088252061")]
    [Description(@"Series of elements which allow to identify a meeting.")]
    [DataMember(Name="MtgRef")]
    [XmlElement(ElementName="MtgRef")]
    public MeetingReference4? MeetingReference { get; init; }
    
    /// <summary>
    /// Party requesting the cancellation.
    /// </summary>
    [IsoId("_TnYQxNEwEd-BzquC8wXy7w_-975159654")]
    [Description(@"Party requesting the cancellation.")]
    [DataMember(Name="RqstngPty")]
    [XmlElement(ElementName="RqstngPty")]
    public PartyIdentification9Choice_? RequestingParty { get; init; }
    
    /// <summary>
    /// Identifies the security for which the meeting is organised.
    /// </summary>
    [IsoId("_TnYQxdEwEd-BzquC8wXy7w_-946528538")]
    [Description(@"Identifies the security for which the meeting is organised.")]
    [DataMember(Name="SctyId")]
    [XmlElement(ElementName="SctyId")]
    public SecurityIdentification11? SecurityIdentification { get; init; }
    
    /// <summary>
    /// Identifies the account and instructed positions for which the instruction cancellation request applies.
    /// </summary>
    [IsoId("_TnYQxtEwEd-BzquC8wXy7w_-920672368")]
    [Description(@"Identifies the account and instructed positions for which the instruction cancellation request applies.")]
    [DataMember(Name="InstdPos")]
    [XmlElement(ElementName="InstdPos")]
    public SafekeepingAccount4? InstructedPosition { get; init; }
    
    #nullable disable
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="MeetingInstructionCancellationRequestV03Document"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public MeetingInstructionCancellationRequestV03Document ToDocument()
    {
        return new MeetingInstructionCancellationRequestV03Document { Message = this };
    }
    public static XName RootElement => Helper.CreateXName("MtgInstrCxlReq");
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Id", xmlNamespace );
        Identification.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "PrvsRef", xmlNamespace );
        PreviousReference.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (MeetingReference is MeetingReference4 MeetingReferenceValue)
        {
            writer.WriteStartElement(null, "MtgRef", xmlNamespace );
            MeetingReferenceValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (RequestingParty is PartyIdentification9Choice_ RequestingPartyValue)
        {
            writer.WriteStartElement(null, "RqstngPty", xmlNamespace );
            RequestingPartyValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (SecurityIdentification is SecurityIdentification11 SecurityIdentificationValue)
        {
            writer.WriteStartElement(null, "SctyId", xmlNamespace );
            SecurityIdentificationValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (InstructedPosition is SafekeepingAccount4 InstructedPositionValue)
        {
            writer.WriteStartElement(null, "InstdPos", xmlNamespace );
            InstructedPositionValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static MeetingInstructionCancellationRequestV03 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}

/// <summary>
/// This is the outer document that contains the XML serialization wrapper and necessary namespaces for proper serialization.
/// For a more complete description of the business meaning of the message, see the underlying <seealso cref="MeetingInstructionCancellationRequestV03"/>.
/// </summary>
[Serializable]
public partial record MeetingInstructionCancellationRequestV03Document : IOuterDocument<MeetingInstructionCancellationRequestV03>, IXmlSerializable
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:seev.005.001.03";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "Document";
    
    /// <summary>
    /// The instance of <seealso cref="MeetingInstructionCancellationRequestV03"/> is required.
    /// </summary>
    [DataMember(Name=MeetingInstructionCancellationRequestV03.XmlTag)]
    public required MeetingInstructionCancellationRequestV03 Message { get; init; }
    public void WriteXml(XmlWriter writer)
    {
        writer.WriteStartElement(null, DocumentElementName, DocumentNamespace );
        writer.WriteStartElement(MeetingInstructionCancellationRequestV03.XmlTag);
        Message.Serialize(writer, DocumentNamespace);
        writer.WriteEndElement();
        writer.WriteEndElement();
        writer.WriteEndDocument();
    }
    
    public void ReadXml(XmlReader reader)
    {
        throw new NotImplementedException();
    }
    
    public System.Xml.Schema.XmlSchema GetSchema() => null;
}
