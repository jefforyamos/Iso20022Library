//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for ShareholderIdentificationDisclosureResponseCancellationAdviceV01.  ISO2002 ID# _mi0doEV8EemRx7jyevcLwg.
//

using System.ComponentModel.DataAnnotations;
using BeneficialStrategies.Iso20022.Components;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;
using Helper = BeneficialStrategies.Iso20022.Framework.IsoXmlSerializationHelper<BeneficialStrategies.Iso20022.seev.ShareholderIdentificationDisclosureResponseCancellationAdviceV01>;

namespace BeneficialStrategies.Iso20022.seev;


/// <summary>
/// This record is an implementation of the seev.048.001.01 ISO standard message type.
/// There are significant differences between different variants of the same message. It is crucial that you select exactly the implementation you intend to send or receive.
/// The ShareholdersIdentificationDisclosureResponseCancellationAdvice message is sent by any intermediaries to the recipient designated by the issuer (such as an issuer's agent) in the disclosure request message in order to cancel the shareholder identification disclosure response whether previously sent in a single message or in a set of multipart/paginated response messages.
/// </summary>
[Serializable]
[Description(@"The ShareholdersIdentificationDisclosureResponseCancellationAdvice message is sent by any intermediaries to the recipient designated by the issuer (such as an issuer's agent) in the disclosure request message in order to cancel the shareholder identification disclosure response whether previously sent in a single message or in a set of multipart/paginated response messages.")]
public partial record ShareholderIdentificationDisclosureResponseCancellationAdviceV01 : IOuterRecord<ShareholderIdentificationDisclosureResponseCancellationAdviceV01,ShareholderIdentificationDisclosureResponseCancellationAdviceV01Document>
    ,IIsoXmlSerilizable<ShareholderIdentificationDisclosureResponseCancellationAdviceV01>, ISerializeInsideARootElement
{
    
    /// <summary>
    /// The official ISO 20022 designation for this version of this message.
    /// </summary>
    public const string IsoIdentifier = "seev.048.001.01";
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "ShrhldrIdDsclsrRspnCxlAdvc";
    
    /// <summary>
    /// The XML namespace in which this message is delivered.
    /// </summary>
    public static string IsoXmlNamspace => ShareholderIdentificationDisclosureResponseCancellationAdviceV01Document.DocumentNamespace;
    
    #nullable enable
    /// <summary>
    /// Unique identification of the disclosure response for which a cancellation advice is sent.
    /// The same disclosure response identification number is to be used when cancelling a response which is split in multiple messages.
    /// </summary>
    [IsoId("_1ZW-okV9EemRx7jyevcLwg")]
    [Description(@"Unique identification of the disclosure response for which a cancellation advice is sent.|The same disclosure response identification number is to be used when cancelling a response which is split in multiple messages.")]
    [DataMember(Name="DsclsrRspnId")]
    [XmlElement(ElementName="DsclsrRspnId")]
    [Required]
    public required IsoMax35Text DisclosureResponseIdentification { get; init; }
    
    /// <summary>
    /// Official and unique identification assigned to a shareholders identification disclosure request process by the issuer or third party nominated by it and for which a response is sent.
    /// </summary>
    [IsoId("_s9Y_YbRAEem2T48lBgJbww")]
    [Description(@"Official and unique identification assigned to a shareholders identification disclosure request process by the issuer or third party nominated by it and for which a response is sent.")]
    [DataMember(Name="IssrDsclsrReqRef")]
    [XmlElement(ElementName="IssrDsclsrReqRef")]
    [Required]
    public required DisclosureRequestIdentification1 IssuerDisclosureRequestReference { get; init; }
    
    /// <summary>
    /// Unique identification of the intermediary party responding to the shareholders identification disclosure request.
    /// </summary>
    [IsoId("_1ZW-o0V9EemRx7jyevcLwg")]
    [Description(@"Unique identification of the intermediary party responding to the shareholders identification disclosure request.")]
    [DataMember(Name="RspndgIntrmy")]
    [XmlElement(ElementName="RspndgIntrmy")]
    [Required]
    public required PartyIdentification215 RespondingIntermediary { get; init; }
    
    /// <summary>
    /// Additional information that can not be captured in the structured fields and/or any other specific block.
    /// </summary>
    [IsoId("_1__BQbRAEem2T48lBgJbww")]
    [Description(@"Additional information that can not be captured in the structured fields and/or any other specific block.")]
    [DataMember(Name="SplmtryData")]
    [XmlElement(ElementName="SplmtryData")]
    public SupplementaryData1? SupplementaryData { get; init; }
    
    #nullable disable
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="ShareholderIdentificationDisclosureResponseCancellationAdviceV01Document"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public ShareholderIdentificationDisclosureResponseCancellationAdviceV01Document ToDocument()
    {
        return new ShareholderIdentificationDisclosureResponseCancellationAdviceV01Document { Message = this };
    }
    public static XName RootElement => Helper.CreateXName("ShrhldrIdDsclsrRspnCxlAdvc");
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "DsclsrRspnId", xmlNamespace );
        writer.WriteValue(SerializationFormatter.IsoMax35Text(DisclosureResponseIdentification)); // data type Max35Text System.String
        writer.WriteEndElement();
        writer.WriteStartElement(null, "IssrDsclsrReqRef", xmlNamespace );
        IssuerDisclosureRequestReference.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "RspndgIntrmy", xmlNamespace );
        RespondingIntermediary.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (SupplementaryData is SupplementaryData1 SupplementaryDataValue)
        {
            writer.WriteStartElement(null, "SplmtryData", xmlNamespace );
            SupplementaryDataValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static ShareholderIdentificationDisclosureResponseCancellationAdviceV01 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}

/// <summary>
/// This is the outer document that contains the XML serialization wrapper and necessary namespaces for proper serialization.
/// For a more complete description of the business meaning of the message, see the underlying <seealso cref="ShareholderIdentificationDisclosureResponseCancellationAdviceV01"/>.
/// </summary>
[Serializable]
public partial record ShareholderIdentificationDisclosureResponseCancellationAdviceV01Document : IOuterDocument<ShareholderIdentificationDisclosureResponseCancellationAdviceV01>, IXmlSerializable
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:seev.048.001.01";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "Document";
    
    /// <summary>
    /// The instance of <seealso cref="ShareholderIdentificationDisclosureResponseCancellationAdviceV01"/> is required.
    /// </summary>
    [DataMember(Name=ShareholderIdentificationDisclosureResponseCancellationAdviceV01.XmlTag)]
    public required ShareholderIdentificationDisclosureResponseCancellationAdviceV01 Message { get; init; }
    public void WriteXml(XmlWriter writer)
    {
        writer.WriteStartElement(null, DocumentElementName, DocumentNamespace );
        writer.WriteStartElement(ShareholderIdentificationDisclosureResponseCancellationAdviceV01.XmlTag);
        Message.Serialize(writer, DocumentNamespace);
        writer.WriteEndElement();
        writer.WriteEndElement();
        writer.WriteEndDocument();
    }
    
    public void ReadXml(XmlReader reader)
    {
        throw new NotImplementedException();
    }
    
    public System.Xml.Schema.XmlSchema GetSchema() => null;
}
