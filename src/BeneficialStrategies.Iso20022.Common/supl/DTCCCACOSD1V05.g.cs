//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for DTCCCACOSD1V05.  ISO2002 ID# _I7vsrZCEEeaSk9d1hvTrHg.
//

using System.ComponentModel.DataAnnotations;
using BeneficialStrategies.Iso20022.Components;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;
using Helper = BeneficialStrategies.Iso20022.Framework.IsoXmlSerializationHelper<BeneficialStrategies.Iso20022.supl.DTCCCACOSD1V05>;

namespace BeneficialStrategies.Iso20022.supl;


/// <summary>
/// This record is an implementation of the supl.011.001.05 ISO standard message type.
/// There are significant differences between different variants of the same message. It is crucial that you select exactly the implementation you intend to send or receive.
/// The DTCCCACOSD1 message extends ISO corporate action movement confirmation message with DTCC corporate action elements not covered in the standard message.
/// </summary>
[Serializable]
[Description(@"The DTCCCACOSD1 message extends ISO corporate action movement confirmation message with DTCC corporate action elements not covered in the standard message.")]
public partial record DTCCCACOSD1V05 : IOuterRecord<DTCCCACOSD1V05,DTCCCACOSD1V05Document>
    ,IIsoXmlSerilizable<DTCCCACOSD1V05>, ISerializeInsideARootElement
{
    
    /// <summary>
    /// The official ISO 20022 designation for this version of this message.
    /// </summary>
    public const string IsoIdentifier = "supl.011.001.05";
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "DTCCCACOSD1";
    
    /// <summary>
    /// The XML namespace in which this message is delivered.
    /// </summary>
    public static string IsoXmlNamspace => DTCCCACOSD1V05Document.DocumentNamespace;
    
    #nullable enable
    /// <summary>
    /// Page number of the message and continuation indicator to indicate that the multi-parts confirmation is to continue or that the message is the last page of the multi-parts confirmation.
    /// </summary>
    [IsoId("_3HceIZE_EeanIpS4qvJ1tw")]
    [Description(@"Page number of the message and continuation indicator to indicate that the multi-parts confirmation is to continue or that the message is the last page of the multi-parts confirmation.")]
    [DataMember(Name="Pgntn")]
    [XmlElement(ElementName="Pgntn")]
    public Pagination? Pagination { get; init; }
    
    /// <summary>
    /// Extension block for the information to be extended as corporate action general information.
    /// </summary>
    [IsoId("_I7vsr5CEEeaSk9d1hvTrHg")]
    [Description(@"Extension block for the information to be extended as corporate action general information.")]
    [DataMember(Name="CorpActnGnlInf")]
    [XmlElement(ElementName="CorpActnGnlInf")]
    public CorporateActionGeneralInformationSD27? CorporateActionGeneralInformation { get; init; }
    
    /// <summary>
    /// Information to be extended as supplementary data to underlying security details.
    /// </summary>
    [IsoId("_I7wTsZCEEeaSk9d1hvTrHg")]
    [Description(@"Information to be extended as supplementary data to underlying security details.")]
    [DataMember(Name="UndrlygScty")]
    [XmlElement(ElementName="UndrlygScty")]
    public FinancialInstrumentAttributesSD9? UnderlyingSecurity { get; init; }
    
    /// <summary>
    /// Information to be extended as supplementary data to corporate action details.
    /// </summary>
    [IsoId("_I7wTs5CEEeaSk9d1hvTrHg")]
    [Description(@"Information to be extended as supplementary data to corporate action details.")]
    [DataMember(Name="CorpActnDtls")]
    [XmlElement(ElementName="CorpActnDtls")]
    public CorporateActionSD16? CorporateActionDetails { get; init; }
    
    /// <summary>
    /// Extension block for the information to be extended as account balance.
    /// </summary>
    [IsoId("_I7wTtZCEEeaSk9d1hvTrHg")]
    [Description(@"Extension block for the information to be extended as account balance.")]
    [DataMember(Name="AcctBal")]
    [XmlElement(ElementName="AcctBal")]
    public AccountBalanceSD9? AccountBalance { get; init; }
    
    /// <summary>
    /// Information to be extended as corporate action confirmation details.
    /// </summary>
    [IsoId("_4yXyEJFDEeanIpS4qvJ1tw")]
    [Description(@"Information to be extended as corporate action confirmation details.")]
    [DataMember(Name="CorpActnConfDtls")]
    [XmlElement(ElementName="CorpActnConfDtls")]
    public CorporateActionConfirmationDetailsSD1? CorporateActionConfirmationDetails { get; init; }
    
    /// <summary>
    /// Information to be extended as corporate action confirmation securities movement details.
    /// </summary>
    [IsoId("_I7wTt5CEEeaSk9d1hvTrHg")]
    [Description(@"Information to be extended as corporate action confirmation securities movement details.")]
    [DataMember(Name="CorpActnConfSctiesMvmntDtls")]
    [XmlElement(ElementName="CorpActnConfSctiesMvmntDtls")]
    public CorporateActionConfirmationSecuritiesMovementDetailsSD5? CorporateActionConfirmationSecuritiesMovementDetails { get; init; }
    
    /// <summary>
    /// Extension block for the information to be extended as corporate action confirmation cash movement details.
    /// </summary>
    [IsoId("_I7wTv5CEEeaSk9d1hvTrHg")]
    [Description(@"Extension block for the information to be extended as corporate action confirmation cash movement details.")]
    [DataMember(Name="CorpActnConfCshMvmntDtls")]
    [XmlElement(ElementName="CorpActnConfCshMvmntDtls")]
    public CorporateActionConfirmationCashMovementDetailsSD4? CorporateActionConfirmationCashMovementDetails { get; init; }
    
    /// <summary>
    /// Information to be extended as supplementary data to corporate action option details.
    /// </summary>
    [IsoId("_MrdVAZFHEeanIpS4qvJ1tw")]
    [Description(@"Information to be extended as supplementary data to corporate action option details.")]
    [DataMember(Name="OptnTxDtls")]
    [XmlElement(ElementName="OptnTxDtls")]
    public OptionTransactionDetailsSD2? OptionTransactionDetails { get; init; }
    
    #nullable disable
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="DTCCCACOSD1V05Document"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public DTCCCACOSD1V05Document ToDocument()
    {
        return new DTCCCACOSD1V05Document { Message = this };
    }
    public static XName RootElement => Helper.CreateXName("DTCCCACOSD1");
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        if (Pagination is Pagination PaginationValue)
        {
            writer.WriteStartElement(null, "Pgntn", xmlNamespace );
            PaginationValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (CorporateActionGeneralInformation is CorporateActionGeneralInformationSD27 CorporateActionGeneralInformationValue)
        {
            writer.WriteStartElement(null, "CorpActnGnlInf", xmlNamespace );
            CorporateActionGeneralInformationValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (UnderlyingSecurity is FinancialInstrumentAttributesSD9 UnderlyingSecurityValue)
        {
            writer.WriteStartElement(null, "UndrlygScty", xmlNamespace );
            UnderlyingSecurityValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (CorporateActionDetails is CorporateActionSD16 CorporateActionDetailsValue)
        {
            writer.WriteStartElement(null, "CorpActnDtls", xmlNamespace );
            CorporateActionDetailsValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (AccountBalance is AccountBalanceSD9 AccountBalanceValue)
        {
            writer.WriteStartElement(null, "AcctBal", xmlNamespace );
            AccountBalanceValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (CorporateActionConfirmationDetails is CorporateActionConfirmationDetailsSD1 CorporateActionConfirmationDetailsValue)
        {
            writer.WriteStartElement(null, "CorpActnConfDtls", xmlNamespace );
            CorporateActionConfirmationDetailsValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (CorporateActionConfirmationSecuritiesMovementDetails is CorporateActionConfirmationSecuritiesMovementDetailsSD5 CorporateActionConfirmationSecuritiesMovementDetailsValue)
        {
            writer.WriteStartElement(null, "CorpActnConfSctiesMvmntDtls", xmlNamespace );
            CorporateActionConfirmationSecuritiesMovementDetailsValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (CorporateActionConfirmationCashMovementDetails is CorporateActionConfirmationCashMovementDetailsSD4 CorporateActionConfirmationCashMovementDetailsValue)
        {
            writer.WriteStartElement(null, "CorpActnConfCshMvmntDtls", xmlNamespace );
            CorporateActionConfirmationCashMovementDetailsValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (OptionTransactionDetails is OptionTransactionDetailsSD2 OptionTransactionDetailsValue)
        {
            writer.WriteStartElement(null, "OptnTxDtls", xmlNamespace );
            OptionTransactionDetailsValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static DTCCCACOSD1V05 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}

/// <summary>
/// This is the outer document that contains the XML serialization wrapper and necessary namespaces for proper serialization.
/// For a more complete description of the business meaning of the message, see the underlying <seealso cref="DTCCCACOSD1V05"/>.
/// </summary>
[Serializable]
public partial record DTCCCACOSD1V05Document : IOuterDocument<DTCCCACOSD1V05>, IXmlSerializable
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:supl.011.001.05";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "Document";
    
    /// <summary>
    /// The instance of <seealso cref="DTCCCACOSD1V05"/> is required.
    /// </summary>
    [DataMember(Name=DTCCCACOSD1V05.XmlTag)]
    public required DTCCCACOSD1V05 Message { get; init; }
    public void WriteXml(XmlWriter writer)
    {
        writer.WriteStartElement(null, DocumentElementName, DocumentNamespace );
        writer.WriteStartElement(DTCCCACOSD1V05.XmlTag);
        Message.Serialize(writer, DocumentNamespace);
        writer.WriteEndElement();
        writer.WriteEndElement();
        writer.WriteEndDocument();
    }
    
    public void ReadXml(XmlReader reader)
    {
        throw new NotImplementedException();
    }
    
    public System.Xml.Schema.XmlSchema GetSchema() => null;
}
