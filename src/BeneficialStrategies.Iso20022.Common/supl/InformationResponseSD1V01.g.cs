//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for InformationResponseSD1V01.  ISO2002 ID# _8nOCwC_7EeOKib24wnHaFg.
//

using System.ComponentModel.DataAnnotations;
using BeneficialStrategies.Iso20022.Components;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.supl;


/// <summary>
/// This extends the message InformationRequestResponse.
/// </summary>
[Serializable]
[DataContract(Name = XmlTag)]
[XmlType(TypeName = XmlTag)]
[Description(@"This extends the message InformationRequestResponse.")]
public partial record InformationResponseSD1V01 : IOuterRecord
{
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "InfRspnSD1";
    
    #nullable enable
    /// <summary>
    /// Information used to identify the request.
    /// </summary>
    [IsoId("_hWzaoJirEeO4o528ngEXuw")]
    [Description(@"Information used to identify the request.")]
    [DataMember(Name="InvstgtnId")]
    [XmlElement(ElementName="InvstgtnId")]
    [Required]
    public required IsoMax35Text InvestigationIdentification { get; init; }
    
    /// <summary>
    /// Date and time of creation of the extension.
    /// </summary>
    [IsoId("_pfuCgJirEeO4o528ngEXuw")]
    [Description(@"Date and time of creation of the extension.")]
    [DataMember(Name="CreDtTm")]
    [XmlElement(ElementName="CreDtTm")]
    [Required]
    public required IsoISODateTime CreationDateTime { get; init; }
    
    /// <summary>
    /// Identifies the account servicing institution.
    /// </summary>
    [IsoId("_oUIuoC_8EeOKib24wnHaFg")]
    [Description(@"Identifies the account servicing institution.")]
    [DataMember(Name="AcctSvcrId")]
    [XmlElement(ElementName="AcctSvcrId")]
    [Required]
    public required BranchAndFinancialInstitutionIdentification4 AccountServicerIdentification { get; init; }
    
    /// <summary>
    /// Requested account and its owners.
    /// </summary>
    [IsoId("_jqrv4C__EeOKib24wnHaFg")]
    [Description(@"Requested account and its owners.")]
    [DataMember(Name="AcctAndPties")]
    [XmlElement(ElementName="AcctAndPties")]
    [Required]
    public required AccountAndParties2 AccountAndParties { get; init; }
    
    #nullable disable
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="InformationResponseSD1V01Document"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public InformationResponseSD1V01Document ToDocument()
    {
        return new InformationResponseSD1V01Document { Message = this };
    }
}

/// <summary>
/// This is the outer document that contains the XML serialization wrapper and necessary namespaces for proper serialization.
/// For a more complete description of the business meaning of the message, see the underlying <seealso cref="InformationResponseSD1V01"/>.
/// </summary>
[Serializable]
[DataContract(Name = DocumentElementName, Namespace = DocumentNamespace )]
[XmlRoot(ElementName = DocumentElementName, Namespace = DocumentNamespace )]
public partial record InformationResponseSD1V01Document : IOuterDocument<InformationResponseSD1V01>
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:supl.027.001.01";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "Document";
    
    /// <summary>
    /// The instance of <seealso cref="InformationResponseSD1V01"/> is required.
    /// </summary>
    public required InformationResponseSD1V01 Message { get; init; }
}
