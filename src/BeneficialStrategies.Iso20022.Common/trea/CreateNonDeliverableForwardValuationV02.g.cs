//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for CreateNonDeliverableForwardValuationV02.  ISO2002 ID# _PNYUONE8Ed-BzquC8wXy7w_1806193871.
//

using System.ComponentModel.DataAnnotations;
using BeneficialStrategies.Iso20022.Components;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;
using Helper = BeneficialStrategies.Iso20022.Framework.IsoXmlSerializationHelper<BeneficialStrategies.Iso20022.trea.CreateNonDeliverableForwardValuationV02>;

namespace BeneficialStrategies.Iso20022.trea;


/// <summary>
/// This record is an implementation of the trea.004.001.02 ISO standard message type.
/// There are significant differences between different variants of the same message. It is crucial that you select exactly the implementation you intend to send or receive.
/// Scope
/// The CreateNonDeliverableForwardValuation message is sent by a participant to a central system or to a counterparty to notify the valuation of a non deliverable trade.
/// Usage
/// The two trading parties will both send similar notifications to the central settlement system and the central settlement system will send notifications to both.
/// </summary>
[Serializable]
[Description(@"Scope|The CreateNonDeliverableForwardValuation message is sent by a participant to a central system or to a counterparty to notify the valuation of a non deliverable trade.|Usage|The two trading parties will both send similar notifications to the central settlement system and the central settlement system will send notifications to both.")]
public partial record CreateNonDeliverableForwardValuationV02 : IOuterRecord<CreateNonDeliverableForwardValuationV02,CreateNonDeliverableForwardValuationV02Document>
    ,IIsoXmlSerilizable<CreateNonDeliverableForwardValuationV02>, ISerializeInsideARootElement
{
    
    /// <summary>
    /// The official ISO 20022 designation for this version of this message.
    /// </summary>
    public const string IsoIdentifier = "trea.004.001.02";
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "CretNDFValtnV02";
    
    /// <summary>
    /// The XML namespace in which this message is delivered.
    /// </summary>
    public static string IsoXmlNamspace => CreateNonDeliverableForwardValuationV02Document.DocumentNamespace;
    
    #nullable enable
    /// <summary>
    /// Provides identification and date of the valuation of the non deliverable trade which is created.
    /// </summary>
    [IsoId("_PNYUOdE8Ed-BzquC8wXy7w_1867450436")]
    [Description(@"Provides identification and date of the valuation of the non deliverable trade which is created.")]
    [DataMember(Name="TradInf")]
    [XmlElement(ElementName="TradInf")]
    [Required]
    public required TradeAgreement1 TradeInformation { get; init; }
    
    /// <summary>
    /// Specifies the trading side of the valuation of the non deliverable trade which is created.
    /// </summary>
    [IsoId("_PNYUOtE8Ed-BzquC8wXy7w_1743430709")]
    [Description(@"Specifies the trading side of the valuation of the non deliverable trade which is created.")]
    [DataMember(Name="TradgSdId")]
    [XmlElement(ElementName="TradgSdId")]
    [Required]
    public required TradePartyIdentification3 TradingSideIdentification { get; init; }
    
    /// <summary>
    /// Specifies the counterparty of the valuation of the non deliverable trade which is created.
    /// </summary>
    [IsoId("_PNYUO9E8Ed-BzquC8wXy7w_2094371836")]
    [Description(@"Specifies the counterparty of the valuation of the non deliverable trade which is created.")]
    [DataMember(Name="CtrPtySdId")]
    [XmlElement(ElementName="CtrPtySdId")]
    [Required]
    public required TradePartyIdentification3 CounterpartySideIdentification { get; init; }
    
    /// <summary>
    /// Specifies the amounts of the valuation of the non deliverable trade which is created.
    /// </summary>
    [IsoId("_PNheINE8Ed-BzquC8wXy7w_1514664860")]
    [Description(@"Specifies the amounts of the valuation of the non deliverable trade which is created.")]
    [DataMember(Name="TradAmts")]
    [XmlElement(ElementName="TradAmts")]
    [Required]
    public required AmountsAndValueDate1 TradeAmounts { get; init; }
    
    /// <summary>
    /// Specifies the valuation information of the valuation of the non deliverable trade which is created.
    /// </summary>
    [IsoId("_PNheIdE8Ed-BzquC8wXy7w_1542371945")]
    [Description(@"Specifies the valuation information of the valuation of the non deliverable trade which is created.")]
    [DataMember(Name="ValtnInf")]
    [XmlElement(ElementName="ValtnInf")]
    [Required]
    public required ValuationData2 ValuationInformation { get; init; }
    
    /// <summary>
    /// Specifies the valuation rate of the valuation of the non deliverable trade which is created.
    /// </summary>
    [IsoId("_PNheItE8Ed-BzquC8wXy7w_1810190650")]
    [Description(@"Specifies the valuation rate of the valuation of the non deliverable trade which is created.")]
    [DataMember(Name="ValtnRate")]
    [XmlElement(ElementName="ValtnRate")]
    [Required]
    public required AgreedRate1 ValuationRate { get; init; }
    
    #nullable disable
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="CreateNonDeliverableForwardValuationV02Document"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public CreateNonDeliverableForwardValuationV02Document ToDocument()
    {
        return new CreateNonDeliverableForwardValuationV02Document { Message = this };
    }
    public static XName RootElement => Helper.CreateXName("CretNDFValtnV02");
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "TradInf", xmlNamespace );
        TradeInformation.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "TradgSdId", xmlNamespace );
        TradingSideIdentification.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "CtrPtySdId", xmlNamespace );
        CounterpartySideIdentification.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "TradAmts", xmlNamespace );
        TradeAmounts.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "ValtnInf", xmlNamespace );
        ValuationInformation.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "ValtnRate", xmlNamespace );
        ValuationRate.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
    }
    public static CreateNonDeliverableForwardValuationV02 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}

/// <summary>
/// This is the outer document that contains the XML serialization wrapper and necessary namespaces for proper serialization.
/// For a more complete description of the business meaning of the message, see the underlying <seealso cref="CreateNonDeliverableForwardValuationV02"/>.
/// </summary>
[Serializable]
public partial record CreateNonDeliverableForwardValuationV02Document : IOuterDocument<CreateNonDeliverableForwardValuationV02>, IXmlSerializable
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:trea.004.001.02";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "Document";
    
    /// <summary>
    /// The instance of <seealso cref="CreateNonDeliverableForwardValuationV02"/> is required.
    /// </summary>
    [DataMember(Name=CreateNonDeliverableForwardValuationV02.XmlTag)]
    public required CreateNonDeliverableForwardValuationV02 Message { get; init; }
    public void WriteXml(XmlWriter writer)
    {
        writer.WriteStartElement(null, DocumentElementName, DocumentNamespace );
        writer.WriteStartElement(CreateNonDeliverableForwardValuationV02.XmlTag);
        Message.Serialize(writer, DocumentNamespace);
        writer.WriteEndElement();
        writer.WriteEndElement();
        writer.WriteEndDocument();
    }
    
    public void ReadXml(XmlReader reader)
    {
        throw new NotImplementedException();
    }
    
    public System.Xml.Schema.XmlSchema GetSchema() => null;
}
