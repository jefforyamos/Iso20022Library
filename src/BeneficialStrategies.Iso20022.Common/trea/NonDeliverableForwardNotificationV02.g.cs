//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for NonDeliverableForwardNotificationV02.  ISO2002 ID# _URegMNE8Ed-BzquC8wXy7w_1248981968.
//

using System.ComponentModel.DataAnnotations;
using BeneficialStrategies.Iso20022.Components;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;
using Helper = BeneficialStrategies.Iso20022.Framework.IsoXmlSerializationHelper<BeneficialStrategies.Iso20022.trea.NonDeliverableForwardNotificationV02>;

namespace BeneficialStrategies.Iso20022.trea;


/// <summary>
/// This record is an implementation of the trea.007.001.02 ISO standard message type.
/// There are significant differences between different variants of the same message. It is crucial that you select exactly the implementation you intend to send or receive.
/// Scope
/// The NonDeliverableForwardNotification message is sent by a central system to a participant to provide details of a non deliverable forward trade.
/// Usage
/// The notification is sent by a central settlement system to the two trading parties after it has received create, amend or cancel messages from both. The message may also contain information on the settlement of the trade.
/// </summary>
[Serializable]
[Description(@"Scope|The NonDeliverableForwardNotification message is sent by a central system to a participant to provide details of a non deliverable forward trade.|Usage|The notification is sent by a central settlement system to the two trading parties after it has received create, amend or cancel messages from both. The message may also contain information on the settlement of the trade.")]
public partial record NonDeliverableForwardNotificationV02 : IOuterRecord<NonDeliverableForwardNotificationV02,NonDeliverableForwardNotificationV02Document>
    ,IIsoXmlSerilizable<NonDeliverableForwardNotificationV02>, ISerializeInsideARootElement
{
    
    /// <summary>
    /// The official ISO 20022 designation for this version of this message.
    /// </summary>
    public const string IsoIdentifier = "trea.007.001.02";
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "NDFNtfctnV02";
    
    /// <summary>
    /// The XML namespace in which this message is delivered.
    /// </summary>
    public static string IsoXmlNamspace => NonDeliverableForwardNotificationV02Document.DocumentNamespace;
    
    #nullable enable
    /// <summary>
    /// Specifies the trading side of the non deliverable trade which is reported.
    /// </summary>
    [IsoId("_URegMdE8Ed-BzquC8wXy7w_942299240")]
    [Description(@"Specifies the trading side of the non deliverable trade which is reported.")]
    [DataMember(Name="TradgSdId")]
    [XmlElement(ElementName="TradgSdId")]
    [Required]
    public required TradePartyIdentification3 TradingSideIdentification { get; init; }
    
    /// <summary>
    /// Specifies the counterparty of the non deliverable trade which is reported.
    /// </summary>
    [IsoId("_URegMtE8Ed-BzquC8wXy7w_945996128")]
    [Description(@"Specifies the counterparty of the non deliverable trade which is reported.")]
    [DataMember(Name="CtrPtySdId")]
    [XmlElement(ElementName="CtrPtySdId")]
    [Required]
    public required TradePartyIdentification3 CounterpartySideIdentification { get; init; }
    
    /// <summary>
    /// Set of data specified for the opening of a non deliverable trade.
    /// </summary>
    [IsoId("_URegM9E8Ed-BzquC8wXy7w_159065050")]
    [Description(@"Set of data specified for the opening of a non deliverable trade.")]
    [DataMember(Name="OpngData")]
    [XmlElement(ElementName="OpngData")]
    public OpeningData2? OpeningData { get; init; }
    
    /// <summary>
    /// Set of data specified for the valuation of a non deliverable trade.
    /// </summary>
    [IsoId("_URegNNE8Ed-BzquC8wXy7w_1474183734")]
    [Description(@"Set of data specified for the valuation of a non deliverable trade.")]
    [DataMember(Name="ValtnData")]
    [XmlElement(ElementName="ValtnData")]
    public ClosingData2? ValuationData { get; init; }
    
    /// <summary>
    /// Provides information on the status of a trade in a central system.
    /// </summary>
    [IsoId("_URegNdE8Ed-BzquC8wXy7w_1332886078")]
    [Description(@"Provides information on the status of a trade in a central system.")]
    [DataMember(Name="TradInfAndSts")]
    [XmlElement(ElementName="TradInfAndSts")]
    [Required]
    public required TradeStatus1 TradeInformationAndStatus { get; init; }
    
    /// <summary>
    /// Provides information on the settlement of a trade.
    /// </summary>
    [IsoId("_URoRMNE8Ed-BzquC8wXy7w_941311999")]
    [Description(@"Provides information on the settlement of a trade.")]
    [DataMember(Name="SttlmData")]
    [XmlElement(ElementName="SttlmData")]
    public SettlementData2? SettlementData { get; init; }
    
    #nullable disable
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="NonDeliverableForwardNotificationV02Document"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public NonDeliverableForwardNotificationV02Document ToDocument()
    {
        return new NonDeliverableForwardNotificationV02Document { Message = this };
    }
    public static XName RootElement => Helper.CreateXName("NDFNtfctnV02");
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "TradgSdId", xmlNamespace );
        TradingSideIdentification.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "CtrPtySdId", xmlNamespace );
        CounterpartySideIdentification.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (OpeningData is OpeningData2 OpeningDataValue)
        {
            writer.WriteStartElement(null, "OpngData", xmlNamespace );
            OpeningDataValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (ValuationData is ClosingData2 ValuationDataValue)
        {
            writer.WriteStartElement(null, "ValtnData", xmlNamespace );
            ValuationDataValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        writer.WriteStartElement(null, "TradInfAndSts", xmlNamespace );
        TradeInformationAndStatus.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (SettlementData is SettlementData2 SettlementDataValue)
        {
            writer.WriteStartElement(null, "SttlmData", xmlNamespace );
            SettlementDataValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static NonDeliverableForwardNotificationV02 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}

/// <summary>
/// This is the outer document that contains the XML serialization wrapper and necessary namespaces for proper serialization.
/// For a more complete description of the business meaning of the message, see the underlying <seealso cref="NonDeliverableForwardNotificationV02"/>.
/// </summary>
[Serializable]
public partial record NonDeliverableForwardNotificationV02Document : IOuterDocument<NonDeliverableForwardNotificationV02>, IXmlSerializable
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:trea.007.001.02";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "Document";
    
    /// <summary>
    /// The instance of <seealso cref="NonDeliverableForwardNotificationV02"/> is required.
    /// </summary>
    [DataMember(Name=NonDeliverableForwardNotificationV02.XmlTag)]
    public required NonDeliverableForwardNotificationV02 Message { get; init; }
    public void WriteXml(XmlWriter writer)
    {
        writer.WriteStartElement(null, DocumentElementName, DocumentNamespace );
        writer.WriteStartElement(NonDeliverableForwardNotificationV02.XmlTag);
        Message.Serialize(writer, DocumentNamespace);
        writer.WriteEndElement();
        writer.WriteEndElement();
        writer.WriteEndDocument();
    }
    
    public void ReadXml(XmlReader reader)
    {
        throw new NotImplementedException();
    }
    
    public System.Xml.Schema.XmlSchema GetSchema() => null;
}
