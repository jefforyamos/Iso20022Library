//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for InvoiceAssignmentRequestV01.  ISO2002 ID# _OTgzNDQy-AOSNFX-8224505.
//

using System.ComponentModel.DataAnnotations;
using BeneficialStrategies.Iso20022.Components;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;
using Helper = BeneficialStrategies.Iso20022.Framework.IsoXmlSerializationHelper<BeneficialStrategies.Iso20022.tsin.InvoiceAssignmentRequestV01>;

namespace BeneficialStrategies.Iso20022.tsin;


/// <summary>
/// This record is an implementation of the tsin.006.001.01 ISO standard message type.
/// There are significant differences between different variants of the same message. It is crucial that you select exactly the implementation you intend to send or receive.
/// The InvoiceAssignmentRequest message is sent from a factoring client to a factoring service provider and, optionally, to an interested party. It indicates the transfer of payment obligations concerning financial documents.
/// The message contains a list of financing requests together with data that are necessary to transfer the related rights for example regarding legal references for example jurisdiction, language or country. Furthermore, the message can reference related messages and can include data from other messages.
/// A factoring client combines a set of financial documents with same characteristics and assigns them to a factoring service. The client can send several assignments in one message and combine them according to different criteria for example for different clients or different currencies.
/// </summary>
[Serializable]
[Description(@"The InvoiceAssignmentRequest message is sent from a factoring client to a factoring service provider and, optionally, to an interested party. It indicates the transfer of payment obligations concerning financial documents.|The message contains a list of financing requests together with data that are necessary to transfer the related rights for example regarding legal references for example jurisdiction, language or country. Furthermore, the message can reference related messages and can include data from other messages.|A factoring client combines a set of financial documents with same characteristics and assigns them to a factoring service. The client can send several assignments in one message and combine them according to different criteria for example for different clients or different currencies.")]
public partial record InvoiceAssignmentRequestV01 : IOuterRecord<InvoiceAssignmentRequestV01,InvoiceAssignmentRequestV01Document>
    ,IIsoXmlSerilizable<InvoiceAssignmentRequestV01>, ISerializeInsideARootElement
{
    
    /// <summary>
    /// The official ISO 20022 designation for this version of this message.
    /// </summary>
    public const string IsoIdentifier = "tsin.006.001.01";
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "InvcAssgnmtReq";
    
    /// <summary>
    /// The XML namespace in which this message is delivered.
    /// </summary>
    public static string IsoXmlNamspace => InvoiceAssignmentRequestV01Document.DocumentNamespace;
    
    #nullable enable
    /// <summary>
    /// Set of characteristics that unambiguously identify the invoice assigment request, such as group identification, creation date time, number of single invoice financing requests, totals and subtotals.
    /// </summary>
    [IsoId("_OTgzNDQz-AOSNFX-8224505")]
    [Description(@"Set of characteristics that unambiguously identify the invoice assigment request, such as group identification, creation date time, number of single invoice financing requests, totals and subtotals.")]
    [DataMember(Name="Hdr")]
    [XmlElement(ElementName="Hdr")]
    [Required]
    public required BusinessLetter1 Header { get; init; }
    
    /// <summary>
    /// List of assignments of financial items.
    /// </summary>
    [IsoId("_OTgzNDQ0-AOSNFX-8224505")]
    [Description(@"List of assignments of financial items.")]
    [DataMember(Name="AssgnmtList")]
    [XmlElement(ElementName="AssgnmtList")]
    [Required]
    public required FinancingItemList1 AssignmentList { get; init; }
    
    /// <summary>
    /// Number of assignments.
    /// </summary>
    [IsoId("_OTgzNDQ1-AOSNFX-8224505")]
    [Description(@"Number of assignments.")]
    [DataMember(Name="AssgnmtCnt")]
    [XmlElement(ElementName="AssgnmtCnt")]
    public IsoMax15NumericText? AssignmentCount { get; init; }
    
    /// <summary>
    /// Total number of individual items in all assignments.
    /// </summary>
    [IsoId("_OTgzNDQ2-AOSNFX-8224505")]
    [Description(@"Total number of individual items in all assignments.")]
    [DataMember(Name="ItmCnt")]
    [XmlElement(ElementName="ItmCnt")]
    public IsoMax15NumericText? ItemCount { get; init; }
    
    /// <summary>
    /// Total of all individual amounts included in all lists, irrespective of currencies or direction.
    /// </summary>
    [IsoId("_OTgzNDQ3-AOSNFX-8224505")]
    [Description(@"Total of all individual amounts included in all lists, irrespective of currencies or direction.")]
    [DataMember(Name="CtrlSum")]
    [XmlElement(ElementName="CtrlSum")]
    public IsoDecimalNumber? ControlSum { get; init; }
    
    /// <summary>
    /// Referenced or related business message.
    /// </summary>
    [IsoId("_OTgzNDQ4-AOSNFX-8224505")]
    [Description(@"Referenced or related business message.")]
    [DataMember(Name="AttchdMsg")]
    [XmlElement(ElementName="AttchdMsg")]
    public EncapsulatedBusinessMessage1? AttachedMessage { get; init; }
    
    #nullable disable
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="InvoiceAssignmentRequestV01Document"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public InvoiceAssignmentRequestV01Document ToDocument()
    {
        return new InvoiceAssignmentRequestV01Document { Message = this };
    }
    public static XName RootElement => Helper.CreateXName("InvcAssgnmtReq");
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Hdr", xmlNamespace );
        Header.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "AssgnmtList", xmlNamespace );
        AssignmentList.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (AssignmentCount is IsoMax15NumericText AssignmentCountValue)
        {
            writer.WriteStartElement(null, "AssgnmtCnt", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax15NumericText(AssignmentCountValue)); // data type Max15NumericText System.String
            writer.WriteEndElement();
        }
        if (ItemCount is IsoMax15NumericText ItemCountValue)
        {
            writer.WriteStartElement(null, "ItmCnt", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax15NumericText(ItemCountValue)); // data type Max15NumericText System.String
            writer.WriteEndElement();
        }
        if (ControlSum is IsoDecimalNumber ControlSumValue)
        {
            writer.WriteStartElement(null, "CtrlSum", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoDecimalNumber(ControlSumValue)); // data type DecimalNumber System.UInt64
            writer.WriteEndElement();
        }
        if (AttachedMessage is EncapsulatedBusinessMessage1 AttachedMessageValue)
        {
            writer.WriteStartElement(null, "AttchdMsg", xmlNamespace );
            AttachedMessageValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static InvoiceAssignmentRequestV01 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}

/// <summary>
/// This is the outer document that contains the XML serialization wrapper and necessary namespaces for proper serialization.
/// For a more complete description of the business meaning of the message, see the underlying <seealso cref="InvoiceAssignmentRequestV01"/>.
/// </summary>
[Serializable]
public partial record InvoiceAssignmentRequestV01Document : IOuterDocument<InvoiceAssignmentRequestV01>, IXmlSerializable
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:tsin.006.001.01";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "Document";
    
    /// <summary>
    /// The instance of <seealso cref="InvoiceAssignmentRequestV01"/> is required.
    /// </summary>
    [DataMember(Name=InvoiceAssignmentRequestV01.XmlTag)]
    public required InvoiceAssignmentRequestV01 Message { get; init; }
    public void WriteXml(XmlWriter writer)
    {
        writer.WriteStartElement(null, DocumentElementName, DocumentNamespace );
        writer.WriteStartElement(InvoiceAssignmentRequestV01.XmlTag);
        Message.Serialize(writer, DocumentNamespace);
        writer.WriteEndElement();
        writer.WriteEndElement();
        writer.WriteEndDocument();
    }
    
    public void ReadXml(XmlReader reader)
    {
        throw new NotImplementedException();
    }
    
    public System.Xml.Schema.XmlSchema GetSchema() => null;
}
