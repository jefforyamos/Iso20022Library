//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for InvoiceAssignmentStatusV01.  ISO2002 ID# _OTgzNDQ5-AOSNFX-8224505.
//
namespace BeneficialStrategies.Iso20022.tsin;

/// <summary>
/// The message InvoiceAssignmentStatus is sent by a factoring service provider to a factoring client and, optionally, to an interested party as a response to assignments requests.
/// The factoring service provider returns a copy of items of corresponding requests together with an information about the status of treatment, for example acceptance, rejection or treatment not yet finished. A rejection can be the result of bad message syntax, but also for other motives such as risk, compliance or covenants.
/// For each reported financial item, the factoring service provider includes a reference to the corresponding item of the InvoiceFinancingRequest message and may include the referenced item as well as data from other related and referenced messages.
/// The message contains information about other parties to be notified and whether these parties are required to acknowledge the assignment.
/// The message can carry digital signatures if required by context.
/// </summary>
[Serializable]
[DataContract(Name = XmlTag)]
[XmlType(TypeName = XmlTag)]
[Description(@"The message InvoiceAssignmentStatus is sent by a factoring service provider to a factoring client and, optionally, to an interested party as a response to assignments requests.|The factoring service provider returns a copy of items of corresponding requests together with an information about the status of treatment, for example acceptance, rejection or treatment not yet finished. A rejection can be the result of bad message syntax, but also for other motives such as risk, compliance or covenants.|For each reported financial item, the factoring service provider includes a reference to the corresponding item of the InvoiceFinancingRequest message and may include the referenced item as well as data from other related and referenced messages.|The message contains information about other parties to be notified and whether these parties are required to acknowledge the assignment.|The message can carry digital signatures if required by context.")]
public partial record InvoiceAssignmentStatusV01 : IOuterRecord
{
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "InvcAssgnmtSts";
    
    /* ------------------------------------------ Underlying data types not ready yet
    /// <summary>
    /// Set of characteristics that unambiguously identify the assignment status, common parameters, documents and identifications.
    /// </summary>
    [IsoId("_OTgzNDUw-AOSNFX-8224505")]
    [Description(@"Set of characteristics that unambiguously identify the assignment status, common parameters, documents and identifications.")]
    [DataMember(Name="Hdr")]
    [XmlElement(ElementName="Hdr")]
    [Required]
    public required BusinessLetter1 Header { get; init; }
    
    /// <summary>
    /// List of assignments of financial items.
    /// </summary>
    [IsoId("_OTgzNDUx-AOSNFX-8224505")]
    [Description(@"List of assignments of financial items.")]
    [DataMember(Name="AssgnmtList")]
    [XmlElement(ElementName="AssgnmtList")]
    [Required]
    public required FinancingItemList1 AssignmentList { get; init; }
    
    /// <summary>
    /// Number of assignments.
    /// </summary>
    [IsoId("_OTgzNDUy-AOSNFX-8224505")]
    [Description(@"Number of assignments.")]
    [DataMember(Name="AssgnmtCnt")]
    [XmlElement(ElementName="AssgnmtCnt")]
    public IsoMax15NumericText? AssignmentCount { get; init; }
    
    /// <summary>
    /// Total number of individual items in all assignments.
    /// </summary>
    [IsoId("_OTgzNDUz-AOSNFX-8224505")]
    [Description(@"Total number of individual items in all assignments.")]
    [DataMember(Name="ItmCnt")]
    [XmlElement(ElementName="ItmCnt")]
    public IsoMax15NumericText? ItemCount { get; init; }
    
    /// <summary>
    /// Total of all individual amounts included in all lists, irrespective of currencies or direction.
    /// </summary>
    [IsoId("_OTgzNDU0-AOSNFX-8224505")]
    [Description(@"Total of all individual amounts included in all lists, irrespective of currencies or direction.")]
    [DataMember(Name="CtrlSum")]
    [XmlElement(ElementName="CtrlSum")]
    public IsoDecimalNumber? ControlSum { get; init; }
    
    /// <summary>
    /// Referenced or related business message.
    /// </summary>
    [IsoId("_OTgzNDU1-AOSNFX-8224505")]
    [Description(@"Referenced or related business message.")]
    [DataMember(Name="AttchdMsg")]
    [XmlElement(ElementName="AttchdMsg")]
    public EncapsulatedBusinessMessage1? AttachedMessage { get; init; }
    
    */
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="InvoiceAssignmentStatusV01Document"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public InvoiceAssignmentStatusV01Document ToDocument()
    {
        return new InvoiceAssignmentStatusV01Document { Message = this };
    }
}

/// <summary>
/// This is the outer document that contains the XML serialization wrapper and necessary namespaces for proper serialization.
/// For a more complete description of the business meaning of the message, see the underlying <seealso cref="InvoiceAssignmentStatusV01"/>.
/// </summary>
[Serializable]
[DataContract(Name = DocumentElementName, Namespace = DocumentNamespace )]
[XmlRoot(ElementName = DocumentElementName, Namespace = DocumentNamespace )]
public partial record InvoiceAssignmentStatusV01Document : IOuterDocument<InvoiceAssignmentStatusV01>
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:tsin.007.001.01";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "Document";
    
    /// <summary>
    /// The instance of <seealso cref="InvoiceAssignmentStatusV01"/> is required.
    /// </summary>
    public required InvoiceAssignmentStatusV01 Message { get; init; }
}
