//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for AcknowledgementV03.  ISO2002 ID# _hJ9OiNE8Ed-BzquC8wXy7w_-2019493432.
//

using System.ComponentModel.DataAnnotations;
using BeneficialStrategies.Iso20022.Components;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.tsmt;


/// <summary>
/// Scope
/// The Acknowledgement message is sent by the matching application to the party from which it received a message.
/// This message is used to acknowledge the receipt of a message by the matching application.
/// Usage
/// The Acknowledgement message can be sent to a party from which the matching application received a message to acknowledge the receipt of that message. The message is sent when the matching application does not send any other message in response to a received message.
/// </summary>
[Serializable]
[DataContract(Name = XmlTag)]
[XmlType(TypeName = XmlTag)]
[Description(@"Scope|The Acknowledgement message is sent by the matching application to the party from which it received a message.|This message is used to acknowledge the receipt of a message by the matching application.|Usage|The Acknowledgement message can be sent to a party from which the matching application received a message to acknowledge the receipt of that message. The message is sent when the matching application does not send any other message in response to a received message.")]
public partial record AcknowledgementV03 : IOuterRecord
{
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "Ack";
    
    #nullable enable
    /// <summary>
    /// Identifies the acknowledgement message.
    /// </summary>
    [IsoId("_hJ9OidE8Ed-BzquC8wXy7w_-2019493414")]
    [Description(@"Identifies the acknowledgement message.")]
    [DataMember(Name="AckId")]
    [XmlElement(ElementName="AckId")]
    [Required]
    public required MessageIdentification1 AcknowledgementIdentification { get; init; }
    
    /// <summary>
    /// Unique identification assigned by the matching application to the transaction.|This identification is to be used in any communication between the parties.
    /// </summary>
    [IsoId("_hKG_gNE8Ed-BzquC8wXy7w_-2019492484")]
    [Description(@"Unique identification assigned by the matching application to the transaction.|This identification is to be used in any communication between the parties.")]
    [DataMember(Name="TxId")]
    [XmlElement(ElementName="TxId")]
    public SimpleIdentificationInformation? TransactionIdentification { get; init; }
    
    /// <summary>
    /// Unique identification assigned by the matching application to the baseline when it is established.
    /// </summary>
    [IsoId("_hKG_gdE8Ed-BzquC8wXy7w_-2019493025")]
    [Description(@"Unique identification assigned by the matching application to the baseline when it is established.")]
    [DataMember(Name="EstblishdBaselnId")]
    [XmlElement(ElementName="EstblishdBaselnId")]
    public DocumentIdentification3? EstablishedBaselineIdentification { get; init; }
    
    /// <summary>
    /// Identifies the status of the transaction by means of a code.
    /// </summary>
    [IsoId("_hKG_gtE8Ed-BzquC8wXy7w_-2019492904")]
    [Description(@"Identifies the status of the transaction by means of a code.")]
    [DataMember(Name="TxSts")]
    [XmlElement(ElementName="TxSts")]
    public TransactionStatus4? TransactionStatus { get; init; }
    
    /// <summary>
    /// Reference to the transaction for the financial institution that is the sender of the acknowledged message.
    /// </summary>
    [IsoId("_hKG_g9E8Ed-BzquC8wXy7w_-2019492381")]
    [Description(@"Reference to the transaction for the financial institution that is the sender of the acknowledged message.")]
    [DataMember(Name="UsrTxRef")]
    [XmlElement(ElementName="UsrTxRef")]
    public required IReadOnlyCollection<DocumentIdentification5> UserTransactionReference { get; init; } = []; // Min=0, Max=2
    
    /// <summary>
    /// Reference to the identification of the acknowledged message.
    /// </summary>
    [IsoId("_hKG_hNE8Ed-BzquC8wXy7w_-2019493336")]
    [Description(@"Reference to the identification of the acknowledged message.")]
    [DataMember(Name="AckdMsgRef")]
    [XmlElement(ElementName="AckdMsgRef")]
    [Required]
    public required MessageIdentification1 AcknowledgedMessageReference { get; init; }
    
    /// <summary>
    /// Information on the next processing step required.
    /// </summary>
    [IsoId("_hKG_hdE8Ed-BzquC8wXy7w_-2019492579")]
    [Description(@"Information on the next processing step required.")]
    [DataMember(Name="ReqForActn")]
    [XmlElement(ElementName="ReqForActn")]
    public PendingActivity2? RequestForAction { get; init; }
    
    #nullable disable
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="AcknowledgementV03Document"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public AcknowledgementV03Document ToDocument()
    {
        return new AcknowledgementV03Document { Message = this };
    }
}

/// <summary>
/// This is the outer document that contains the XML serialization wrapper and necessary namespaces for proper serialization.
/// For a more complete description of the business meaning of the message, see the underlying <seealso cref="AcknowledgementV03"/>.
/// </summary>
[Serializable]
[DataContract(Name = DocumentElementName, Namespace = DocumentNamespace )]
[XmlRoot(ElementName = DocumentElementName, Namespace = DocumentNamespace )]
public partial record AcknowledgementV03Document : IOuterDocument<AcknowledgementV03>
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:tsmt.001.001.03";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "Document";
    
    /// <summary>
    /// The instance of <seealso cref="AcknowledgementV03"/> is required.
    /// </summary>
    public required AcknowledgementV03 Message { get; init; }
}
