//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for ActionReminderV03.  ISO2002 ID# _hnA9-NE8Ed-BzquC8wXy7w_-2083336927.
//

using System.ComponentModel.DataAnnotations;
using BeneficialStrategies.Iso20022.Components;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;
using Helper = BeneficialStrategies.Iso20022.Framework.IsoXmlSerializationHelper<BeneficialStrategies.Iso20022.tsmt.ActionReminderV03>;

namespace BeneficialStrategies.Iso20022.tsmt;


/// <summary>
/// This record is an implementation of the tsmt.024.001.03 ISO standard message type.
/// There are significant differences between different variants of the same message. It is crucial that you select exactly the implementation you intend to send or receive.
/// Scope
/// The ActionReminder message is sent by the matching application to a party involved in a transaction that it is expecting to take an action.
/// This message is used to remind a party of an action that it is expected to take.
/// Usage
/// The ActionReminder message can be sent by the matching application to remind a party that it is waiting for
/// - the submission of a transaction initiation message (BaselineReSubmission message),
/// or
/// - the acceptance or rejection of mis-matched data sets (MisMatchAcceptance or MisMatchRejection message),
/// or
/// - the acceptance or rejection of an amendment request (AmendmentAcceptance or AmendmentRejection message),
/// or
/// - the acceptance or rejection of a status change request (StatusChangeRequestAcceptance or StatusChangeRequestRejection message),
/// or
/// - the acceptance or rejection of a status extension request (StatusExtensionAcceptance or StatusExtensionRejection message).
/// - or
/// - the acceptance or rejection of a request to accept role and baseline (RoleAndBaselineAcceptance or RoleAndBaselineRejection message).
/// </summary>
[Serializable]
[Description(@"Scope|The ActionReminder message is sent by the matching application to a party involved in a transaction that it is expecting to take an action.|This message is used to remind a party of an action that it is expected to take.|Usage|The ActionReminder message can be sent by the matching application to remind a party that it is waiting for|- the submission of a transaction initiation message (BaselineReSubmission message),|or|- the acceptance or rejection of mis-matched data sets (MisMatchAcceptance or MisMatchRejection message),|or|- the acceptance or rejection of an amendment request (AmendmentAcceptance or AmendmentRejection message),|or|- the acceptance or rejection of a status change request (StatusChangeRequestAcceptance or StatusChangeRequestRejection message),|or|- the acceptance or rejection of a status extension request (StatusExtensionAcceptance or StatusExtensionRejection message).|- or|- the acceptance or rejection of a request to accept role and baseline (RoleAndBaselineAcceptance or RoleAndBaselineRejection message).")]
public partial record ActionReminderV03 : IOuterRecord<ActionReminderV03,ActionReminderV03Document>
    ,IIsoXmlSerilizable<ActionReminderV03>, ISerializeInsideARootElement
{
    
    /// <summary>
    /// The official ISO 20022 designation for this version of this message.
    /// </summary>
    public const string IsoIdentifier = "tsmt.024.001.03";
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "ActnRmndr";
    
    /// <summary>
    /// The XML namespace in which this message is delivered.
    /// </summary>
    public static string IsoXmlNamspace => ActionReminderV03Document.DocumentNamespace;
    
    #nullable enable
    /// <summary>
    /// Identifies the reminder message.
    /// </summary>
    [IsoId("_hnA9-dE8Ed-BzquC8wXy7w_-2083336503")]
    [Description(@"Identifies the reminder message.")]
    [DataMember(Name="RmndrId")]
    [XmlElement(ElementName="RmndrId")]
    [Required]
    public required MessageIdentification1 ReminderIdentification { get; init; }
    
    /// <summary>
    /// Unique identification assigned by the matching application to the transaction.|This identification is to be used in any communication between the parties.
    /// </summary>
    [IsoId("_hnA9-tE8Ed-BzquC8wXy7w_-2083336866")]
    [Description(@"Unique identification assigned by the matching application to the transaction.|This identification is to be used in any communication between the parties.")]
    [DataMember(Name="TxId")]
    [XmlElement(ElementName="TxId")]
    [Required]
    public required SimpleIdentificationInformation TransactionIdentification { get; init; }
    
    /// <summary>
    /// Unique identification assigned by the matching application to the baseline when it is established.
    /// </summary>
    [IsoId("_hnA9-9E8Ed-BzquC8wXy7w_-2083336924")]
    [Description(@"Unique identification assigned by the matching application to the baseline when it is established.")]
    [DataMember(Name="EstblishdBaselnId")]
    [XmlElement(ElementName="EstblishdBaselnId")]
    public DocumentIdentification3? EstablishedBaselineIdentification { get; init; }
    
    /// <summary>
    /// Identifies the status of the transaction by means of a code.
    /// </summary>
    [IsoId("_hnA9_NE8Ed-BzquC8wXy7w_-2083336556")]
    [Description(@"Identifies the status of the transaction by means of a code.")]
    [DataMember(Name="TxSts")]
    [XmlElement(ElementName="TxSts")]
    [Required]
    public required TransactionStatus4 TransactionStatus { get; init; }
    
    /// <summary>
    /// Reference to the transaction for each financial institution which is a party to the transaction.
    /// </summary>
    [IsoId("_hnKu8NE8Ed-BzquC8wXy7w_-2083336587")]
    [Description(@"Reference to the transaction for each financial institution which is a party to the transaction.")]
    [DataMember(Name="UsrTxRef")]
    [XmlElement(ElementName="UsrTxRef")]
    public required ValueList<DocumentIdentification5> UserTransactionReference { get; init; } = []; // Min=0, Max=2
    
    /// <summary>
    /// Identifies the message for which an action is required.
    /// </summary>
    [IsoId("_hnKu8dE8Ed-BzquC8wXy7w_-2083336525")]
    [Description(@"Identifies the message for which an action is required.")]
    [DataMember(Name="MsgReqrngActn")]
    [XmlElement(ElementName="MsgReqrngActn")]
    [Required]
    public required MessageIdentification1 MessageRequiringAction { get; init; }
    
    /// <summary>
    /// Next processing step required.
    /// </summary>
    [IsoId("_hnKu8tE8Ed-BzquC8wXy7w_-2083336834")]
    [Description(@"Next processing step required.")]
    [DataMember(Name="PdgReqForActn")]
    [XmlElement(ElementName="PdgReqForActn")]
    [Required]
    public required PendingActivity2 PendingRequestForAction { get; init; }
    
    #nullable disable
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="ActionReminderV03Document"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public ActionReminderV03Document ToDocument()
    {
        return new ActionReminderV03Document { Message = this };
    }
    public static XName RootElement => Helper.CreateXName("ActnRmndr");
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "RmndrId", xmlNamespace );
        ReminderIdentification.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "TxId", xmlNamespace );
        TransactionIdentification.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (EstablishedBaselineIdentification is DocumentIdentification3 EstablishedBaselineIdentificationValue)
        {
            writer.WriteStartElement(null, "EstblishdBaselnId", xmlNamespace );
            EstablishedBaselineIdentificationValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        writer.WriteStartElement(null, "TxSts", xmlNamespace );
        TransactionStatus.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "UsrTxRef", xmlNamespace );
        UserTransactionReference.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "MsgReqrngActn", xmlNamespace );
        MessageRequiringAction.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "PdgReqForActn", xmlNamespace );
        PendingRequestForAction.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
    }
    public static ActionReminderV03 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}

/// <summary>
/// This is the outer document that contains the XML serialization wrapper and necessary namespaces for proper serialization.
/// For a more complete description of the business meaning of the message, see the underlying <seealso cref="ActionReminderV03"/>.
/// </summary>
[Serializable]
public partial record ActionReminderV03Document : IOuterDocument<ActionReminderV03>, IXmlSerializable
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:tsmt.024.001.03";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "Document";
    
    /// <summary>
    /// The instance of <seealso cref="ActionReminderV03"/> is required.
    /// </summary>
    [DataMember(Name=ActionReminderV03.XmlTag)]
    public required ActionReminderV03 Message { get; init; }
    public void WriteXml(XmlWriter writer)
    {
        writer.WriteStartElement(null, DocumentElementName, DocumentNamespace );
        writer.WriteStartElement(ActionReminderV03.XmlTag);
        Message.Serialize(writer, DocumentNamespace);
        writer.WriteEndElement();
        writer.WriteEndElement();
        writer.WriteEndDocument();
    }
    
    public void ReadXml(XmlReader reader)
    {
        throw new NotImplementedException();
    }
    
    public System.Xml.Schema.XmlSchema GetSchema() => null;
}
