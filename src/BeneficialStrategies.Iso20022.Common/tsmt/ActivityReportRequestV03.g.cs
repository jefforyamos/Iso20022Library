//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for ActivityReportRequestV03.  ISO2002 ID# _iE0UQNE8Ed-BzquC8wXy7w_1228841128.
//

using System.ComponentModel.DataAnnotations;
using BeneficialStrategies.Iso20022.Components;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;
using Helper = BeneficialStrategies.Iso20022.Framework.IsoXmlSerializationHelper<BeneficialStrategies.Iso20022.tsmt.ActivityReportRequestV03>;

namespace BeneficialStrategies.Iso20022.tsmt;


/// <summary>
/// This record is an implementation of the tsmt.003.001.03 ISO standard message type.
/// There are significant differences between different variants of the same message. It is crucial that you select exactly the implementation you intend to send or receive.
/// Scope
/// The ActivityReportRequest message is sent by any party involved in a transaction to the matching application.
/// This message is used to request a report on all transactions for which an activity has taken place within a given time span.
/// Usage
/// The ActivityReportRequest message can be sent
/// - at a pre-determined time. The message requests a report on all transactions that the requester is involved in and for which an activity has taken place within the last 24 hours.
/// - on demand. The message requests a report on all transactions that the requester is involved in and for which an activity has taken place within a time span specified by the requester.
/// </summary>
[Serializable]
[Description(@"Scope|The ActivityReportRequest message is sent by any party involved in a transaction to the matching application.|This message is used to request a report on all transactions for which an activity has taken place within a given time span.|Usage|The ActivityReportRequest message can be sent|- at a pre-determined time. The message requests a report on all transactions that the requester is involved in and for which an activity has taken place within the last 24 hours.|- on demand. The message requests a report on all transactions that the requester is involved in and for which an activity has taken place within a time span specified by the requester.")]
public partial record ActivityReportRequestV03 : IOuterRecord<ActivityReportRequestV03,ActivityReportRequestV03Document>
    ,IIsoXmlSerilizable<ActivityReportRequestV03>, ISerializeInsideARootElement
{
    
    /// <summary>
    /// The official ISO 20022 designation for this version of this message.
    /// </summary>
    public const string IsoIdentifier = "tsmt.003.001.03";
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "ActvtyReqRpt";
    
    /// <summary>
    /// The XML namespace in which this message is delivered.
    /// </summary>
    public static string IsoXmlNamspace => ActivityReportRequestV03Document.DocumentNamespace;
    
    #nullable enable
    /// <summary>
    /// Identifies the request message.
    /// </summary>
    [IsoId("_iE0UQdE8Ed-BzquC8wXy7w_1228841159")]
    [Description(@"Identifies the request message.")]
    [DataMember(Name="ReqId")]
    [XmlElement(ElementName="ReqId")]
    [Required]
    public required MessageIdentification1 RequestIdentification { get; init; }
    
    /// <summary>
    /// Specifies the entities of the submitter for which the activities have to be reported.
    /// </summary>
    [IsoId("_iE0UQtE8Ed-BzquC8wXy7w_1228841591")]
    [Description(@"Specifies the entities of the submitter for which the activities have to be reported.")]
    [DataMember(Name="NttiesToBeRptd")]
    [XmlElement(ElementName="NttiesToBeRptd")]
    public BICIdentification1? EntitiesToBeReported { get; init; }
    
    /// <summary>
    /// Specifies the period for which activities have to be reported.
    /// </summary>
    [IsoId("_iE0UQ9E8Ed-BzquC8wXy7w_1228841529")]
    [Description(@"Specifies the period for which activities have to be reported.")]
    [DataMember(Name="RptPrd")]
    [XmlElement(ElementName="RptPrd")]
    [Required]
    public required DateTimePeriodDetails1 ReportPeriod { get; init; }
    
    #nullable disable
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="ActivityReportRequestV03Document"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public ActivityReportRequestV03Document ToDocument()
    {
        return new ActivityReportRequestV03Document { Message = this };
    }
    public static XName RootElement => Helper.CreateXName("ActvtyReqRpt");
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "ReqId", xmlNamespace );
        RequestIdentification.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (EntitiesToBeReported is BICIdentification1 EntitiesToBeReportedValue)
        {
            writer.WriteStartElement(null, "NttiesToBeRptd", xmlNamespace );
            EntitiesToBeReportedValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        writer.WriteStartElement(null, "RptPrd", xmlNamespace );
        ReportPeriod.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
    }
    public static ActivityReportRequestV03 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}

/// <summary>
/// This is the outer document that contains the XML serialization wrapper and necessary namespaces for proper serialization.
/// For a more complete description of the business meaning of the message, see the underlying <seealso cref="ActivityReportRequestV03"/>.
/// </summary>
[Serializable]
public partial record ActivityReportRequestV03Document : IOuterDocument<ActivityReportRequestV03>, IXmlSerializable
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:tsmt.003.001.03";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "Document";
    
    /// <summary>
    /// The instance of <seealso cref="ActivityReportRequestV03"/> is required.
    /// </summary>
    [DataMember(Name=ActivityReportRequestV03.XmlTag)]
    public required ActivityReportRequestV03 Message { get; init; }
    public void WriteXml(XmlWriter writer)
    {
        writer.WriteStartElement(null, DocumentElementName, DocumentNamespace );
        writer.WriteStartElement(ActivityReportRequestV03.XmlTag);
        Message.Serialize(writer, DocumentNamespace);
        writer.WriteEndElement();
        writer.WriteEndElement();
        writer.WriteEndDocument();
    }
    
    public void ReadXml(XmlReader reader)
    {
        throw new NotImplementedException();
    }
    
    public System.Xml.Schema.XmlSchema GetSchema() => null;
}
