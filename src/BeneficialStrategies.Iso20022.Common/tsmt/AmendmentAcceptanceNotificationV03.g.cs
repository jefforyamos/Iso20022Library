//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for AmendmentAcceptanceNotificationV03.  ISO2002 ID# _jX9-MNE8Ed-BzquC8wXy7w_-872944832.
//
namespace BeneficialStrategies.Iso20022.tsmt;

/// <summary>
/// Scope
/// The AmendmentAcceptanceNotification message is sent by the matching application to the requester of an amendment.
/// This message is used to notify the acceptance of an amendment request.
/// Usage
/// The AmendmentAcceptanceNotification message can be sent by the matching application to pass on information about the acceptance of an amendment request that it has obtained through the receipt of an AmendmentAcceptance message.
/// In order to pass on information about the rejection of an amendment request the matching application sends an AmendmentRejectionNotification message.
/// </summary>
[Serializable]
[DataContract(Name = XmlTag)]
[XmlType(TypeName = XmlTag)]
[Description(@"Scope|The AmendmentAcceptanceNotification message is sent by the matching application to the requester of an amendment.|This message is used to notify the acceptance of an amendment request.|Usage|The AmendmentAcceptanceNotification message can be sent by the matching application to pass on information about the acceptance of an amendment request that it has obtained through the receipt of an AmendmentAcceptance message.|In order to pass on information about the rejection of an amendment request the matching application sends an AmendmentRejectionNotification message.")]
public partial record AmendmentAcceptanceNotificationV03 : IOuterRecord
{
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "AmdmntAccptncNtfctn";
    
    /* ------------------------------------------ Underlying data types not ready yet
    public required string SomeProperty { get; init; }
    */
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="AmendmentAcceptanceNotificationV03Document"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public AmendmentAcceptanceNotificationV03Document ToDocument()
    {
        return new AmendmentAcceptanceNotificationV03Document { Message = this };
    }
}

/// <summary>
/// Scope
/// The AmendmentAcceptanceNotification message is sent by the matching application to the requester of an amendment.
/// This message is used to notify the acceptance of an amendment request.
/// Usage
/// The AmendmentAcceptanceNotification message can be sent by the matching application to pass on information about the acceptance of an amendment request that it has obtained through the receipt of an AmendmentAcceptance message.
/// In order to pass on information about the rejection of an amendment request the matching application sends an AmendmentRejectionNotification message.
/// This is the outer document that contains <seealso cref="AmendmentAcceptanceNotificationV03"/>.
/// </summary>
[Serializable]
[DataContract(Name = DocumentElementName, Namespace = DocumentNamespace )]
[XmlRoot(ElementName = DocumentElementName, Namespace = DocumentNamespace )]
public partial record AmendmentAcceptanceNotificationV03Document : IOuterDocument<AmendmentAcceptanceNotificationV03>
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:tsmt.006.001.03";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "Document";
    
    /// <summary>
    /// The instance of <seealso cref="AmendmentAcceptanceNotificationV03"/> is required.
    /// </summary>
    public required AmendmentAcceptanceNotificationV03 Message { get; init; }
}
