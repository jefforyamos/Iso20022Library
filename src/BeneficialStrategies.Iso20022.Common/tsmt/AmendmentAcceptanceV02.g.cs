//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for AmendmentAcceptanceV02.  ISO2002 ID# _j0IVwtE8Ed-BzquC8wXy7w_1561210255.
//
namespace BeneficialStrategies.Iso20022.tsmt;

/// <summary>
/// Scope
/// The AmendmentAcceptance message is sent by the party requested to accept or reject an amendment to the matching application.
/// The message is used to accept an amendment request.
/// Usage
/// The AmendmentAcceptance message can be sent by the party requested to accept or reject an amendment to inform that it accepts the requested amendment.
/// The message can be sent in response to a FullPushThroughReport and DeltaReport message conveying the details of a BaselineAmendmentRequest message.
/// The rejection of an amendment request can be achieved by sending an AmendmentRejection message.
/// </summary>
[Serializable]
[DataContract(Name = XmlTag)]
[XmlType(TypeName = XmlTag)]
[Description(@"Scope|The AmendmentAcceptance message is sent by the party requested to accept or reject an amendment to the matching application.|The message is used to accept an amendment request.|Usage|The AmendmentAcceptance message can be sent by the party requested to accept or reject an amendment to inform that it accepts the requested amendment.|The message can be sent in response to a FullPushThroughReport and DeltaReport message conveying the details of a BaselineAmendmentRequest message.|The rejection of an amendment request can be achieved by sending an AmendmentRejection message.")]
public partial record AmendmentAcceptanceV02 : IOuterRecord
{
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "AmdmntAccptnc";
    
    /* ------------------------------------------ Underlying data types not ready yet
    public required string SomeProperty { get; init; }
    */
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="AmendmentAcceptanceV02Document"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public AmendmentAcceptanceV02Document ToDocument()
    {
        return new AmendmentAcceptanceV02Document { Message = this };
    }
}

/// <summary>
/// Scope
/// The AmendmentAcceptance message is sent by the party requested to accept or reject an amendment to the matching application.
/// The message is used to accept an amendment request.
/// Usage
/// The AmendmentAcceptance message can be sent by the party requested to accept or reject an amendment to inform that it accepts the requested amendment.
/// The message can be sent in response to a FullPushThroughReport and DeltaReport message conveying the details of a BaselineAmendmentRequest message.
/// The rejection of an amendment request can be achieved by sending an AmendmentRejection message.
/// This is the outer document that contains <seealso cref="AmendmentAcceptanceV02"/>.
/// </summary>
[Serializable]
[DataContract(Name = DocumentElementName, Namespace = DocumentNamespace )]
[XmlRoot(ElementName = DocumentElementName, Namespace = DocumentNamespace )]
public partial record AmendmentAcceptanceV02Document : IOuterDocument<AmendmentAcceptanceV02>
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:tsmt.005.001.02";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "Document";
    
    /// <summary>
    /// The instance of <seealso cref="AmendmentAcceptanceV02"/> is required.
    /// </summary>
    public required AmendmentAcceptanceV02 Message { get; init; }
}
