//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for BaselineReSubmissionV04.  ISO2002 ID# _4PCl8dNTEeK-v49t1oWkNA.
//

using System.ComponentModel.DataAnnotations;
using BeneficialStrategies.Iso20022.Components;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;
using Helper = BeneficialStrategies.Iso20022.Framework.IsoXmlSerializationHelper<BeneficialStrategies.Iso20022.tsmt.BaselineReSubmissionV04>;

namespace BeneficialStrategies.Iso20022.tsmt;


/// <summary>
/// This record is an implementation of the tsmt.012.001.04 ISO standard message type.
/// There are significant differences between different variants of the same message. It is crucial that you select exactly the implementation you intend to send or receive.
/// Scope
/// The BaselineReSubmission message is sent by either the counterparty or the initiator of a transaction (baseline) to the matching application.
/// This message is used by the counterparty to respond on the registration of a push-through transaction in the matching application or by the initiator or counterparty to re-send earlier mis-matched baseline information.
/// Usage
/// The BaselineReSubmission message can be sent by the counterparty of a transaction to the matching application in response to a FullPushThroughReport message received from the matching application conveying the details of an InitialBaselineSubmission message. The objective of the BaselineReSubmission message sent in the outlined scenario is to achieve a successful match of two baseline initiation messages in order to establish a transaction in the matching application.
/// or
/// The BaselineReSubmission message can be sent by the initiator of a transaction to the matching application in response to a BaselineMatchReport message indicating mis-matches. The objective of the BaselineReSubmission message sent in the outlined scenario is to correct an InitialBaselineSubmission or BaselineReSubmission message submitted earlier in order to achieve the establishment of a transaction in the matching application.
/// or
/// The BaselineReSubmission message can be sent by the counterparty of a transaction to the matching application in response to a BaselineMatchReport message indicating mis-matches. The objective of the BaselineReSubmission message sent in the outlined scenario is to correct a BaselineReSubmission message submitted earlier in order to achieve the establishment of a transaction in the matching application.
/// </summary>
[Serializable]
[Description(@"Scope|The BaselineReSubmission message is sent by either the counterparty or the initiator of a transaction (baseline) to the matching application.|This message is used by the counterparty to respond on the registration of a push-through transaction in the matching application or by the initiator or counterparty to re-send earlier mis-matched baseline information.|Usage|The BaselineReSubmission message can be sent by the counterparty of a transaction to the matching application in response to a FullPushThroughReport message received from the matching application conveying the details of an InitialBaselineSubmission message. The objective of the BaselineReSubmission message sent in the outlined scenario is to achieve a successful match of two baseline initiation messages in order to establish a transaction in the matching application.|or|The BaselineReSubmission message can be sent by the initiator of a transaction to the matching application in response to a BaselineMatchReport message indicating mis-matches. The objective of the BaselineReSubmission message sent in the outlined scenario is to correct an InitialBaselineSubmission or BaselineReSubmission message submitted earlier in order to achieve the establishment of a transaction in the matching application.|or|The BaselineReSubmission message can be sent by the counterparty of a transaction to the matching application in response to a BaselineMatchReport message indicating mis-matches. The objective of the BaselineReSubmission message sent in the outlined scenario is to correct a BaselineReSubmission message submitted earlier in order to achieve the establishment of a transaction in the matching application.")]
public partial record BaselineReSubmissionV04 : IOuterRecord<BaselineReSubmissionV04,BaselineReSubmissionV04Document>
    ,IIsoXmlSerilizable<BaselineReSubmissionV04>, ISerializeInsideARootElement
{
    
    /// <summary>
    /// The official ISO 20022 designation for this version of this message.
    /// </summary>
    public const string IsoIdentifier = "tsmt.012.001.04";
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "BaselnReSubmissn";
    
    /// <summary>
    /// The XML namespace in which this message is delivered.
    /// </summary>
    public static string IsoXmlNamspace => BaselineReSubmissionV04Document.DocumentNamespace;
    
    #nullable enable
    /// <summary>
    /// Identifies the submitted information.
    /// </summary>
    [IsoId("_4PDNA9NTEeK-v49t1oWkNA")]
    [Description(@"Identifies the submitted information.")]
    [DataMember(Name="SubmissnId")]
    [XmlElement(ElementName="SubmissnId")]
    [Required]
    public required MessageIdentification1 SubmissionIdentification { get; init; }
    
    /// <summary>
    /// Unique identification assigned by the matching application to the transaction.|This identification is to be used in any communication between the parties.
    /// </summary>
    [IsoId("_4PDNBdNTEeK-v49t1oWkNA")]
    [Description(@"Unique identification assigned by the matching application to the transaction.|This identification is to be used in any communication between the parties.")]
    [DataMember(Name="TxId")]
    [XmlElement(ElementName="TxId")]
    [Required]
    public required SimpleIdentificationInformation TransactionIdentification { get; init; }
    
    /// <summary>
    /// Reference to the transaction for the requesting financial institution.
    /// </summary>
    [IsoId("_4PDNB9NTEeK-v49t1oWkNA")]
    [Description(@"Reference to the transaction for the requesting financial institution.")]
    [DataMember(Name="SubmitrTxRef")]
    [XmlElement(ElementName="SubmitrTxRef")]
    public SimpleIdentificationInformation? SubmitterTransactionReference { get; init; }
    
    /// <summary>
    /// Specifies the commercial details of the underlying transaction.
    /// </summary>
    [IsoId("_4PDNCdNTEeK-v49t1oWkNA")]
    [Description(@"Specifies the commercial details of the underlying transaction.")]
    [DataMember(Name="Baseln")]
    [XmlElement(ElementName="Baseln")]
    [Required]
    public required Baseline4 Baseline { get; init; }
    
    /// <summary>
    /// Person to be contacted in the organisation of the buyer.
    /// </summary>
    [IsoId("_4PDNC9NTEeK-v49t1oWkNA")]
    [Description(@"Person to be contacted in the organisation of the buyer.")]
    [DataMember(Name="BuyrCtctPrsn")]
    [XmlElement(ElementName="BuyrCtctPrsn")]
    public ContactIdentification1? BuyerContactPerson { get; init; }
    
    /// <summary>
    /// Person to be contacted in the organisation of the seller.
    /// </summary>
    [IsoId("_4PDNDdNTEeK-v49t1oWkNA")]
    [Description(@"Person to be contacted in the organisation of the seller.")]
    [DataMember(Name="SellrCtctPrsn")]
    [XmlElement(ElementName="SellrCtctPrsn")]
    public ContactIdentification1? SellerContactPerson { get; init; }
    
    /// <summary>
    /// Person to be contacted in the seller's bank or buyer's bank.
    /// </summary>
    [IsoId("_4ljBcDAZEeOKib24wnHaFg")]
    [Description(@"Person to be contacted in the seller's bank or buyer's bank.")]
    [DataMember(Name="BkCtctPrsn")]
    [XmlElement(ElementName="BkCtctPrsn")]
    [Required]
    public required BankContactPerson1Choice_ BankContactPerson { get; init; }
    
    /// <summary>
    /// Person to be contacted in another bank than the seller or buyer's bank.
    /// </summary>
    [IsoId("_4PDNE9NTEeK-v49t1oWkNA")]
    [Description(@"Person to be contacted in another bank than the seller or buyer's bank.")]
    [DataMember(Name="OthrBkCtctPrsn")]
    [XmlElement(ElementName="OthrBkCtctPrsn")]
    public ContactIdentification3? OtherBankContactPerson { get; init; }
    
    #nullable disable
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="BaselineReSubmissionV04Document"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public BaselineReSubmissionV04Document ToDocument()
    {
        return new BaselineReSubmissionV04Document { Message = this };
    }
    public static XName RootElement => Helper.CreateXName("BaselnReSubmissn");
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "SubmissnId", xmlNamespace );
        SubmissionIdentification.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "TxId", xmlNamespace );
        TransactionIdentification.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (SubmitterTransactionReference is SimpleIdentificationInformation SubmitterTransactionReferenceValue)
        {
            writer.WriteStartElement(null, "SubmitrTxRef", xmlNamespace );
            SubmitterTransactionReferenceValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        writer.WriteStartElement(null, "Baseln", xmlNamespace );
        Baseline.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (BuyerContactPerson is ContactIdentification1 BuyerContactPersonValue)
        {
            writer.WriteStartElement(null, "BuyrCtctPrsn", xmlNamespace );
            BuyerContactPersonValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        if (SellerContactPerson is ContactIdentification1 SellerContactPersonValue)
        {
            writer.WriteStartElement(null, "SellrCtctPrsn", xmlNamespace );
            SellerContactPersonValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        writer.WriteStartElement(null, "BkCtctPrsn", xmlNamespace );
        BankContactPerson.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (OtherBankContactPerson is ContactIdentification3 OtherBankContactPersonValue)
        {
            writer.WriteStartElement(null, "OthrBkCtctPrsn", xmlNamespace );
            OtherBankContactPersonValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static BaselineReSubmissionV04 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}

/// <summary>
/// This is the outer document that contains the XML serialization wrapper and necessary namespaces for proper serialization.
/// For a more complete description of the business meaning of the message, see the underlying <seealso cref="BaselineReSubmissionV04"/>.
/// </summary>
[Serializable]
public partial record BaselineReSubmissionV04Document : IOuterDocument<BaselineReSubmissionV04>, IXmlSerializable
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:tsmt.012.001.04";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "Document";
    
    /// <summary>
    /// The instance of <seealso cref="BaselineReSubmissionV04"/> is required.
    /// </summary>
    [DataMember(Name=BaselineReSubmissionV04.XmlTag)]
    public required BaselineReSubmissionV04 Message { get; init; }
    public void WriteXml(XmlWriter writer)
    {
        writer.WriteStartElement(null, DocumentElementName, DocumentNamespace );
        writer.WriteStartElement(BaselineReSubmissionV04.XmlTag);
        Message.Serialize(writer, DocumentNamespace);
        writer.WriteEndElement();
        writer.WriteEndElement();
        writer.WriteEndDocument();
    }
    
    public void ReadXml(XmlReader reader)
    {
        throw new NotImplementedException();
    }
    
    public System.Xml.Schema.XmlSchema GetSchema() => null;
}
