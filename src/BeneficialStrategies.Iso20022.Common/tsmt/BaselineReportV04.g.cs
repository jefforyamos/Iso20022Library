//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for BaselineReportV04.  ISO2002 ID# _1IisAQy4EeS3puOfnJm56A.
//
namespace BeneficialStrategies.Iso20022.tsmt;

/// <summary>
/// Scope
/// The BaselineReport message is sent by the matching application to the parties involved in an amendment request or to the parties involved in a data set match.
/// The message is used to report either a pre-calculation or final calculation of the dynamic part of an established baseline.
/// Usage
/// The BaselineReport message can be sent by the matching application to the parties involved in an amendment request for a transaction established in the push-through mode. In the outlined scenario, the message is sent
/// - to the party requested to accept or reject an amendment request after the matching application has received a BaselineAmendmentRequest message. The message informs about the provisional status of the dynamic part of the baseline.
/// - to the requester and the accepter of an amendment request after the matching application has received an AmendmentAcceptance message conveying the acceptance of the amendment request. The message informs about the actual status of the dynamic part of the baseline.
/// or
/// The BaselineReport message can be sent by the matching application to the party which has sent an amendment request for a transaction established in the lodge mode. In the outlined scenario the message is used to inform about the actual status of the dynamic part of the baseline.
/// or
/// The BaselineReport message can be sent by the matching application to the parties involved in a data set match. In the outlined scenario, the message is sent
/// - to the submitter of the data set(s) in the case of a data set match for a transaction established in the lodge mode.
/// - to the submitter of the data set(s) and to the counterparty in case of a data set match for a transaction established in the push-through mode.The message can be sent after a successful data-set match or after the acceptance of mis-matched data sets to inform about the actual status of the dynamic part of the baseline.
/// </summary>
[Serializable]
[DataContract(Name = XmlTag)]
[XmlType(TypeName = XmlTag)]
[Description(@"Scope|The BaselineReport message is sent by the matching application to the parties involved in an amendment request or to the parties involved in a data set match.|The message is used to report either a pre-calculation or final calculation of the dynamic part of an established baseline.|Usage|The BaselineReport message can be sent by the matching application to the parties involved in an amendment request for a transaction established in the push-through mode. In the outlined scenario, the message is sent|- to the party requested to accept or reject an amendment request after the matching application has received a BaselineAmendmentRequest message. The message informs about the provisional status of the dynamic part of the baseline.|- to the requester and the accepter of an amendment request after the matching application has received an AmendmentAcceptance message conveying the acceptance of the amendment request. The message informs about the actual status of the dynamic part of the baseline.|or|The BaselineReport message can be sent by the matching application to the party which has sent an amendment request for a transaction established in the lodge mode. In the outlined scenario the message is used to inform about the actual status of the dynamic part of the baseline.|or|The BaselineReport message can be sent by the matching application to the parties involved in a data set match. In the outlined scenario, the message is sent|- to the submitter of the data set(s) in the case of a data set match for a transaction established in the lodge mode.|- to the submitter of the data set(s) and to the counterparty in case of a data set match for a transaction established in the push-through mode.The message can be sent after a successful data-set match or after the acceptance of mis-matched data sets to inform about the actual status of the dynamic part of the baseline.")]
public partial record BaselineReportV04 : IOuterRecord
{
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "BaselnRpt";
    
    /* ------------------------------------------ Underlying data types not ready yet
    /// <summary>
    /// Identifies the report.
    /// </summary>
    [IsoId("_1IisAwy4EeS3puOfnJm56A")]
    [Description(@"Identifies the report.")]
    [DataMember(Name="RptId")]
    [XmlElement(ElementName="RptId")]
    [Required]
    public required MessageIdentification1 ReportIdentification { get; init; }
    
    /// <summary>
    /// Reference to the related message at the origin of the report or sent at the same time than the report.
    /// </summary>
    [IsoId("_1IisBQy4EeS3puOfnJm56A")]
    [Description(@"Reference to the related message at the origin of the report or sent at the same time than the report.")]
    [DataMember(Name="RltdMsgRef")]
    [XmlElement(ElementName="RltdMsgRef")]
    public MessageIdentification1? RelatedMessageReference { get; init; }
    
    /// <summary>
    /// Type of baseline report.
    /// </summary>
    [IsoId("_1IisBwy4EeS3puOfnJm56A")]
    [Description(@"Type of baseline report.")]
    [DataMember(Name="RptTp")]
    [XmlElement(ElementName="RptTp")]
    [Required]
    public required ReportType2 ReportType { get; init; }
    
    /// <summary>
    /// Unique identification assigned by the matching application to the transaction.|This identification is to be used in any communication between the parties.|.
    /// </summary>
    [IsoId("_1IisCQy4EeS3puOfnJm56A")]
    [Description(@"Unique identification assigned by the matching application to the transaction.|This identification is to be used in any communication between the parties.|.")]
    [DataMember(Name="TxId")]
    [XmlElement(ElementName="TxId")]
    [Required]
    public required SimpleIdentificationInformation TransactionIdentification { get; init; }
    
    /// <summary>
    /// Unique identification assigned by the matching application to the baseline when it is established.
    /// </summary>
    [IsoId("_1IisCwy4EeS3puOfnJm56A")]
    [Description(@"Unique identification assigned by the matching application to the baseline when it is established.")]
    [DataMember(Name="EstblishdBaselnId")]
    [XmlElement(ElementName="EstblishdBaselnId")]
    [Required]
    public required DocumentIdentification6 EstablishedBaselineIdentification { get; init; }
    
    /// <summary>
    /// Identifies the status of the transaction by means of a code.
    /// </summary>
    [IsoId("_1IisDQy4EeS3puOfnJm56A")]
    [Description(@"Identifies the status of the transaction by means of a code.")]
    [DataMember(Name="TxSts")]
    [XmlElement(ElementName="TxSts")]
    [Required]
    public required TransactionStatus4 TransactionStatus { get; init; }
    
    /// <summary>
    /// Reference to the transaction for each financial institution which is a party to the transaction.
    /// </summary>
    [IsoId("_1IisDwy4EeS3puOfnJm56A")]
    [Description(@"Reference to the transaction for each financial institution which is a party to the transaction.")]
    [DataMember(Name="UsrTxRef")]
    [XmlElement(ElementName="UsrTxRef")]
    public required IReadonlyCollection<DocumentIdentification5> UserTransactionReference { get; init; } // Min=0, Max=2
    
    /// <summary>
    /// Party that buys goods or services, or a financial instrument.
    /// </summary>
    [IsoId("_1IisEQy4EeS3puOfnJm56A")]
    [Description(@"Party that buys goods or services, or a financial instrument.")]
    [DataMember(Name="Buyr")]
    [XmlElement(ElementName="Buyr")]
    [Required]
    public required PartyIdentification26 Buyer { get; init; }
    
    /// <summary>
    /// Party that sells goods or services, or a financial instrument.
    /// </summary>
    [IsoId("_1IisEwy4EeS3puOfnJm56A")]
    [Description(@"Party that sells goods or services, or a financial instrument.")]
    [DataMember(Name="Sellr")]
    [XmlElement(ElementName="Sellr")]
    [Required]
    public required PartyIdentification26 Seller { get; init; }
    
    /// <summary>
    /// The financial institution of the buyer, uniquely identified by its BIC.
    /// </summary>
    [IsoId("_1IisFQy4EeS3puOfnJm56A")]
    [Description(@"The financial institution of the buyer, uniquely identified by its BIC.")]
    [DataMember(Name="BuyrBk")]
    [XmlElement(ElementName="BuyrBk")]
    [Required]
    public required BICIdentification1 BuyerBank { get; init; }
    
    /// <summary>
    /// The financial institution of the seller, uniquely identified by its BIC.
    /// </summary>
    [IsoId("_1IisFwy4EeS3puOfnJm56A")]
    [Description(@"The financial institution of the seller, uniquely identified by its BIC.")]
    [DataMember(Name="SellrBk")]
    [XmlElement(ElementName="SellrBk")]
    [Required]
    public required BICIdentification1 SellerBank { get; init; }
    
    /// <summary>
    /// Information on the goods.
    /// </summary>
    [IsoId("_1IisGQy4EeS3puOfnJm56A")]
    [Description(@"Information on the goods.")]
    [DataMember(Name="RptdLineItm")]
    [XmlElement(ElementName="RptdLineItm")]
    [Required]
    public required LineItem14 ReportedLineItem { get; init; }
    
    /// <summary>
    /// Information on the next processing step required.
    /// </summary>
    [IsoId("_1IisGwy4EeS3puOfnJm56A")]
    [Description(@"Information on the next processing step required.")]
    [DataMember(Name="ReqForActn")]
    [XmlElement(ElementName="ReqForActn")]
    public PendingActivity2? RequestForAction { get; init; }
    
    */
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="BaselineReportV04Document"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public BaselineReportV04Document ToDocument()
    {
        return new BaselineReportV04Document { Message = this };
    }
}

/// <summary>
/// This is the outer document that contains the XML serialization wrapper and necessary namespaces for proper serialization.
/// For a more complete description of the business meaning of the message, see the underlying <seealso cref="BaselineReportV04"/>.
/// </summary>
[Serializable]
[DataContract(Name = DocumentElementName, Namespace = DocumentNamespace )]
[XmlRoot(ElementName = DocumentElementName, Namespace = DocumentNamespace )]
public partial record BaselineReportV04Document : IOuterDocument<BaselineReportV04>
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:tsmt.011.001.04";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "Document";
    
    /// <summary>
    /// The instance of <seealso cref="BaselineReportV04"/> is required.
    /// </summary>
    public required BaselineReportV04 Message { get; init; }
}
