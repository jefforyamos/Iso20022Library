//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for ErrorReportV03.  ISO2002 ID# _oHDjhdE8Ed-BzquC8wXy7w_-1687018808.
//
namespace BeneficialStrategies.Iso20022.tsmt;

/// <summary>
/// Scope
/// The ErrorReport message is sent by the matching application to the party from which it received a message.
/// This message is used to inform about the inability of the matching application to process a received message.
/// Usage
/// The ErrorReport message can be sent to a party from which the matching application received a message to inform about its inability to process the received message because
/// - the syntax of the message is incorrect,or
/// - the message content is inconsistent,or
/// - according to the workflow implemented in the matching application, it did not expect the received message.
/// </summary>
[Serializable]
[DataContract(Name = XmlTag)]
[XmlType(TypeName = XmlTag)]
[Description(@"Scope|The ErrorReport message is sent by the matching application to the party from which it received a message.|This message is used to inform about the inability of the matching application to process a received message.|Usage|The ErrorReport message can be sent to a party from which the matching application received a message to inform about its inability to process the received message because|- the syntax of the message is incorrect,or|- the message content is inconsistent,or|- according to the workflow implemented in the matching application, it did not expect the received message.")]
public partial record ErrorReportV03 : IOuterRecord
{
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "ErrRpt";
    
    /* ------------------------------------------ Underlying data types not ready yet
    public required string SomeProperty { get; init; }
    */
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="ErrorReportV03Document"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public ErrorReportV03Document ToDocument()
    {
        return new ErrorReportV03Document { Message = this };
    }
}

/// <summary>
/// Scope
/// The ErrorReport message is sent by the matching application to the party from which it received a message.
/// This message is used to inform about the inability of the matching application to process a received message.
/// Usage
/// The ErrorReport message can be sent to a party from which the matching application received a message to inform about its inability to process the received message because
/// - the syntax of the message is incorrect,or
/// - the message content is inconsistent,or
/// - according to the workflow implemented in the matching application, it did not expect the received message.
/// This is the outer document that contains <seealso cref="ErrorReportV03"/>.
/// </summary>
[Serializable]
[DataContract(Name = DocumentElementName, Namespace = DocumentNamespace )]
[XmlRoot(ElementName = DocumentElementName, Namespace = DocumentNamespace )]
public partial record ErrorReportV03Document : IOuterDocument<ErrorReportV03>
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:tsmt.016.001.03";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "Document";
    
    /// <summary>
    /// The instance of <seealso cref="ErrorReportV03"/> is required.
    /// </summary>
    public required ErrorReportV03 Message { get; init; }
}
