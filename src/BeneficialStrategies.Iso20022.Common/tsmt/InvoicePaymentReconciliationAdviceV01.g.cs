//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for InvoicePaymentReconciliationAdviceV01.  ISO2002 ID# _OTgzNDc3-AOSNFX-8224506.
//

using System.ComponentModel.DataAnnotations;
using BeneficialStrategies.Iso20022.Components;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;
using Helper = BeneficialStrategies.Iso20022.Framework.IsoXmlSerializationHelper<BeneficialStrategies.Iso20022.tsmt.InvoicePaymentReconciliationAdviceV01>;

namespace BeneficialStrategies.Iso20022.tsmt;


/// <summary>
/// This record is an implementation of the tsmt.053.001.01 ISO standard message type.
/// There are significant differences between different variants of the same message. It is crucial that you select exactly the implementation you intend to send or receive.
/// The message InvoicePaymentReconciliationAdvice is sent by a payer to a payee to indicate attribution of payments to instalment of payment obligations in order to simplify the account netting or clearing when a lot of invoices are paid with a unique payment (for instance an SCT or an SDD).
/// The message contains references to payment instructions, may reference other messages and may include referenced data.
/// The message can carry digital signatures if required by context.
/// </summary>
[Serializable]
[Description(@"The message InvoicePaymentReconciliationAdvice is sent by a payer to a payee to indicate attribution of payments to instalment of payment obligations in order to simplify the account netting or clearing when a lot of invoices are paid with a unique payment (for instance an SCT or an SDD).|The message contains references to payment instructions, may reference other messages and may include referenced data.|The message can carry digital signatures if required by context.")]
public partial record InvoicePaymentReconciliationAdviceV01 : IOuterRecord<InvoicePaymentReconciliationAdviceV01,InvoicePaymentReconciliationAdviceV01Document>
    ,IIsoXmlSerilizable<InvoicePaymentReconciliationAdviceV01>, ISerializeInsideARootElement
{
    
    /// <summary>
    /// The official ISO 20022 designation for this version of this message.
    /// </summary>
    public const string IsoIdentifier = "tsmt.053.001.01";
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "InvcPmtRcncltnAdvc";
    
    /// <summary>
    /// The XML namespace in which this message is delivered.
    /// </summary>
    public static string IsoXmlNamspace => InvoicePaymentReconciliationAdviceV01Document.DocumentNamespace;
    
    #nullable enable
    /// <summary>
    /// Set of characteristics that unambiguously identify the letter, common parameters, documents and identifications.
    /// </summary>
    [IsoId("_OTgzNDc4-AOSNFX-8224506")]
    [Description(@"Set of characteristics that unambiguously identify the letter, common parameters, documents and identifications.")]
    [DataMember(Name="Hdr")]
    [XmlElement(ElementName="Hdr")]
    [Required]
    public required BusinessLetter1 Header { get; init; }
    
    /// <summary>
    /// List of payment reconciliation information.
    /// </summary>
    [IsoId("_OTgzNDc5-AOSNFX-8224506")]
    [Description(@"List of payment reconciliation information.")]
    [DataMember(Name="RcncltnList")]
    [XmlElement(ElementName="RcncltnList")]
    [Required]
    public required ReconciliationList1 ReconciliationList { get; init; }
    
    /// <summary>
    /// Number of reconciliation lists as control value.
    /// </summary>
    [IsoId("_OTgzNDgw-AOSNFX-8224506")]
    [Description(@"Number of reconciliation lists as control value.")]
    [DataMember(Name="RcncltnCnt")]
    [XmlElement(ElementName="RcncltnCnt")]
    public IsoMax15NumericText? ReconciliationCount { get; init; }
    
    /// <summary>
    /// Total number of individual items in all lists.
    /// </summary>
    [IsoId("_OTgzNDgx-AOSNFX-8224506")]
    [Description(@"Total number of individual items in all lists.")]
    [DataMember(Name="ItmCnt")]
    [XmlElement(ElementName="ItmCnt")]
    public IsoMax15NumericText? ItemCount { get; init; }
    
    /// <summary>
    /// Total of all individual amounts included in all lists, irrespective of currencies or direction.
    /// </summary>
    [IsoId("OTgzNDgy-AOSNFX-8224506")]
    [Description(@"Total of all individual amounts included in all lists, irrespective of currencies or direction.")]
    [DataMember(Name="CtrlSum")]
    [XmlElement(ElementName="CtrlSum")]
    public IsoDecimalNumber? ControlSum { get; init; }
    
    /// <summary>
    /// Referenced or related business message.
    /// </summary>
    [IsoId("_OTgzNDgz-AOSNFX-8224506")]
    [Description(@"Referenced or related business message.")]
    [DataMember(Name="AttchdMsg")]
    [XmlElement(ElementName="AttchdMsg")]
    public EncapsulatedBusinessMessage1? AttachedMessage { get; init; }
    
    #nullable disable
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="InvoicePaymentReconciliationAdviceV01Document"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public InvoicePaymentReconciliationAdviceV01Document ToDocument()
    {
        return new InvoicePaymentReconciliationAdviceV01Document { Message = this };
    }
    public static XName RootElement => Helper.CreateXName("InvcPmtRcncltnAdvc");
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "Hdr", xmlNamespace );
        Header.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "RcncltnList", xmlNamespace );
        ReconciliationList.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (ReconciliationCount is IsoMax15NumericText ReconciliationCountValue)
        {
            writer.WriteStartElement(null, "RcncltnCnt", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax15NumericText(ReconciliationCountValue)); // data type Max15NumericText System.String
            writer.WriteEndElement();
        }
        if (ItemCount is IsoMax15NumericText ItemCountValue)
        {
            writer.WriteStartElement(null, "ItmCnt", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoMax15NumericText(ItemCountValue)); // data type Max15NumericText System.String
            writer.WriteEndElement();
        }
        if (ControlSum is IsoDecimalNumber ControlSumValue)
        {
            writer.WriteStartElement(null, "CtrlSum", xmlNamespace );
            writer.WriteValue(SerializationFormatter.IsoDecimalNumber(ControlSumValue)); // data type DecimalNumber System.UInt64
            writer.WriteEndElement();
        }
        if (AttachedMessage is EncapsulatedBusinessMessage1 AttachedMessageValue)
        {
            writer.WriteStartElement(null, "AttchdMsg", xmlNamespace );
            AttachedMessageValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
    }
    public static InvoicePaymentReconciliationAdviceV01 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}

/// <summary>
/// This is the outer document that contains the XML serialization wrapper and necessary namespaces for proper serialization.
/// For a more complete description of the business meaning of the message, see the underlying <seealso cref="InvoicePaymentReconciliationAdviceV01"/>.
/// </summary>
[Serializable]
public partial record InvoicePaymentReconciliationAdviceV01Document : IOuterDocument<InvoicePaymentReconciliationAdviceV01>, IXmlSerializable
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:tsmt.053.001.01";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "Document";
    
    /// <summary>
    /// The instance of <seealso cref="InvoicePaymentReconciliationAdviceV01"/> is required.
    /// </summary>
    [DataMember(Name=InvoicePaymentReconciliationAdviceV01.XmlTag)]
    public required InvoicePaymentReconciliationAdviceV01 Message { get; init; }
    public void WriteXml(XmlWriter writer)
    {
        writer.WriteStartElement(null, DocumentElementName, DocumentNamespace );
        writer.WriteStartElement(InvoicePaymentReconciliationAdviceV01.XmlTag);
        Message.Serialize(writer, DocumentNamespace);
        writer.WriteEndElement();
        writer.WriteEndElement();
        writer.WriteEndDocument();
    }
    
    public void ReadXml(XmlReader reader)
    {
        throw new NotImplementedException();
    }
    
    public System.Xml.Schema.XmlSchema GetSchema() => null;
}
