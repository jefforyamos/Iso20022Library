//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for StatusExtensionRequestAcceptanceV03.  ISO2002 ID# _y25KUNE8Ed-BzquC8wXy7w_844950216.
//

using System.ComponentModel.DataAnnotations;
using BeneficialStrategies.Iso20022.Components;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;
using Helper = BeneficialStrategies.Iso20022.Framework.IsoXmlSerializationHelper<BeneficialStrategies.Iso20022.tsmt.StatusExtensionRequestAcceptanceV03>;

namespace BeneficialStrategies.Iso20022.tsmt;


/// <summary>
/// This record is an implementation of the tsmt.031.001.03 ISO standard message type.
/// There are significant differences between different variants of the same message. It is crucial that you select exactly the implementation you intend to send or receive.
/// Scope
/// The StatusExtensionRequestAcceptance message is sent by the party requested to accept or reject a request to extend the status of a transaction to the matching application.
/// This message is used to inform about the acceptance of a request to extend the status of a transaction.
/// Usage
/// The StatusExtensionRequestAcceptance message can be sent by the party requested to accept or reject the request to extend the status of a transaction to inform that it accepts the request.
/// The message can be sent in response to a StatusExtensionRequestNotification message.
/// The rejection of a request to extend the status of a transaction can be achieved by sending a StatusExtensionRequestRejection message.
/// </summary>
[Serializable]
[Description(@"Scope|The StatusExtensionRequestAcceptance message is sent by the party requested to accept or reject a request to extend the status of a transaction to the matching application.|This message is used to inform about the acceptance of a request to extend the status of a transaction.|Usage|The StatusExtensionRequestAcceptance message can be sent by the party requested to accept or reject the request to extend the status of a transaction to inform that it accepts the request.|The message can be sent in response to a StatusExtensionRequestNotification message.|The rejection of a request to extend the status of a transaction can be achieved by sending a StatusExtensionRequestRejection message.")]
public partial record StatusExtensionRequestAcceptanceV03 : IOuterRecord<StatusExtensionRequestAcceptanceV03,StatusExtensionRequestAcceptanceV03Document>
    ,IIsoXmlSerilizable<StatusExtensionRequestAcceptanceV03>, ISerializeInsideARootElement
{
    
    /// <summary>
    /// The official ISO 20022 designation for this version of this message.
    /// </summary>
    public const string IsoIdentifier = "tsmt.031.001.03";
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "StsXtnsnReqAccptnc";
    
    /// <summary>
    /// The XML namespace in which this message is delivered.
    /// </summary>
    public static string IsoXmlNamspace => StatusExtensionRequestAcceptanceV03Document.DocumentNamespace;
    
    #nullable enable
    /// <summary>
    /// Identifies the acceptance message.
    /// </summary>
    [IsoId("_y25KUdE8Ed-BzquC8wXy7w_844950227")]
    [Description(@"Identifies the acceptance message.")]
    [DataMember(Name="AccptncId")]
    [XmlElement(ElementName="AccptncId")]
    [Required]
    public required MessageIdentification1 AcceptanceIdentification { get; init; }
    
    /// <summary>
    /// Unique identification assigned by the matching application to the transaction.|This identification is to be used in any communication between the parties.|.
    /// </summary>
    [IsoId("_y25KUtE8Ed-BzquC8wXy7w_844950247")]
    [Description(@"Unique identification assigned by the matching application to the transaction.|This identification is to be used in any communication between the parties.|.")]
    [DataMember(Name="TxId")]
    [XmlElement(ElementName="TxId")]
    [Required]
    public required SimpleIdentificationInformation TransactionIdentification { get; init; }
    
    /// <summary>
    /// Reference to the transaction for the requesting financial institution.
    /// </summary>
    [IsoId("_y25KU9E8Ed-BzquC8wXy7w_844950309")]
    [Description(@"Reference to the transaction for the requesting financial institution.")]
    [DataMember(Name="SubmitrTxRef")]
    [XmlElement(ElementName="SubmitrTxRef")]
    public SimpleIdentificationInformation? SubmitterTransactionReference { get; init; }
    
    /// <summary>
    /// Identifies the status for which the user accepts an extension of the validity period.
    /// </summary>
    [IsoId("_y25KVNE8Ed-BzquC8wXy7w_844950278")]
    [Description(@"Identifies the status for which the user accepts an extension of the validity period.")]
    [DataMember(Name="XtndedSts")]
    [XmlElement(ElementName="XtndedSts")]
    [Required]
    public required TransactionStatus4 ExtendedStatus { get; init; }
    
    #nullable disable
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="StatusExtensionRequestAcceptanceV03Document"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public StatusExtensionRequestAcceptanceV03Document ToDocument()
    {
        return new StatusExtensionRequestAcceptanceV03Document { Message = this };
    }
    public static XName RootElement => Helper.CreateXName("StsXtnsnReqAccptnc");
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "AccptncId", xmlNamespace );
        AcceptanceIdentification.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "TxId", xmlNamespace );
        TransactionIdentification.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        if (SubmitterTransactionReference is SimpleIdentificationInformation SubmitterTransactionReferenceValue)
        {
            writer.WriteStartElement(null, "SubmitrTxRef", xmlNamespace );
            SubmitterTransactionReferenceValue.Serialize(writer, xmlNamespace);
            writer.WriteEndElement();
        }
        writer.WriteStartElement(null, "XtndedSts", xmlNamespace );
        ExtendedStatus.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
    }
    public static StatusExtensionRequestAcceptanceV03 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}

/// <summary>
/// This is the outer document that contains the XML serialization wrapper and necessary namespaces for proper serialization.
/// For a more complete description of the business meaning of the message, see the underlying <seealso cref="StatusExtensionRequestAcceptanceV03"/>.
/// </summary>
[Serializable]
public partial record StatusExtensionRequestAcceptanceV03Document : IOuterDocument<StatusExtensionRequestAcceptanceV03>, IXmlSerializable
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:tsmt.031.001.03";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "Document";
    
    /// <summary>
    /// The instance of <seealso cref="StatusExtensionRequestAcceptanceV03"/> is required.
    /// </summary>
    [DataMember(Name=StatusExtensionRequestAcceptanceV03.XmlTag)]
    public required StatusExtensionRequestAcceptanceV03 Message { get; init; }
    public void WriteXml(XmlWriter writer)
    {
        writer.WriteStartElement(null, DocumentElementName, DocumentNamespace );
        writer.WriteStartElement(StatusExtensionRequestAcceptanceV03.XmlTag);
        Message.Serialize(writer, DocumentNamespace);
        writer.WriteEndElement();
        writer.WriteEndElement();
        writer.WriteEndDocument();
    }
    
    public void ReadXml(XmlReader reader)
    {
        throw new NotImplementedException();
    }
    
    public System.Xml.Schema.XmlSchema GetSchema() => null;
}
