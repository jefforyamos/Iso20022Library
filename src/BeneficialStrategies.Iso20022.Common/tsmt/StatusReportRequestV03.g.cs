//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for StatusReportRequestV03.  ISO2002 ID# _0n_7mNE8Ed-BzquC8wXy7w_-619721878.
//
namespace BeneficialStrategies.Iso20022.tsmt;

/// <summary>
/// Scope
/// The StatusReportRequest message is sent by a party involved in a transaction to the matching application.
/// This message is used to request a report on the status of transactions registered in the matching application.
/// Usage
/// The StatusReportRequest message can be sent by either party involved in a transaction to request a report on the status and sub-statuses of all transactions that the requester is involved in.
/// The application will respond to the request by sending a StatusReport message.
/// </summary>
[Serializable]
[DataContract(Name = XmlTag)]
[XmlType(TypeName = XmlTag)]
[Description(@"Scope|The StatusReportRequest message is sent by a party involved in a transaction to the matching application.|This message is used to request a report on the status of transactions registered in the matching application.|Usage|The StatusReportRequest message can be sent by either party involved in a transaction to request a report on the status and sub-statuses of all transactions that the requester is involved in.|The application will respond to the request by sending a StatusReport message.")]
public partial record StatusReportRequestV03 : IOuterRecord
{
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "StsRptReq";
    
    /* ------------------------------------------ Underlying data types not ready yet
    /// <summary>
    /// Identifies the request message.
    /// </summary>
    [IsoId("_0n_7mdE8Ed-BzquC8wXy7w_-619721785")]
    [Description(@"Identifies the request message.")]
    [DataMember(Name="ReqId")]
    [XmlElement(ElementName="ReqId")]
    [Required]
    public required SomeRequestIdentificationRecord RequestIdentification { get; init; }
    
    /// <summary>
    /// Specifies the entities of the submitter for which the transactions have to be reported.
    /// </summary>
    [IsoId("_0n_7mtE8Ed-BzquC8wXy7w_-619721446")]
    [Description(@"Specifies the entities of the submitter for which the transactions have to be reported.")]
    [DataMember(Name="NttiesToBeRptd")]
    [XmlElement(ElementName="NttiesToBeRptd")]
    public SomeEntitiesToBeReportedRecord? EntitiesToBeReported { get; init; }
    
    */
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="StatusReportRequestV03Document"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public StatusReportRequestV03Document ToDocument()
    {
        return new StatusReportRequestV03Document { Message = this };
    }
}

/// <summary>
/// This is the outer document that contains the XML serialization wrapper and necessary namespaces for proper serialization.
/// For a more complete description of the business meaning of the message, see the underlying <seealso cref="StatusReportRequestV03"/>.
/// </summary>
[Serializable]
[DataContract(Name = DocumentElementName, Namespace = DocumentNamespace )]
[XmlRoot(ElementName = DocumentElementName, Namespace = DocumentNamespace )]
public partial record StatusReportRequestV03Document : IOuterDocument<StatusReportRequestV03>
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:tsmt.038.001.03";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "Document";
    
    /// <summary>
    /// The instance of <seealso cref="StatusReportRequestV03"/> is required.
    /// </summary>
    public required StatusReportRequestV03 Message { get; init; }
}
