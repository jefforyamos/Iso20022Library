//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for TransactionReportRequestV03.  ISO2002 ID# _15W1yNE8Ed-BzquC8wXy7w_-2039439363.
//

using System.ComponentModel.DataAnnotations;
using BeneficialStrategies.Iso20022.Components;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;
using System.Xml;
using System.Xml.Linq;
using Helper = BeneficialStrategies.Iso20022.Framework.IsoXmlSerializationHelper<BeneficialStrategies.Iso20022.tsmt.TransactionReportRequestV03>;

namespace BeneficialStrategies.Iso20022.tsmt;


/// <summary>
/// This record is an implementation of the tsmt.042.001.03 ISO standard message type.
/// There are significant differences between different variants of the same message. It is crucial that you select exactly the implementation you intend to send or receive.
/// Scope
/// The TransactionReportRequest message is sent by a party involved in a transaction to the matching application.
/// This message is used to request a report on details of transactions registered in the matching application.
/// Usage
/// The TransactionReportRequest message can be sent by either party involved in a transaction to request a report on a variety of details of all transactions that the requester is involved in. For example, the message can be used to request a report on all transactions that the requester is involved in with a certain customer.
/// </summary>
[Serializable]
[Description(@"Scope|The TransactionReportRequest message is sent by a party involved in a transaction to the matching application.|This message is used to request a report on details of transactions registered in the matching application.|Usage|The TransactionReportRequest message can be sent by either party involved in a transaction to request a report on a variety of details of all transactions that the requester is involved in. For example, the message can be used to request a report on all transactions that the requester is involved in with a certain customer.")]
public partial record TransactionReportRequestV03 : IOuterRecord<TransactionReportRequestV03,TransactionReportRequestV03Document>
    ,IIsoXmlSerilizable<TransactionReportRequestV03>, ISerializeInsideARootElement
{
    
    /// <summary>
    /// The official ISO 20022 designation for this version of this message.
    /// </summary>
    public const string IsoIdentifier = "tsmt.042.001.03";
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "TxRptReq";
    
    /// <summary>
    /// The XML namespace in which this message is delivered.
    /// </summary>
    public static string IsoXmlNamspace => TransactionReportRequestV03Document.DocumentNamespace;
    
    #nullable enable
    /// <summary>
    /// Identifies the request message.
    /// </summary>
    [IsoId("_15W1ydE8Ed-BzquC8wXy7w_-2039438961")]
    [Description(@"Identifies the request message.")]
    [DataMember(Name="ReqId")]
    [XmlElement(ElementName="ReqId")]
    [Required]
    public required MessageIdentification1 RequestIdentification { get; init; }
    
    /// <summary>
    /// Parameters to be used as criteria for the content of the transaction report.
    /// </summary>
    [IsoId("_15W1ytE8Ed-BzquC8wXy7w_-2039439323")]
    [Description(@"Parameters to be used as criteria for the content of the transaction report.")]
    [DataMember(Name="RptSpcfctn")]
    [XmlElement(ElementName="RptSpcfctn")]
    [Required]
    public required ReportSpecification4 ReportSpecification { get; init; }
    
    #nullable disable
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="TransactionReportRequestV03Document"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public TransactionReportRequestV03Document ToDocument()
    {
        return new TransactionReportRequestV03Document { Message = this };
    }
    public static XName RootElement => Helper.CreateXName("TxRptReq");
    
    /// <summary>
    /// Used to format the various primative types during serialization.
    /// </summary>
    public static SerializationFormatter SerializationFormatter { get; set; } = SerializationFormatter.GlobalInstance;
    
    /// <summary>
    /// Serializes the state of this record according to Iso20022 specifications.
    /// </summary>
    public void Serialize(XmlWriter writer, string xmlNamespace)
    {
        writer.WriteStartElement(null, "ReqId", xmlNamespace );
        RequestIdentification.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
        writer.WriteStartElement(null, "RptSpcfctn", xmlNamespace );
        ReportSpecification.Serialize(writer, xmlNamespace);
        writer.WriteEndElement();
    }
    public static TransactionReportRequestV03 Deserialize(XElement element)
    {
        throw new NotImplementedException();
    }
}

/// <summary>
/// This is the outer document that contains the XML serialization wrapper and necessary namespaces for proper serialization.
/// For a more complete description of the business meaning of the message, see the underlying <seealso cref="TransactionReportRequestV03"/>.
/// </summary>
[Serializable]
public partial record TransactionReportRequestV03Document : IOuterDocument<TransactionReportRequestV03>, IXmlSerializable
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:tsmt.042.001.03";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "Document";
    
    /// <summary>
    /// The instance of <seealso cref="TransactionReportRequestV03"/> is required.
    /// </summary>
    [DataMember(Name=TransactionReportRequestV03.XmlTag)]
    public required TransactionReportRequestV03 Message { get; init; }
    public void WriteXml(XmlWriter writer)
    {
        writer.WriteStartElement(null, DocumentElementName, DocumentNamespace );
        writer.WriteStartElement(TransactionReportRequestV03.XmlTag);
        Message.Serialize(writer, DocumentNamespace);
        writer.WriteEndElement();
        writer.WriteEndElement();
        writer.WriteEndDocument();
    }
    
    public void ReadXml(XmlReader reader)
    {
        throw new NotImplementedException();
    }
    
    public System.Xml.Schema.XmlSchema GetSchema() => null;
}
