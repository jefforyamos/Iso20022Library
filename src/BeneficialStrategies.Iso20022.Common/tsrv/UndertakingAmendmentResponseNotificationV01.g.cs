//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainMessageGenerator for UndertakingAmendmentResponseNotificationV01.  ISO2002 ID# _9iPoEnltEeG7BsjMvd1mEw_-78549695.
//

using System.ComponentModel.DataAnnotations;
using BeneficialStrategies.Iso20022.Components;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.ExternalSchema;
using BeneficialStrategies.Iso20022.UserDefined;

namespace BeneficialStrategies.Iso20022.tsrv;


/// <summary>
/// This record is an implementation of the tsrv.009.001.01 ISO standard message type.
/// There are significant differences between different variants of the same message. It is crucial that you select exactly the implementation you intend to send or receive.
/// The UndertakingAmendmentResponseNotification message is sent by the advising party to the party that issued the undertaking, either directly or via one or more other parties, to notify the recipient of the acceptance or rejection by the beneficiary of the amendment. On receipt of this message or the UndertakingAmendmentResponse message, the issuer may also send the UndertakingAmendmentResponseNotification to the applicant.
/// </summary>
[Serializable]
[DataContract(Name = XmlTag)]
[XmlType(TypeName = XmlTag)]
[Description(@"The UndertakingAmendmentResponseNotification message is sent by the advising party to the party that issued the undertaking, either directly or via one or more other parties, to notify the recipient of the acceptance or rejection by the beneficiary of the amendment. On receipt of this message or the UndertakingAmendmentResponse message, the issuer may also send the UndertakingAmendmentResponseNotification to the applicant.")]
public partial record UndertakingAmendmentResponseNotificationV01 : IOuterRecord
{
    
    /// <summary>
    /// The official ISO 20022 designation for this version of this message.
    /// </summary>
    public const string IsoIdentifier = "tsrv.009.001.01";
    
    /// <summary>
    /// The ISO specified XML tag that should be used for standardized serialization of this message.
    /// </summary>
    public const string XmlTag = "UdrtkgAmdmntRspnNtfctn";
    
    #nullable enable
    /// <summary>
    /// Details related to the proposed amendment response notification.
    /// </summary>
    [IsoId("_9iPoE3ltEeG7BsjMvd1mEw_-1088327263")]
    [Description(@"Details related to the proposed amendment response notification.")]
    [DataMember(Name="UdrtkgAmdmntRspnNtfctnDtls")]
    [XmlElement(ElementName="UdrtkgAmdmntRspnNtfctnDtls")]
    [Required]
    public required Amendment9 UndertakingAmendmentResponseNotificationDetails { get; init; }
    
    /// <summary>
    /// Additional information reported by the beneficiary.
    /// </summary>
    [IsoId("_Xldnk387EeGx884K2iQOLg")]
    [Description(@"Additional information reported by the beneficiary.")]
    [DataMember(Name="AddtlInf")]
    [XmlElement(ElementName="AddtlInf")]
    public IsoMax2000Text? AdditionalInformation { get; init; }
    
    /// <summary>
    /// Digital signature of the response notification.
    /// </summary>
    [IsoId("_9iPoFHltEeG7BsjMvd1mEw_1375957956")]
    [Description(@"Digital signature of the response notification.")]
    [DataMember(Name="DgtlSgntr")]
    [XmlElement(ElementName="DgtlSgntr")]
    public PartyAndSignature2? DigitalSignature { get; init; }
    
    #nullable disable
    
    /// <summary>
    /// Using the state of this record, returns a populated <seealso cref="UndertakingAmendmentResponseNotificationV01Document"/>, usually for the purpose of ISO20022 standard serialization.
    /// </summary>
    public UndertakingAmendmentResponseNotificationV01Document ToDocument()
    {
        return new UndertakingAmendmentResponseNotificationV01Document { Message = this };
    }
}

/// <summary>
/// This is the outer document that contains the XML serialization wrapper and necessary namespaces for proper serialization.
/// For a more complete description of the business meaning of the message, see the underlying <seealso cref="UndertakingAmendmentResponseNotificationV01"/>.
/// </summary>
[Serializable]
[DataContract(Name = DocumentElementName, Namespace = DocumentNamespace )]
[XmlRoot(ElementName = DocumentElementName, Namespace = DocumentNamespace )]
public partial record UndertakingAmendmentResponseNotificationV01Document : IOuterDocument<UndertakingAmendmentResponseNotificationV01>
{
    
    /// <summary>
    /// The ISO specified XML namespace that should be used for standardized serialization of this message type.
    /// </summary>
    public const string DocumentNamespace = "urn:iso:std:iso:20022:tech:xsd:tsrv.009.001.01";
    
    /// <summary>
    /// The ISO specified XML element name that must surround the inner content to achieve standardized serialization.
    /// </summary>
    public const string DocumentElementName = "Document";
    
    /// <summary>
    /// The instance of <seealso cref="UndertakingAmendmentResponseNotificationV01"/> is required.
    /// </summary>
    public required UndertakingAmendmentResponseNotificationV01 Message { get; init; }
}
